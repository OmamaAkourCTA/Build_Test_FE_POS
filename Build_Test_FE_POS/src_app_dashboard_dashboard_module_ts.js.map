{"version":3,"file":"src_app_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/layout/header/header.component.ts","./src/app/dashboard/layout/header/header.component.html","./src/app/dashboard/layout/modal-close-session/modal-close-session.component.ts","./src/app/dashboard/layout/modal-close-session/modal-close-session.component.html","./src/app/dashboard/layout/sidenav/logout.service.ts","./src/app/dashboard/layout/sidenav/sidenav.component.ts","./src/app/dashboard/layout/sidenav/sidenav.component.html","./src/app/dashboard/modules/cashier/close-register/services/close-register.service.ts","./src/app/dashboard/modules/cashier/opening-register/services/openregister.service.ts","./src/app/dashboard/no-menu/no-menu.component.ts","./src/app/services/signalR.service.ts","./src/app/services/subject.service.ts","./node_modules/@microsoft/signalr/dist/esm/AbortController.js","./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","./node_modules/@microsoft/signalr/dist/esm/DynamicImports.js","./node_modules/@microsoft/signalr/dist/esm/Errors.js","./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","./node_modules/@microsoft/signalr/dist/esm/HttpClient.js","./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","./node_modules/@microsoft/signalr/dist/esm/HubConnection.js","./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","./node_modules/@microsoft/signalr/dist/esm/ILogger.js","./node_modules/@microsoft/signalr/dist/esm/ITransport.js","./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","./node_modules/@microsoft/signalr/dist/esm/Loggers.js","./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","./node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js","./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","./node_modules/@microsoft/signalr/dist/esm/Subject.js","./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","./node_modules/@microsoft/signalr/dist/esm/Utils.js","./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","ignored|C:\\Users\\Omama_Akour\\source\\repos\\DX\\DX_FE\\DX_FE_POS\\DX_FE_POS\\node_modules\\@microsoft\\signalr\\dist\\esm|abort-controller","ignored|C:\\Users\\Omama_Akour\\source\\repos\\DX\\DX_FE\\DX_FE_POS\\DX_FE_POS\\node_modules\\@microsoft\\signalr\\dist\\esm|eventsource","ignored|C:\\Users\\Omama_Akour\\source\\repos\\DX\\DX_FE\\DX_FE_POS\\DX_FE_POS\\node_modules\\@microsoft\\signalr\\dist\\esm|fetch-cookie","ignored|C:\\Users\\Omama_Akour\\source\\repos\\DX\\DX_FE\\DX_FE_POS\\DX_FE_POS\\node_modules\\@microsoft\\signalr\\dist\\esm|node-fetch","ignored|C:\\Users\\Omama_Akour\\source\\repos\\DX\\DX_FE\\DX_FE_POS\\DX_FE_POS\\node_modules\\@microsoft\\signalr\\dist\\esm|tough-cookie","ignored|C:\\Users\\Omama_Akour\\source\\repos\\DX\\DX_FE\\DX_FE_POS\\DX_FE_POS\\node_modules\\@microsoft\\signalr\\dist\\esm|ws"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../services/auth.guard';\nimport { DashboardComponent } from './dashboard.component';\nimport { BankDepositsComponent } from './modules/main-fund/bank-deposits/bank-deposits.component';\nimport { NoMenuComponent } from './no-menu/no-menu.component';\n\nconst routes: Routes = [\n  // { path: '', redirectTo: '/branches', pathMatch: 'full' },\n  // { path: '', redirectTo: '/opening-register', pathMatch: 'full' },\n  {\n    path: '',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'branches',\n        loadChildren: () =>\n          import('./modules/admin/branches/branches.module').then(\n            (m) => m.BranchesModule\n          ),\n      },\n      {\n        path: 'main-fund',\n        loadChildren: () =>\n          import('./modules/main-fund/bank-deposits/bank-deposits.module').then(\n            (m) => m.BankDepositsModule\n          ),\n      },\n\n      {\n        path: 'branches',\n        loadChildren: () =>\n          import('./modules/admin/branches/branches.module').then(\n            (m) => m.BranchesModule\n          ),\n      },\n      {\n        path: 'registers',\n        loadChildren: () =>\n          import('./modules/admin/registers/registers.module').then(\n            (m) => m.RegistersModule\n          ),\n      },\n      {\n        path: 'roles',\n        loadChildren: () =>\n          import('./modules/admin/roles/roles.module').then(\n            (m) => m.RolesModule\n          ),\n      },\n      {\n        path: 'users',\n        loadChildren: () =>\n          import('./modules/admin/users/users.module').then(\n            (m) => m.UsersModule\n          ),\n      },\n      {\n        path: 'opening-register',\n        loadChildren: () =>\n          import(\n            './modules/cashier/opening-register/opening-register.module'\n          ).then((m) => m.OpeningRegisterModule),\n      },\n      {\n        path: 'close-register',\n        loadChildren: () =>\n          import('./modules/cashier/close-register/close-register.module').then(\n            (m) => m.CloseRegisterModule\n          ),\n      },\n      {\n        path: 'collect',\n        loadChildren: () =>\n          import('./modules/cashier/collect/collect.module').then(\n            (m) => m.CollectModule\n          ),\n      },\n      {\n        path: 'petty-cash',\n        loadChildren: () =>\n          import('./modules/cashier/petty-cash/petty-cash.module').then(\n            (m) => m.PettyCashModule\n          ),\n      },\n      {\n        path: 'pettycash-approvals',\n        loadChildren: () =>\n          import('./modules/cashier/petty-cash-approval/petty-cash-approval.module').then(\n            (m) => m.PettyCashApprovalModule\n          ),\n      },\n      {\n        path: '',\n        loadChildren: () =>\n          import('./modules/cashier/petty-cash/dashboard/dashboard.module').then(\n            (m) => m.DashboardModule\n          ),\n      },\n      {\n        path: 'unsettled-session',\n        loadChildren: () =>\n          import('./modules/cashier/unsettled-session/unsettled-session.module').then(\n            (m) => m.UnsettledSessionModule\n          ),\n      },\n      {\n        path: 'return',\n        loadChildren: () =>\n          import('./modules/cashier/return/return.module').then(\n            (m) => m.ReturnModule\n          ),\n      },\n      {\n        path: 'treasuryrefundorders',\n        loadChildren: () =>\n          import('./modules/cashier/return-treasury-fund/return-treasury-fund.module').then(\n            (m) => m.ReturnTreasuryFundModule\n          ),\n      },\n      {\n        path: 'provide-expenses',\n        loadChildren: () =>\n          import(\n            './modules/main-fund/provide-expenses/provide-expenses.module'\n          ).then((m) => m.provideExpensesModule),\n      },\n      {\n        path: 'mainFund-allocation',\n        loadChildren: () =>\n          import(\n            './modules/main-fund/allocation/allocation/allocation.module'\n          ).then((m) => m.allocationModule),\n      },\n      {\n        path: 'register-settlements',\n        loadChildren: () =>\n          import(\n            './modules/main-fund/register-settlements/register-settlements.module')\n            .then((m) => m.RegisterSettlementsModule)\n      },\n      {\n        path: 'dashboard',\n        loadChildren: () =>\n          import(\n            './modules/main-fund/dashboard/dashboard.module')\n            .then((m) => m.DashboardModule)\n      },\n      {\n        path: 'collection-report',\n        loadChildren: () =>\n          import(\n            './modules/collection-report/collection-report.module')\n            .then((m) => m.CollectionReportModule)\n      },\n      {\n        path: 'markazia-vouchers',\n        loadChildren: () =>\n          import('./modules/cashier/markazia-vouchers/markazia-vouchers.module')\n            .then(m => m.MarkaziaVouchersModule)\n\n      },\n      {\n        path: 'mainfund-receipt',\n        loadChildren: () =>\n          import('./modules/main-fund/receipts/receipts.module').then(\n            (m) => m.ReceiptsModule\n          ),\n      },\n      // ========= Treasury  ========================================================\n      {\n        path: 'allocation',\n        loadChildren: () =>\n          import('./modules/treasury/allocation/allocation.module').then(\n            (m) => m.AllocationModule\n          ),\n      },\n      {\n        path: 'transactions',\n        loadChildren: () =>\n          import('./modules/treasury/transactions/transactions.module').then(\n            (m) => m.TransactionsModule\n          ),\n      },\n      {\n        path: 'transactions-history',\n        loadChildren: () =>\n          import(\n            './modules/treasury/transactions-history/transactions-history.module'\n          ).then((m) => m.TransactionsHistoryModule),\n      },\n      {\n        path: 'pettycash',\n        loadChildren: () =>\n          import(\n            './modules/treasury/petty-cash-treasury/petty-cash-treasury.module'\n          ).then((m) => m.PettyCashTreasuryModule),\n      },\n      {\n        path: 'register-bank-deposit',\n        loadChildren: () =>\n          import(\n            './modules/treasury/register-bank-deposit/register-bank-deposit.module'\n          ).then((m) => m.RegisterBankDepositModule),\n      },\n      {\n        path: 'profile',\n        loadChildren: () =>\n          import('./modules/profile/profile.module').then(\n            (m) => m.ProfileModule\n          ),\n      },\n\n      {\n        path: 'no-menu',\n        component: NoMenuComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  ActivatedRoute,\n  ActivatedRouteSnapshot,\n  NavigationEnd,\n  Router,\n} from '@angular/router';\nimport { SharedService } from '../services/shared.service';\nimport { filter } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  providers: [DatePipe],\n})\nexport class DashboardComponent implements OnInit {\n  sidebarExpanded = true;\n  Pagetitle: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    public sharedService: SharedService,\n    private router: Router,\n    public datePipe: DatePipe\n  ) {}\n  navList: any = [];\n  titleOfPage: any = '';\n  sideNavStatus: boolean = true;\n  ngOnInit(): void {\n    //this.router.events\n    //  .pipe(filter((event) => event instanceof NavigationEnd))\n    //  .subscribe((event) => {\n    //    if (event['url'] == '/' && this.sharedService.getRole?.roleId == 36) {\n    //      this.router.navigate(['/branches']);\n    //    } else if (\n    //      event['url'] == '/' &&\n    //      this.sharedService.getRole?.roleId == 1\n    //    ) {\n    //      this.router.navigate(['/opening-register']);\n    //    }\n    //  });\n    //if (this.sharedService.getRole?.roleId == 36) {\n    //  if (this.router.url == '/') {\n    //    this.router.navigate(['/branches']);\n    //  }\n    //} else if (this.sharedService.getRole?.roleId == 1) {\n    //  if (this.router.url == '/') {\n    //    this.router.navigate(['/opening-register']);\n    //  }\n    //}\n  }\n  onSelectMenu(index: number) {\n    this.navList.forEach((element: { IsActive: boolean }) => {\n      element.IsActive = false;\n    });\n    for (let i = 0; i < this.navList.length; i++) {\n      if (i == index) {\n        this.navList[i].IsActive = true;\n      }\n    }\n  }\n}\n","<div class=\"container-fluid g-0\">\n  <app-header [titleOfPage]=\"titleOfPage\" (sideNavToggled)=\"sideNavStatus=$event;\"></app-header>\n  <main>\n    <app-sidenav (titleOfPage)=\"titleOfPage=$event;\" (sideNavToggled)=\"sideNavStatus=$event;\"\n                 [sideNavStatus]=\"sideNavStatus\" [ngClass]=\"{'app-side-nav-open':sideNavStatus}\"></app-sidenav>\n    <div [ngClass]=\"{'display-area-shrink':sideNavStatus}\" class=\"display-area p-3\">\n\n\n      <router-outlet></router-outlet>\n    </div>\n  </main>\n</div>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { SidenavComponent } from './layout/sidenav/sidenav.component';\nimport { ModalCloseSessionComponent } from './layout/modal-close-session/modal-close-session.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { NoMenuComponent } from './no-menu/no-menu.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    HeaderComponent,\n    SidenavComponent,\n    ModalCloseSessionComponent,\n    NoMenuComponent,\n  ],\n  imports: [CommonModule,\n    DashboardRoutingModule, SharedModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class DashboardModule {}\n","import { SharedService } from '../../../services/shared.service';\nimport {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  NavigationEnd,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faBars,\n  faBell,\n} from '@fortawesome/free-solid-svg-icons';\nimport { HeaderService } from 'src/app/services/header.service';\nimport { GeneralService } from '../../../services/general.service';\nimport { SignalRService } from '../../../services/signalR.service';\nimport { CommonService } from '../../../services/common.service';\nimport { SubjectService } from '../../../services/subject.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Output() sideNavToggled = new EventEmitter<boolean>();\n  @Input() titleOfPage: string = '';\n  faBars = faBars;\n  faArrowLeft = faArrowLeft;\n  faBell = faBell;\n  faArrowRight = faArrowRight;\n  menuStatus: boolean = true;\n  iscollapse: boolean = false;\n  marginleft: number = 50;\n  fullName: any;\n  Pagetitle: any = {};\n  showTitle: boolean = true;\n  pagename: string;\n  isShowDrop: boolean;\n  portalsList = [];\n  orderId = 0;\n  subscription = new Subscription();\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private headerService: HeaderService,\n    public sharedService: SharedService,\n    private generalService: GeneralService,\n    private _subjectService: SubjectService,\n    private signalRService: SignalRService,\n    private commonService: CommonService,\n  ) {\n    this.headerService.title.subscribe((title) => {\n      this.titleOfPage = title;\n      // this.showTitle = true;\n\n      // this.headerService.setTitle(this.titleOfPage);\n      // console.log('title', this.titleOfPage);\n      // setTimeout(() => {\n      //   this.titleOfPage = title;\n      // }, 1000);\n    });\n\n    this.pagename = this.router.url;\n\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        // Handle Navigation Start\n      }\n\n      if (event instanceof NavigationEnd) {\n        // Handle Navigation End\n        this.pagename = '';\n      }\n    });\n    this.getUserPortals()\n  }\n\n  firstName: string;\n  lastName: string;\n  notificationList = [];\n  ngOnInit(): void {\n    this.fullName = localStorage.getItem('fullName');\n    if (this.fullName) {\n      const fullname = this.fullName?.split(' ');\n\n      this.firstName = fullname[0];\n      this.lastName = fullname[1];\n    }\n    this.receiveNotifications();\n    this.collectedOrder();\n  }\n  collectedOrder() {\n\n    let sub = this._subjectService.collectedOrder.subscribe((data: any) => {\n      this.orderId = data.orderId;\n      if (this.notificationList.length > 0) {\n        this.notificationList = this.notificationList.filter(x => +(x.OrderId) !== this.orderId);\n      }\n    })\n    this.subscription.add(sub);\n  }\n  receiveNotifications() {\n    let notifications = [];\n    this.signalRService.startConnection();\n    this.signalRService.addNotificationListener((data) => {\n      console.log('Received notification:', data);\n      notifications.unshift(JSON.parse(data));\n      this.notificationList = this.removeDuplicates(notifications).filter(x => +(x.OrderId) !== this.orderId);\n    });\n  }\n  redirectToOrder(item) {\n    if (item?.OrderType == 7003) {\n      this.commonService.NavigateToRoute(`/collect/details/spare/`, item?.OrderId)\n    }\n    else if (item?.OrderType == 7002) {\n      this.commonService.NavigateToRoute(`/collect/details/service/`, item?.OrderId)\n    }\n    else if (item?.OrderType == 7001) {\n      this.commonService.NavigateToRoute(`collect/details/payment/`, item?.OrderId)\n    }\n  }\n  removeDuplicates(notifications) {\n    return notifications.reduce((unique, notification) => {\n      if (!unique.some(obj => obj.OrderId === notification.OrderId)) {\n        unique.push(notification);\n      }\n      return unique;\n    }, []);\n  }\n  getUserPortals() {\n    this.generalService.getUserPortals().subscribe(res => {\n      this.portalsList = res['data'];\n    })\n  }\n  redirectTo(path) {\n    window.location.replace(`${path}/login?token=${sessionStorage.getItem('token')}`);\n  }\n  mainPage() {\n    if (this.sharedService.getRole?.roleId == 1) {\n      this.router.navigateByUrl('/opening-register');\n      this.headerService.setTitle('Opening Register');\n    } else {\n      this.router.navigateByUrl('/branches');\n    }\n  }\n  SideNavToggle() {\n    this.menuStatus = !this.menuStatus;\n    this.sideNavToggled.emit(this.menuStatus);\n    this.iscollapse = this.iscollapse == false ? true : false;\n    this.marginleft = this.marginleft == 50 ? 0 : 50;\n    if (window.innerWidth < 600) {\n      this.iscollapse = true;\n    }\n    const menuItems = document.querySelectorAll('[dropdown]');\n    menuItems.forEach(item => {\n      item.setAttribute('container', 'body');\n    })\n  }\n  @HostListener('window:resize', ['$event'])\n  onWindowResize() {\n    if (window.innerWidth < 600) {\n      this.iscollapse = true;\n      this.marginleft = 0;\n      this.menuStatus = false;\n      this.sideNavToggled.emit(false);\n      this.showTitle = false;\n    } else {\n      this.iscollapse = false;\n      this.marginleft = 50;\n      this.menuStatus = true;\n      this.showTitle = true;\n      this.sideNavToggled.emit(true);\n    }\n  }\n  logout() {\n    sessionStorage.removeItem('fullName');\n    this.router.navigateByUrl('/login');\n  }\n  ngOnDestroy() {\n    // Clean up SignalR connections when component is destroyed\n    this.signalRService.stopConnection();\n    console.log('destroy');\n    this.subscription.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-expand px-2\">\n\n  <a *ngIf=\"!iscollapse\" (click)=\"mainPage()\" class=\"navbar-brand px-1\">\n    <img width=\"105\" height=\"17.5\" src=\"assets/images/markazia.png\" alt=\"\">\n  </a>\n  <button (click)=\"SideNavToggle()\" [style.margin-left.px]=\"[marginleft]\" class=\"btn btn-danger btn-circle\">\n    <i class=\"fa-solid fa-arrow-left\" *ngIf=\"!iscollapse\"> </i> <i class=\"fa-solid fa-arrow-right\" *ngIf=\"iscollapse\"></i>\n  </button>\n\n  <div class=\"navbar-collapse px-3\">\n    <div *ngIf=\"showTitle\" class=\"page-Tile\">\n      {{titleOfPage}} <span *ngIf=\"pagename\"> > </span> {{pagename.slice(1)}}\n    </div>\n  </div>\n  <!-- <span *ngIf=\"pagename\"> > </span>  {{pagename.slice(1)}} -->\n  <ul class=\"navbar-nav ms-auto d-flex flex-row align-items-center\">\n    <!-- <li *ngIf=\"showTitle\" class=\"nav-item me-3 me-lg-0\"></li> -->\n    <!-- <li class=\"nav-item\">\n      <a class=\"nav-link\">\n        <span class=\"char-name\"> {{firstName | slice:0:1 }}{{lastName | slice:0:1 }} </span> {{firstName}} {{lastName}}\n      </a>\n    </li> -->\n    <li class=\"cursor-pointer\">\n      <div dropdown container=\"body\" placement=\"left bottom\">\n        <i class=\"fas fa-bell font-24 position-relative\"  dropdownToggle id=\"button-basic2\" aria-controls=\"dropdown-basic2\">\n          <span class=\"notification-badge\">{{notificationList.length}}</span>\n        </i>\n        <ul style=\"width:220px\" id=\"dropdown-basic2\" *dropdownMenu class=\"dropdown-menu-right dropdown-menu d-flex gap-1 flex-column p-2\"\n            role=\"menu\" aria-labelledby=\"button-basic2\">\n          <li *ngFor=\"let item of notificationList\" class=\"cursor-pointer\" role=\"menuitem\" (click)=\"redirectToOrder(item)\">\n            <div class=\"d-flex align-items-center gap-2\">\n              <h6 class=\"fw-500 m-0\">{{item?.NotificationMessage}}</h6>\n            </div>\n          </li>\n          <li *ngIf=\"!notificationList.length\">No order for collection yet</li>\n        </ul>\n      </div>\n    </li>\n\n    <li class=\"cursor-pointer\">\n      <div dropdown container=\"body\" placement=\"left bottom\">\n        <img src=\"/assets/images/navicon/grid.svg\" dropdownToggle id=\"button-basic\" aria-controls=\"dropdown-basic\" />\n        <ul style=\"width:220px\" id=\"dropdown-basic\" *dropdownMenu class=\"dropdown-menu-right dropdown-menu d-flex gap-4 flex-column p-2\"\n            role=\"menu\" aria-labelledby=\"button-basic\">\n          <li *ngFor=\"let item of portalsList\" class=\"cursor-pointer\" role=\"menuitem\">\n            <div class=\"d-flex align-items-center gap-2\" (click)=\"redirectTo(item?.description)\">\n              <img [src]=\"item?.imagePath\" />\n              <h6 class=\"fw-500 m-0\">{{item?.translations}}</h6>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </li>\n    <li class=\"nav-item dropdown\">\n      <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n        <span class=\"char-name\"> {{firstName | slice:0:1 }}{{lastName | slice:0:1 }} </span> {{firstName}} {{lastName}}\n      </a>\n      <ul class=\"dropdown-menu\">\n        <li><a class=\"dropdown-item\" routerLink=\"/profile\">My Profile</a></li>\n      </ul>\n    </li>\n\n  </ul>\n</nav>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-modal-close-session',\n  templateUrl: './modal-close-session.component.html',\n  styleUrls: ['./modal-close-session.component.scss'],\n})\nexport class ModalCloseSessionComponent {\n  @Input() type;\n  @Input() minute;\n\n  @Output() semdToConfirm = new EventEmitter<string>();\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private modalService: NgbModal,\n    private router: Router\n  ) {}\n\n  confirm() {\n    this.semdToConfirm.emit();\n  }\n\n  closeSession() {\n    localStorage.setItem('closeSession', 'yes');\n    this.modalService.dismissAll();\n    this.router.navigateByUrl('/close-register');\n    window.location.reload();\n  }\n}\n","<div *ngIf=\"type == 1\">\n  <div class=\"modal-body\">\n    <div class=\"message\">\n      <i class=\"fa-solid fa-triangle-exclamation\"></i>\n      <h4> The session time will end in 15 min </h4>\n    </div>\n  </div>\n  <div class=\"btns-group\">\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"activeModal.close('Close click')\">Ok</button>\n  </div>\n</div>\n\n<div *ngIf=\"type == 2\">\n  <div class=\"modal-body\">\n    <div class=\"message\">\n      <i class=\"fa-solid fa-triangle-exclamation\"></i>\n      <h4> Session Timeout ! You Cant Collect or Close the Session, You will be logged out now... </h4>\n    </div>\n  </div>\n  <div class=\"btns-group\">\n    <button type=\"button\" class=\"btn btn-save\" (click)=\"closeSession()\"> Close register</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SharedService } from '../../../services/shared.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n\n  apiUrl = this.sharedService.getUrl;\n  constructor(private http: HttpClient, public sharedService: SharedService) {}\n\n  LogoutUser(id:number): Observable<any[]> {\n    return this.http.post<any>(\n      this.apiUrl + `User/Logout?userId=${id}`,{},\n      this.sharedService.getHeaders()\n    );\n  }\n}\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { ModalLogoutComponent } from './modal-logout/modal-logout.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LogoutService } from './logout.service';\r\nimport { GeneralService } from '../../../services/general.service';\r\n\r\nimport { OpenregisterService } from '../../modules/cashier/opening-register/services/openregister.service';\r\nimport { CloseRegisterService } from '../../modules/cashier/close-register/services/close-register.service';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ModalCloseSessionComponent } from '../modal-close-session/modal-close-session.component';\r\nimport { HttpserviceService } from '../../../services/httpservice.service';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { filter } from 'rxjs';\r\nimport { SubjectService } from '../../../services/subject.service';\r\nimport { environment } from '../../../../environments/environment.test';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss'],\r\n  providers: [DatePipe],\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n  @Input() sideNavStatus: boolean = true;\r\n\r\n  @Output() sideNavToggled = new EventEmitter<boolean>();\r\n  @Output() titleOfPage = new EventEmitter<string>();\r\n  timeRegister: string;\r\n  navList: any = [];\r\n  cashierNavList;\r\n  userMenu = [];\r\n  registerSessionCreatedAt: any;\r\n  sessionId: number;\r\n  toggleCaretIcon = false;\r\n  constructor(\r\n    private router: Router,\r\n    public sharedService: SharedService,\r\n    private modalService: NgbModal,\r\n    private logoutService: LogoutService,\r\n    public openregisterService: OpenregisterService,\r\n    public closeRegisterService: CloseRegisterService,\r\n    public GeneralService: GeneralService,\r\n    public _loginService: HttpserviceService,\r\n    public datePipe: DatePipe,\r\n    public _commonService: CommonService,\r\n    public _subjectService: SubjectService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this._subjectService.isRegisterOpen.subscribe(res => {\r\n      if (res) {\r\n        this.getUserMenuNew();\r\n        this.GetUserMenu();\r\n      }\r\n    })\r\n    this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((event) => {\r\n      let findItem = this.userMenu[0].items.find(x => x.url == event['url']);\r\n      let canClickItem = this.userMenu[0].items.find(x => x.canClick);\r\n      if (!findItem.canClick) {\r\n        this._commonService.NavigateToRoute(canClickItem?.url);\r\n      }\r\n    });\r\n    if (this.sharedService.getRole?.roleId == 1) {\r\n      this.GetUserMenu();\r\n    }\r\n    this.getUserMenuNew();\r\n  }\r\n  onSelectMenu(index: number) {\r\n    this.checkScreenSize();\r\n    this.navList.forEach((element: { IsActive: boolean }) => {\r\n      element.IsActive = false;\r\n    });\r\n    for (let i = 0; i < this.navList.length; i++) {\r\n      if (i == index) {\r\n        this.navList[i].IsActive = true;\r\n        this.titleOfPage.emit(this.navList[i].title);\r\n      }\r\n    }\r\n    localStorage.removeItem('collectionOrderNum');\r\n    localStorage.removeItem('collectBranchId');\r\n    localStorage.removeItem('collectUserId');\r\n    localStorage.removeItem('collectSearchText');\r\n    localStorage.removeItem('collectVin');\r\n  }\r\n\r\n  onSelectMenuCashier(title) {\r\n    // this.checkScreenSize();\r\n    // this.navList.forEach((element: { IsActive: boolean }) => {\r\n    //   element.IsActive = false;\r\n    // });\r\n\r\n    // this.navList[i].IsActive = true;\r\n    this.titleOfPage.emit(title);\r\n\r\n    localStorage.removeItem('collectionOrderNum');\r\n    localStorage.removeItem('collectBranchId');\r\n    localStorage.removeItem('collectUserId');\r\n    localStorage.removeItem('collectSearchText');\r\n    localStorage.removeItem('collectVin');\r\n    // this.openAutoClose();\r\n    // this.GetUserMenu();\r\n  }\r\n  checkScreenSize() {\r\n    if (window.innerWidth < 600) {\r\n      this.sideNavToggled.emit(false);\r\n      this.sideNavStatus = false;\r\n    }\r\n  }\r\n  dateSession: string;\r\n  sessionEndMinut: any;\r\n  openAutoCloseWarning() {\r\n    // console.log('openAutoClose');\r\n\r\n    this.dateSession = this.datePipe.transform(\r\n      this.registerSessionCreatedAt,\r\n      'MMMM d, y'\r\n    );\r\n    // Fri Mar 17 2023 22:36:23 GMT+0200 (Eastern European Standard Time)\r\n\r\n    var dateEndSession = new Date(this.dateSession + ' ' + this.endSession);\r\n    // var dateEndSession = new Date('Fri Mar 17 2023 23:55:23');\r\n\r\n    var dateCurrunt = new Date();\r\n    // console.log(dateCurrunt);\r\n    let sessionEndMillesecnd =\r\n      dateEndSession.getTime() - dateCurrunt.getTime() - 900000;\r\n    // console.log('sessionEndMillesecnd', sessionEndMillesecnd);\r\n\r\n    this.sessionEndMinut =\r\n      dateEndSession.getMinutes() - dateCurrunt.getMinutes();\r\n    // console.log('sessionEndMinut', this.sessionEndMinut);\r\n\r\n    if (sessionEndMillesecnd > 0) {\r\n      setTimeout(() => {\r\n        const modalRef = this.modalService.open(ModalCloseSessionComponent);\r\n        modalRef.componentInstance.type = 1;\r\n        modalRef.componentInstance.minute = this.sessionEndMinut;\r\n      }, sessionEndMillesecnd);\r\n    }\r\n  }\r\n\r\n  openAutoClose() {\r\n    // console.log('openAutoClose');\r\n\r\n    this.dateSession = this.datePipe.transform(\r\n      this.registerSessionCreatedAt,\r\n      'MMMM d, y'\r\n    );\r\n\r\n    var dateEndSession = new Date(this.dateSession + ' ' + this.endSession);\r\n\r\n    var dateCurrunt = new Date();\r\n\r\n    let sessionEndMillesecnd = dateEndSession.getTime() - dateCurrunt.getTime();\r\n    // console.log('sessionEndMillesecnd', sessionEndMillesecnd);\r\n\r\n    if (sessionEndMillesecnd > 0) {\r\n      setTimeout(() => {\r\n        const modalRef = this.modalService.open(ModalCloseSessionComponent);\r\n        modalRef.componentInstance.type = 2;\r\n        sessionStorage.removeItem('token');\r\n        setTimeout(() => {\r\n          //window.location.href = 'https://dx-portalsstage.azurewebsites.net/login';\r\n          this.redirectUserAccordingToEnv();\r\n        }, 5000)\r\n        //}, 10000);\r\n      }, sessionEndMillesecnd);\r\n    }\r\n  }\r\n  redirectUserAccordingToEnv() {\r\n    let host = window.location.host;\r\n    //STAGING\r\n    if (host.indexOf('dxpos.markaziaapis.com') >= 0) {\r\n      window.location.href = 'https://portal.markaziahub.com'\r\n    }\r\n    //TEST\r\n    else if (host.indexOf('dxtestpos.markaziaapis.com') >= 0) {\r\n      window.location.href = 'https://dxtestportal.markaziahub.com';\r\n    }\r\n    //LOCAL\r\n    else if (host.indexOf('localhost:4200') >= 0) {\r\n      // I AM USING PORTAL ON PORT 4201 SO THAT'S' WHY I REDIRECTED HERE\r\n      window.location.href = 'https://dxdevportal.markaziahub.com';\r\n    }\r\n  }\r\n  logout() {\r\n    //const modalRef = this.modalService.open(ModalLogoutComponent);\r\n    //modalRef.componentInstance.name = 'World';\r\n\r\n    //modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\r\n    //  this.modalService.dismissAll();\r\n    //});\r\n    this.LogoutUser();\r\n    localStorage.removeItem('fullName');\r\n    localStorage.removeItem('role');\r\n    localStorage.removeItem('userid');\r\n    localStorage.removeItem('branch');\r\n    localStorage.removeItem('city');\r\n    localStorage.removeItem('register');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('permissions');\r\n\r\n    localStorage.removeItem('collectionOrderNum');\r\n    localStorage.removeItem('collectBranchId');\r\n    localStorage.removeItem('collectUserId');\r\n    localStorage.removeItem('collectSearchText');\r\n    localStorage.removeItem('collectVin');\r\n\r\n    localStorage.removeItem('closeSession');\r\n\r\n    // localStorage.removeItem('identity');\r\n    // localStorage.removeItem('password');\r\n    // localStorage.removeItem('rememberMe');\r\n\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('id');\r\n\r\n    //this.router.navigate(['/login']);\r\n    // window.location.href = 'https://dx-portalsstage.azurewebsites.net/login';\r\n    window.location.replace(localStorage.getItem('redirectUrl'))\r\n    localStorage.removeItem('redirectUrl')\r\n\r\n    // this.sharedService.getToken = '';\\\r\n  }\r\n  LogoutUser() {\r\n    return this.logoutService\r\n      .LogoutUser(+this.sharedService.getUserId)\r\n      .subscribe((response: any) => {\r\n        if (response) {\r\n          // this.roles = response.data.permissions;\r\n        }\r\n      });\r\n  }\r\n  canOpenRegister: boolean;\r\n  opendSession: any;\r\n  openreg: boolean;\r\n  closereg: boolean;\r\n  clollectreg: boolean;\r\n  CanOpenRegisterSession() {\r\n    return this.openregisterService\r\n      .CanOpenRegisterSession({})\r\n      .subscribe((response: any) => {\r\n        if (response.isSuccess == true) {\r\n          this.canOpenRegister = response.data.canOpenRegister;\r\n          this.opendSession = response.data.opendSession;\r\n\r\n          if (this.canOpenRegister == true) {\r\n            this.openreg = true;\r\n            this.closereg = false;\r\n            this.clollectreg = false;\r\n          } else if (this.canOpenRegister == false) {\r\n            // this.router.navigate(['/collect']);\r\n            this.openreg = false;\r\n            this.closereg = true;\r\n            this.clollectreg = true;\r\n          }\r\n\r\n          // else if (this.canOpenRegister == false && this.opendSession) {\r\n          //   this.openreg = false;\r\n          //   this.closereg = true;\r\n          //   this.clollectreg = true;\r\n          // } else if (this.canOpenRegister == false && !this.opendSession) {\r\n          //   this.openreg = false;\r\n          //   this.closereg = false;\r\n          //   this.clollectreg = false;\r\n\r\n          // }\r\n\r\n          // this.canOpenRegister = true;\r\n        }\r\n      });\r\n  }\r\n  canCloseRegisterSession: boolean;\r\n  CanCloseRegisterSession() {\r\n    return this.closeRegisterService\r\n      .CanCloseRegisterSession({})\r\n      .subscribe((response: any) => {\r\n        if (response.isSuccess == true) {\r\n          this.canCloseRegisterSession = response.data.opendSession\r\n            ? true\r\n            : false;\r\n          this.registerSessionCreatedAt =\r\n            response.data?.registerSession?.createdAt;\r\n        }\r\n      });\r\n  }\r\n\r\n  cashierMenu: any;\r\n  registerSession: any;\r\n  endSession: any;\r\n  oppendAt: any;\r\n  isIpAddres: boolean;\r\n  hasOppendSession: boolean;\r\n  getUserMenuNew() {\r\n    this.GeneralService.GetUserMenuNew(17001).subscribe((response: any) => {\r\n      //this.userMenu = response?.data?.menu;\r\n      let editMenu = response?.data?.menu;\r\n      this.userMenu = [];\r\n      editMenu.forEach(x => {\r\n        let isExist = x.items.filter(item => item?.canView);\r\n        if (isExist?.length > 0) {\r\n          this.userMenu = [...this.userMenu, { ...x, viewPermission: true }];\r\n          console.log(this.userMenu);\r\n        }\r\n      })\r\n      this.cashierNavList = response?.data?.menu[0];\r\n      if (this.sharedService.getRole?.roleId == 1) {\r\n        let isExist = this.cashierNavList.items.filter(item => !item?.canView);\r\n        if (!isExist) {\r\n          this.isIpAddres = false;\r\n          localStorage.setItem('IsFoundIPAddress', '1');\r\n        } else {\r\n          localStorage.removeItem('IsFoundIPAddress');\r\n        }\r\n      }\r\n      for (let menu of this.userMenu) {\r\n        let findItem = menu.items.find(x => x.canClick);\r\n        if (findItem) {\r\n          this._commonService.NavigateToRoute(findItem.url);\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  handler() {\r\n    this.toggleCaretIcon = !this.toggleCaretIcon;\r\n  }\r\n  GetUserMenu() {\r\n    return this.GeneralService.GetUserMenu({}).subscribe((response: any) => {\r\n      if (response.isSuccess) {\r\n        this.cashierMenu = response.data[0]?.cashier;\r\n        this.registerSession = response.data[0]?.registerSession;\r\n        this.registerSessionCreatedAt = this.registerSession?.oppendAt;\r\n        this.sessionId = this.registerSession?.currentSessionId;\r\n        localStorage.setItem('current_session', this.sessionId?.toString());\r\n        this.endSession = this.registerSession?.allowedToTime;\r\n        this.hasOppendSession = this.registerSession?.hasOppendSession;\r\n        this.isIpAddres = true;\r\n        this._subjectService.sessionDetails.next({ opened: this.hasOppendSession });\r\n        if (this.hasOppendSession) {\r\n          setTimeout(() => {\r\n            this.openAutoCloseWarning();\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            this.openAutoClose();\r\n          }, 2000);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"side-nav-content\">\n  <div class=\"register-open\"\n       *ngIf=\"hasOppendSession && sharedService.getRole?.roleId == 1\">\n    <p class=\"m-0 mb-2\">\n      Session Id <span> {{ sessionId }} </span>\n    </p>\n    <p class=\"m-0 mb-2\">\n      Opening At <span> {{ registerSessionCreatedAt | date : \"short\" }} </span>\n    </p>\n  </div>\n  <!--<ul class=\"nav-list\" [ngClass]=\"{ 'nav-list-open': sideNavStatus }\">\n    <ng-container *ngFor=\"let item of navList; let i = index\">\n      <ng-container *ngIf=\"item.type == sharedService.getRole?.roleId\">\n        <ng-container>\n          <button class=\"nav-list-item\"\n                  (click)=\"onSelectMenu(i)\"\n                  [routerLink]=\"item.url\"\n                  routerLinkActive=\"active\"\n                  #rla=\"routerLinkActive\">\n            <img [src]=\"rla.isActive ? item.Icon2 : item.Icon\" alt=\"\" />\n            <span> {{ item.Title }}</span>\n          </button>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ul>-->\n  <!--<ul class=\"nav-list\" [ngClass]=\"{ 'nav-list-open': sideNavStatus }\" *ngIf=\"sharedService.getRole?.roleId == 1\"> Runs according to role cashier-->\n  <!--below code display none-->\n  <ul class=\"d-none nav-list d-flex flex-column gap-3\" [ngClass]=\"{ 'nav-list-open': sideNavStatus }\" *ngIf=\"sharedService.getRole?.roleId == 1\">\n    <ng-container *ngFor=\"let menu of userMenu; let i = index\">\n      <ng-container *ngIf=\"menu?.viewPermission\">\n        <div class=\"btn-group\" dropdown>\n          <button id=\"button-basic{{i}}\" dropdownToggle type=\"button\" class=\"btn dropdown-toggle\" [attr.aria-controls]=\"'dropdown-basic' + i\">\n            <img src=\"/assets/images/navicon/dashboardIcon2.svg\" />\n            {{menu?.menuItem}}\n            <img src=\"/assets/images/navicon/angel-down.svg\" />\n            <!--<span class=\"caret\"></span>-->\n          </button>\n          <ul id=\"dropdown-basic{{i}}\" *dropdownMenu class=\"dropdown-menu\"\n              role=\"menu\" [attr.aria-labelledby]=\"'button-basic' + i\">\n            <ng-container *ngFor=\"let item of menu?.items; let j = index\">\n              <button [ngStyle]=\"!item.canClick && {'cursor':'default'} || {'cursor':'pointer'}\"\n                      class=\"nav-list-item\"\n                      (click)=\"onSelectMenuCashier(item?.title)\"\n                      [routerLink]=\"item.url\"\n                      routerLinkActive=\"active\"\n                      #rla=\"routerLinkActive\"\n                      [disabled]=\"!item.canClick\"\n                      [hidden]=\"!item.canView\">\n                <img [src]=\"rla.isActive ? item.icon2 : item.icon2\" alt=\"\" />\n                <span> {{ item.title }} </span>\n              </button>\n            </ng-container>\n          </ul>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ul>\n  <ul class=\"nav-list\" [ngClass]=\"{ 'nav-list-open': sideNavStatus }\">\n    <ng-container *ngFor=\"let menu of userMenu; let i = index\">\n      <ng-container *ngIf=\"menu?.viewPermission\">\n        <div class=\"w-100\">\n          <div class=\"d-flex align-items-center justify-content-between my-3\">\n            <img src=\"/assets/images/navicon/dashboardIcon2.svg\" />\n            <h6 class=\"m-0 dark-gray font-18 fw-600\">{{menu?.menuItem}}</h6>\n            <img src=\"/assets/images/navicon/angel-down.svg\" class=\"me-2\" />\n          </div>\n          <!--<span class=\"caret\"></span>-->\n          <ul class=\"m-0 p-0 overflow-scroll-menu\">\n            <ng-container *ngFor=\"let item of menu?.items; let j = index\">\n              <button [ngStyle]=\"!item.canClick && {'cursor':'default'} || {'cursor':'pointer'}\"\n                      class=\"nav-list-item\"\n                      (click)=\"onSelectMenuCashier(item?.title)\"\n                      [routerLink]=\"item.url\"\n                      routerLinkActive=\"active\"\n                      [routerLinkActiveOptions]=\"{exact:(item?.menuItemId == 17) ? true: false}\"\n                      #rla=\"routerLinkActive\"\n                      [disabled]=\"!item.canClick\"\n                      [hidden]=\"!item.canView\">\n                <img [src]=\"rla.isActive ? item.icon2 : item.icon\" alt=\"\" />\n                <span> {{ item.title }} </span>\n              </button>\n            </ng-container>\n          </ul>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ul>\n  <!-- <a [ngClass]=\"{'a-active': val.IsActive ===true }\">{{val.Title}}</a> -->\n\n  <div *ngIf=\"sideNavStatus\" class=\"col-xs-3\">\n    <ul class=\"ps-3\" style=\"position: fixed; bottom: 0;\">\n      <li class=\"logout-btn align-items-center d-flex gap-2 justify-content-between dark-gray fw-700\" style=\"cursor: pointer\" (click)=\"logout()\">\n        <i class=\"fas fa-arrow-circle-left fa-2x primary-clr\"></i>Back To Portal\n      </li>\n      <span class=\"primary-clr text-center font-14 fw-500\">\n        <!--Version VERSION_NUMBER-->\n        Version 3.0.0\n      </span>\n    </ul>\n  </div>\n</div>\n<!--<button routerLink=\"mainfund-receipt/create-receipt\">asdfasdf</button>-->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SharedService } from '../../../../../services/shared.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CloseRegisterService {\n  apiUrl = this.sharedService.getUrl;\n  constructor(private http: HttpClient, public sharedService: SharedService) { }\n  getCurrentSessionCollectedBankTransfere(searchText: string, pageNo: number): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Cashier/GetCurrentSessionCollectedBankTransfere?Search=${searchText}&PageNo=${pageNo - 1}&PageSize=6`,\n      this.sharedService.getHeaders()\n    );\n  }\n  actionsOnBankTransfere(transfer: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ActionsOnBankTransfere',\n      transfer,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  editCollectionBankTransfere(transfer: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/EditCollectionBankTransfere',\n      transfer,\n      this.sharedService.getHeaders()\n    );\n  }\n  reverseActionsOnBankTransfere(transfer: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ReverseActionsOnBankTransfere',\n      transfer,\n      this.sharedService.getHeaders()\n    );\n  }\n  // BANK PLEDGES\n  getCurrentSessionCollectedBankPledge(searchText: string, pageNo: number): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Cashier/GetCurrentSessionCollectedBankPledge?Search=${searchText}&PageNo=${pageNo - 1}&PageSize=6`,\n      this.sharedService.getHeaders()\n    );\n  }\n  actionsOnBankPledge(pledge: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ActionsOnBankPledge',\n      pledge,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  editCollectionBankPledge(pledge: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/EditCollectionBankPledge',\n      pledge,\n      this.sharedService.getHeaders()\n    );\n  }\n  reverseActionsOnBankPledge(pledge: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/reverseActionsOnBankPledge',\n      pledge,\n      this.sharedService.getHeaders()\n    );\n  }\n  GetRegisterClosingData(): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + 'Cashier/GetRegisterClosingData',\n      this.sharedService.getHeaders()\n    );\n  }\n  getRegisterClosingDataFinal(): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + 'Cashier/GetRegisterClosingDataFinal',\n      this.sharedService.getHeaders()\n    );\n  }\n  CloseRegisterSession(data: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + `Cashier/CloseRegisterSession`,\n      data,\n      this.sharedService.getHeaders()\n    );\n  }\n  CanCloseRegisterSession(data: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + `Cashier/CanCloseRegisterSession`,\n      data,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  GetCurrentSessionCollectedCheques(\n    searchText: string,\n    pageNo: number\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Cashier/GetCurrentSessionCollectedCheques?drawerName=${searchText}&PageNo=${pageNo - 1}&PageSize=6`,\n      this.sharedService.getHeaders()\n    );\n  }\n  GetCurrentSessionCollectedCard(\n    searchText: string,\n    pageNo: number,\n    pageSize = 6,\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Cashier/GetCurrentSessionCollectedCard?PayerName=${searchText}&PageNo=${pageNo - 1}&PageSize=${pageSize}`,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  EditCollectionCheuqe(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/EditCollectionCheuqe',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  ActionsOnCheques(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ActionsOnCheques',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n  ReverseActionsOnCheques(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ReverseActionsOnCheques',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  EditCollectionByCards(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/EditCollectionByCards',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  ActionsOnCard(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ActionsOnCard',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n  actionsOnCardGroup(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ActionsOnCardGroup',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n  ReverseActionsOnCard(cheque: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/ReverseActionsOnCard',\n      cheque,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  getLookupsById(id: any) {\n    return this.http.get(\n      this.apiUrl + 'Lookups/GetLookups?lookupTypeId=' + id + '&pageNo=0&pageSize=1000',\n      this.sharedService.getHeaders()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SharedService } from '../../../../../services/shared.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenregisterService {\n  apiUrl = this.sharedService.getUrl;\n  constructor(private http: HttpClient, public sharedService: SharedService) {}\n\n  OpenRegisterSession(register: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/OpenRegisterSession',\n      register,\n      this.sharedService.getHeaders()\n    );\n  }\n  CanOpenRegisterSession(register: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Cashier/CanOpenRegisterSession',\n      register,\n      this.sharedService.getHeaders()\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-no-menu',\n  templateUrl: './no-menu.component.html',\n  styleUrls: ['./no-menu.component.scss']\n})\nexport class NoMenuComponent {\n\n}\n","// signalr.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { timer } from 'rxjs';\r\nimport { delayWhen } from 'rxjs/operators';\r\nimport { SharedService } from './shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalRService {\r\n  private hubConnection: signalR.HubConnection;\r\n\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  startConnection() {\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`http://dxtestpos.markaziaapis.com/ChatHub?userId=${this.sharedService.getUserId}`)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.hubConnection.start()\r\n      .then(() => {\r\n        console.log('Connection started')\r\n      })\r\n      .catch(err => {\r\n        //console.log('Error while starting connection: ' + err)\r\n      });\r\n    // Handle connection closed with error\r\n    this.hubConnection.onclose(error => {\r\n      //console.log('Connection closed with error:', error);\r\n      // Manually attempt to reconnect\r\n      this.startConnection();\r\n    });\r\n  }\r\n  addNotificationListener(callback: (data: any) => void) {\r\n    this.hubConnection.on('sendMessage', callback);\r\n  }\r\n  stopConnection() {\r\n    if (this.hubConnection) {\r\n      this.hubConnection.stop().then(() => console.log('Connection stopped'));\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  isRegisterOpen = new BehaviorSubject(false);\n  sessionDetails = new BehaviorSubject({ opened: false });\n  isCollectionPaymentDone = new BehaviorSubject(false);\n  bankTransferFiles = new BehaviorSubject([]);\n  chequeFiles = new BehaviorSubject([]);\n  chequeFinanceApprovalFiles = new BehaviorSubject([]);\n  bankPledgeFiles = new BehaviorSubject([]);\n  orderReturnFilters = new Subject();\n  pettyCashTreasuryExpenses = new Subject();\n  replenishmentRequestReceived = new BehaviorSubject(false);\n  pNCollectionReceiving = new BehaviorSubject(false);\n  cashierNote = new Subject();\n  collectedOrder = new Subject();\n  paymentDoneModalClosed = new Subject();\n  updateCustomerInLocalStorage = new Subject();\n  constructor() { }\n}\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { Platform } from \"./Utils\";\r\n/** @private */\r\nexport function configureFetch(obj) {\r\n    // Node added a fetch implementation to the global scope starting in v18.\r\n    // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n    if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n        // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        obj._jar = new (require(\"tough-cookie\")).CookieJar();\r\n        if (typeof fetch === \"undefined\") {\r\n            // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n            obj._fetchType = require(\"node-fetch\");\r\n        }\r\n        else {\r\n            // Use fetch from Node if available\r\n            obj._fetchType = fetch;\r\n        }\r\n        // node-fetch doesn't have a nice API for getting and setting cookies\r\n        // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        obj._fetchType = require(\"fetch-cookie\")(obj._fetchType, obj._jar);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/** @private */\r\nexport function configureAbortController(obj) {\r\n    if (typeof AbortController === \"undefined\") {\r\n        // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n        obj._abortControllerType = require(\"abort-controller\");\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/** @private */\r\nexport function getWS() {\r\n    return require(\"ws\");\r\n}\r\n/** @private */\r\nexport function getEventSource() {\r\n    return require(\"eventsource\");\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nimport { configureAbortController, configureFetch } from \"./DynamicImports\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // This is how you do \"reference\" arguments\r\n        const fetchObj = { _fetchType: undefined, _jar: undefined };\r\n        if (configureFetch(fetchObj)) {\r\n            this._fetchType = fetchObj._fetchType;\r\n            this._jar = fetchObj._jar;\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        this._abortControllerType = AbortController;\r\n        const abortObj = { _abortControllerType: this._abortControllerType };\r\n        if (configureAbortController(abortObj)) {\r\n            this._abortControllerType = abortObj._abortControllerType;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { getEventSource, getWS } from \"./DynamicImports\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            webSocketModule = getWS();\r\n            eventSourceModule = getEventSource();\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    }\r\n                    catch {\r\n                        callStop = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.transport.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const negotiateUrl = new URL(url);\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        }\r\n        else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        }\r\n        else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n        negotiateUrl.search = searchParams.toString();\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                };\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        }\r\n        catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        }\r\n        else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                        this._invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n    _createCloseMessage() {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withServerTimeout(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withKeepAliveInterval(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withStatefulReconnect(options) {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n        this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n    MessageType[MessageType[\"Ack\"] = 8] = \"Ack\";\r\n    MessageType[MessageType[\"Sequence\"] = 9] = \"Sequence\";\r\n})(MessageType || (MessageType = {}));\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 2;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _isAckMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n    _isSequenceMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url, deleteOptions);\r\n            }\r\n            catch (err) {\r\n                error = err;\r\n            }\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class MessageBuffer {\r\n    constructor(protocol, connection, bufferSize) {\r\n        this._bufferSize = 100000;\r\n        this._messages = [];\r\n        this._totalMessageCount = 0;\r\n        this._waitForSequenceMessage = false;\r\n        // Message IDs start at 1 and always increment by 1\r\n        this._nextReceivingSequenceId = 1;\r\n        this._latestReceivedSequenceId = 0;\r\n        this._bufferedByteCount = 0;\r\n        this._reconnectInProgress = false;\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n    async _send(message) {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n        let backpressurePromise = Promise.resolve();\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver = () => { };\r\n            let backpressurePromiseRejector = () => { };\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            }\r\n            else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        }\r\n        catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n    _ack(ackMessage) {\r\n        let newestAckedMessage = -1;\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                }\r\n                else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            }\r\n            else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n    _shouldProcessMessage(message) {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            }\r\n            else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n        this._latestReceivedSequenceId = currentId;\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n    _resetSequence(message) {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n    _disconnected() {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n    async _resend() {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            : this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n        this._reconnectInProgress = false;\r\n    }\r\n    _dispose(error) {\r\n        error !== null && error !== void 0 ? error : (error = new Error(\"Unable to reconnect to server.\"));\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n    _isInvocationMessage(message) {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n    _ackTimer() {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }));\r\n                    }\r\n                    // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                }\r\n                catch { }\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n                // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\nclass BufferedItem {\r\n    constructor(message, id, resolver, rejector) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"8.0.0\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["RouterModule","AuthGuard","DashboardComponent","NoMenuComponent","routes","path","component","canActivate","children","loadChildren","then","m","BranchesModule","BankDepositsModule","RegistersModule","RolesModule","UsersModule","OpeningRegisterModule","CloseRegisterModule","CollectModule","PettyCashModule","PettyCashApprovalModule","DashboardModule","UnsettledSessionModule","ReturnModule","ReturnTreasuryFundModule","provideExpensesModule","allocationModule","RegisterSettlementsModule","CollectionReportModule","MarkaziaVouchersModule","ReceiptsModule","AllocationModule","TransactionsModule","TransactionsHistoryModule","PettyCashTreasuryModule","RegisterBankDepositModule","ProfileModule","DashboardRoutingModule","forChild","imports","exports","DatePipe","constructor","route","sharedService","router","datePipe","ngOnInit","onSelectMenu","index","navList","forEach","element","IsActive","i","length","selectors","features","decls","vars","consts","template","i0","CommonModule","HeaderComponent","SidenavComponent","ModalCloseSessionComponent","SharedModule","declarations","EventEmitter","NavigationEnd","NavigationStart","faArrowLeft","faArrowRight","faBars","faBell","Subscription","headerService","generalService","_subjectService","signalRService","commonService","title","subscribe","titleOfPage","pagename","url","events","event","getUserPortals","fullName","localStorage","getItem","fullname","split","firstName","lastName","receiveNotifications","collectedOrder","sub","data","orderId","notificationList","filter","x","OrderId","subscription","add","notifications","startConnection","addNotificationListener","console","log","unshift","JSON","parse","removeDuplicates","redirectToOrder","item","OrderType","NavigateToRoute","reduce","unique","notification","some","obj","push","res","portalsList","redirectTo","window","location","replace","sessionStorage","mainPage","getRole","roleId","navigateByUrl","setTitle","SideNavToggle","menuStatus","sideNavToggled","emit","iscollapse","marginleft","innerWidth","menuItems","document","querySelectorAll","setAttribute","onWindowResize","showTitle","logout","removeItem","ngOnDestroy","stopConnection","unsubscribe","hostBindings","ctx","activeModal","modalService","confirm","semdToConfirm","closeSession","setItem","dismissAll","reload","inputs","type","minute","outputs","LogoutService","http","getUrl","LogoutUser","id","post","apiUrl","getHeaders","factory","providedIn","logoutService","openregisterService","closeRegisterService","GeneralService","_loginService","_commonService","isRegisterOpen","getUserMenuNew","GetUserMenu","pipe","findItem","userMenu","items","find","canClickItem","canClick","checkScreenSize","onSelectMenuCashier","sideNavStatus","openAutoCloseWarning","dateSession","transform","registerSessionCreatedAt","dateEndSession","Date","endSession","dateCurrunt","sessionEndMillesecnd","getTime","sessionEndMinut","getMinutes","setTimeout","modalRef","open","componentInstance","openAutoClose","redirectUserAccordingToEnv","host","indexOf","href","getUserId","response","CanOpenRegisterSession","isSuccess","canOpenRegister","opendSession","openreg","closereg","clollectreg","CanCloseRegisterSession","canCloseRegisterSession","registerSession","createdAt","GetUserMenuNew","editMenu","menu","isExist","canView","viewPermission","cashierNavList","isIpAddres","handler","toggleCaretIcon","cashierMenu","cashier","oppendAt","sessionId","currentSessionId","toString","allowedToTime","hasOppendSession","sessionDetails","next","opened","CloseRegisterService","getCurrentSessionCollectedBankTransfere","searchText","pageNo","get","actionsOnBankTransfere","transfer","editCollectionBankTransfere","reverseActionsOnBankTransfere","getCurrentSessionCollectedBankPledge","actionsOnBankPledge","pledge","editCollectionBankPledge","reverseActionsOnBankPledge","GetRegisterClosingData","getRegisterClosingDataFinal","CloseRegisterSession","GetCurrentSessionCollectedCheques","GetCurrentSessionCollectedCard","pageSize","EditCollectionCheuqe","cheque","ActionsOnCheques","ReverseActionsOnCheques","EditCollectionByCards","ActionsOnCard","actionsOnCardGroup","ReverseActionsOnCard","getLookupsById","OpenregisterService","OpenRegisterSession","register","styles","signalR","SignalRService","hubConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","catch","err","onclose","error","callback","on","stop","BehaviorSubject","Subject","SubjectService","AbortController","_isAborted","onabort","abort","signal","aborted","HeaderNames","HttpClient","AccessTokenHttpClient","innerClient","accessTokenFactory","_innerClient","_accessTokenFactory","send","request","allowRetry","_accessToken","_setAuthorizationHeader","statusCode","headers","Authorization","getCookieString","AbortError","FetchHttpClient","Platform","XhrHttpClient","DefaultHttpClient","logger","fetch","isNode","_httpClient","XMLHttpRequest","Error","abortSignal","Promise","reject","method","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","_retryDelays","undefined","nextRetryDelayInMilliseconds","retryContext","previousRetryCount","configureFetch","_jar","require","CookieJar","_fetchType","configureAbortController","_abortControllerType","getWS","getEventSource","HttpError","errorMessage","trueProto","new","target","prototype","__proto__","TimeoutError","UnsupportedTransportError","message","transport","errorType","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","HttpResponse","LogLevel","getGlobalThis","isArrayBuffer","_logger","fetchObj","bind","abortObj","abortController","timeoutId","timeout","msTimeout","Warning","content","body","cache","credentials","withCredentials","mode","redirect","e","clearTimeout","ok","deserializeContent","statusText","status","responseType","payload","cookies","getCookies","c","join","arrayBuffer","text","TextMessageFormat","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","write","stringify","parseHandshakeResponse","messageData","remainingData","binaryData","Uint8Array","separatorIndex","RecordSeparatorCode","responseLength","String","fromCharCode","apply","Array","slice","call","byteLength","buffer","textData","RecordSeparator","substring","messages","responseMessage","Cookie","options","delete","HttpTransportType","TransferFormat","LongPollingTransport","ServerSentEventsTransport","Arg","createLogger","getUserAgentHeader","WebSocketTransport","MAX_REDIRECTS","HttpConnection","_stopPromiseResolver","_negotiateVersion","isRequired","baseUrl","_resolveUrl","logMessageContent","webSocketModule","eventSourceModule","WebSocket","EventSource","httpClient","_connectionState","_connectionStarted","_options","onreceive","transferFormat","Binary","isIn","Debug","_startInternalPromise","_startInternal","_stopPromise","_sendQueue","TransportSendQueue","resolve","_stopInternal","_stopError","_stopConnection","skipNegotiation","WebSockets","_constructTransport","_startTransport","negotiateResponse","redirects","_getNegotiationResponse","ProtocolVersion","accessToken","_createTransport","inherentKeepAlive","name","value","negotiateUrl","_resolveNegotiateUrl","negotiateVersion","connectionToken","connectionId","useStatefulReconnect","_useStatefulReconnect","_createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","_isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","_resolveTransportOrError","ex","ServerSentEvents","LongPolling","reconnect","callStop","disconnected","connect","resend","transportMatches","transferFormats","map","s","Information","lastIndexOf","isBrowser","aTag","createElement","URL","pathname","endsWith","searchParams","URLSearchParams","has","append","search","actualTransport","_transport","_buffer","_executing","_sendBufferedData","PromiseSource","_transportResult","_sendLoopPromise","_sendLoop","_bufferData","promise","transportResult","_concatBuffers","arrayBuffers","totalLength","b","a","result","offset","set","_resolver","_rejecter","reason","MessageType","getErrorString","MessageBuffer","DEFAULT_TIMEOUT_IN_MS","DEFAULT_PING_INTERVAL_IN_MS","DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE","HubConnectionState","HubConnection","create","connection","protocol","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","statefulReconnectBufferSize","_nextKeepAlive","_freezeEventListener","_statefulReconnectBufferSize","_protocol","_reconnectPolicy","_handshakeProtocol","_processIncomingData","_connectionClosed","_callbacks","_methods","_closedCallbacks","_reconnectingCallbacks","_reconnectedCallbacks","_invocationId","_receivedHandshakeResponse","Disconnected","_cachedPingMessage","writeMessage","Ping","state","Reconnecting","_startPromise","_startWithStateTransitions","Connecting","addEventListener","Connected","_stopDuringStartError","handshakePromise","_handshakeResolver","_handshakeRejecter","version","_sendMessage","_cleanupTimeout","_resetTimeoutPeriod","_resetKeepAliveInterval","_messageBuffer","_disconnected","_resend","_cleanupPingTimer","startPromise","Disconnecting","_reconnectDelayHandle","_completeClose","_sendCloseMessage","_sendWithProtocol","_createCloseMessage","stream","methodName","args","streams","streamIds","_replaceStreamingParams","invocationDescriptor","_createStreamInvocation","promiseQueue","subject","cancelCallback","cancelInvocation","_createCancelInvocation","invocationId","invocationEvent","Completion","complete","_launchStreams","_send","sendPromise","_createInvocation","invoke","p","newMethod","toLowerCase","off","handlers","removeIdx","splice","onreconnecting","onreconnected","_processHandshakeResponse","parseMessages","_shouldProcessMessage","Invocation","_invokeClientMethod","StreamItem","Close","allowReconnect","Ack","_ack","Sequence","_resetSequence","_timeoutHandle","serverTimeout","_pingServerHandle","nextPing","invocationMessage","methods","_createCompletionMessage","methodsCopy","expectsResponse","exception","completionMessage","prevRes","arguments","_cancelCallbacksWithError","_reconnect","_dispose","removeEventListener","reconnectStartTime","now","previousReconnectAttempts","retryError","nextRetryDelay","_getNextRetryDelay","elapsedMilliseconds","retryReason","callbacks","Object","keys","key","nonblocking","streamId","_createStreamItemMessage","argument","_isObservable","arg","StreamInvocation","CancelInvocation","JsonHubProtocol","NullLogger","ConsoleLogger","LogLevelNameMapping","trace","Trace","debug","info","information","warn","warning","critical","Critical","none","None","parseLogLevel","mapping","configureLogging","logging","isLogger","logLevel","transportTypeOrOptions","isNotEmpty","httpConnectionOptions","withHubProtocol","retryDelaysOrReconnectPolicy","isArray","withServerTimeout","milliseconds","_serverTimeoutInMilliseconds","withKeepAliveInterval","_keepAliveIntervalInMilliseconds","withStatefulReconnect","bufferSize","instance","JSON_HUB_PROTOCOL_NAME","Text","input","hubMessages","parsedMessage","_isInvocationMessage","_isStreamItemMessage","_isCompletionMessage","_isAckMessage","_isSequenceMessage","_assertNotEmptyString","sequenceId","_logLevel","_message","getDataDetail","sendMessage","pollAborted","_pollAbort","_running","_url","pollOptions","pollUrl","_closeError","_receiving","_poll","_raiseOnClose","deleteOptions","logMessage","_bufferSize","_messages","_totalMessageCount","_waitForSequenceMessage","_nextReceivingSequenceId","_latestReceivedSequenceId","_bufferedByteCount","_reconnectInProgress","_connection","serializedMessage","backpressurePromise","backpressurePromiseResolver","backpressurePromiseRejector","BufferedItem","ackMessage","newestAckedMessage","_id","currentId","_ackTimer","_rejector","_ackTimerHandle","resolver","rejector","encodeURIComponent","eventSource","isWebWorker","onmessage","_close","onerror","onopen","_eventSource","close","SubjectSubscription","observers","observer","output","pop","VERSION","val","match","values","self","isReactNative","process","release","includeContent","detail","formatArrayBuffer","view","str","num","pad","substr","ArrayBuffer","transportName","_subject","_observer","dispose","_","minimumLogLevel","_minLevel","out","msg","toISOString","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","os","runtime","runtimeVersion","userAgent","majorAndMinor","platform","versions","node","stack","globalThis","global","webSocketConstructor","_logMessageContent","_webSocketConstructor","_headers","token","webSocket","binaryType","_event","_webSocket","ErrorEvent","readyState","OPEN","_isCloseEvent","wasClean","code","xhr","setRequestHeader","header","onload","responseText","ontimeout"],"sourceRoot":"webpack:///","x_google_ignoreList":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}