{"version":3,"file":"src_app_dashboard_modules_admin_registers_registers_module_ts.js","mappings":"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","sources":["./src/app/dashboard/modules/admin/registers/add-register-and-setup/add-register-and-setup.component.ts","./src/app/dashboard/modules/admin/registers/add-register-and-setup/add-register-and-setup.component.html","./src/app/dashboard/modules/admin/registers/addregister/addregister.component.html","./src/app/dashboard/modules/admin/registers/addregister/addregister.component.ts","./src/app/dashboard/modules/admin/registers/reg-confirm/reg-confirm.component.ts","./src/app/dashboard/modules/admin/registers/reg-confirm/reg-confirm.component.html","./src/app/dashboard/modules/admin/registers/reg-done/reg-done.component.html","./src/app/dashboard/modules/admin/registers/reg-done/reg-done.component.ts","./src/app/dashboard/modules/admin/registers/register.service.ts","./src/app/dashboard/modules/admin/registers/registers-routing.module.ts","./src/app/dashboard/modules/admin/registers/registers.component.ts","./src/app/dashboard/modules/admin/registers/registers.component.html","./src/app/dashboard/modules/admin/registers/registers.module.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { ToastrService } from 'ngx-toastr';\nimport { HeaderService } from '../../../../../services/header.service';\nimport { RegConfirmComponent } from '../reg-confirm/reg-confirm.component';\nimport { RegDoneComponent } from '../reg-done/reg-done.component';\nimport { RegisterSetupService } from '../register-setup.service';\n\n@Component({\n  selector: 'app-add-register-and-setup',\n  templateUrl: './add-register-and-setup.component.html',\n  styleUrls: ['./add-register-and-setup.component.scss'],\n})\nexport class AddRegisterAndSetupComponent implements OnInit {\n  registerForm: FormGroup;\n  registerId: number;\n  roleId: number;\n  isEdit: boolean = false;\n  isLoading: boolean;\n\n  constructor(\n    private registerSetupService: RegisterSetupService,\n    private router: Router,\n    private modalService: NgbModal,\n    public toster: ToastrService,\n    private route: ActivatedRoute,\n    public headerService: HeaderService,\n    private fb: FormBuilder\n  ) {}\n  submitted = false;\n  cities: any = [];\n  branches: any = [];\n  collectionOrders: any = [];\n  collectionOrdersAry: any[] = [];\n  currencies: any[] = [];\n  deposites: any[] = [];\n  users: any[] = [];\n  userRoles: any[] = [];\n  branchInfo: any;\n  isStatus: boolean = true;\n  ngOnInit(): void {\n    this.getDefaultPermissions();\n    this.getForm();\n    this.getCollectionOrders();\n    this.getCities();\n    this.getBranches();\n    this.getCurrencies();\n    this.getDeposites();\n    this.getUsers();\n    this.getRoles();\n\n    this.registerId = this.route.snapshot.params['id'];\n\n    if (this.registerId) {\n      this.isEdit = true;\n      if ((this.isEdit = true)) {\n        this.headerService.setTitle('Registers > View register');\n      }\n      this.GetRegisterDetails();\n      // this.getRoleDetails();\n    } else {\n      this.headerService.setTitle('Registers > Add register');\n    }\n  }\n  cardChange(val: any) {\n    if (val.target.checked) {\n      this.registerForm.controls['visa'].enable();\n      this.registerForm.controls['mastercard'].enable();\n      this.registerForm.controls['americanExpress'].enable();\n    } else {\n      this.registerForm.controls['visa'].disable();\n      this.registerForm.controls['mastercard'].disable();\n      this.registerForm.controls['americanExpress'].disable();\n      this.registerForm.controls['visa'].patchValue(false);\n      this.registerForm.controls['mastercard'].patchValue(false);\n      this.registerForm.controls['americanExpress'].patchValue(false);\n    }\n    this.changeSession();\n  }\n  changeSession() {\n    if (\n      this.registerForm.value.cash ||\n      this.registerForm.value.cards ||\n      this.registerForm.value.onAccount\n    ) {\n      this.registerForm.controls['numberOfSessionsPerDay'].enable();\n      this.registerForm.controls['numberOfSessionsPerWeek'].enable();\n      this.registerForm.controls['allowOpenWithoutSettlement'].enable();\n      // this.registerForm.controls['cashDepositTypeId'].enable();\n      this.registerForm.controls['allowedSessionTimeFrom'].enable();\n      this.registerForm.controls['allowedSessionTimeTo'].enable();\n    } else {\n      this.registerForm.controls['numberOfSessionsPerDay'].disable();\n      this.registerForm.controls['numberOfSessionsPerWeek'].disable();\n      this.registerForm.controls['allowOpenWithoutSettlement'].disable();\n      // this.registerForm.controls['cashDepositTypeId'].disable();\n      this.registerForm.controls['allowedSessionTimeFrom'].disable();\n      this.registerForm.controls['allowedSessionTimeTo'].disable();\n      this.registerForm.controls['numberOfSessionsPerDay'].patchValue(null);\n      this.registerForm.controls['numberOfSessionsPerWeek'].patchValue(null);\n      this.registerForm.controls['allowOpenWithoutSettlement'].patchValue(\n        false\n      );\n      // this.registerForm.controls['cashDepositTypeId'].patchValue(null);\n      this.registerForm.controls['allowedSessionTimeFrom'].patchValue(null);\n      this.registerForm.controls['allowedSessionTimeTo'].patchValue(null);\n    }\n  }\n  cashChange(val: any) {\n    if (val.target.checked) {\n      this.registerForm.controls['registerCurrencies'].enable();\n    } else {\n      this.registerForm.controls['registerCurrencies'].disable();\n      this.registerForm.controls['registerCurrencies'].patchValue(null);\n    }\n    this.changeSession();\n  }\n\n  changeSettlement(val: any) {\n    if (val.target.checked) {\n      this.registerForm.controls[\n        'numberOfOpeningWithoutSettlementPerDay'\n      ].enable();\n      this.registerForm.controls[\n        'numberOfOpeningWithoutSettlementPerWeek'\n      ].enable();\n    } else {\n      this.registerForm.controls[\n        'numberOfOpeningWithoutSettlementPerDay'\n      ].disable();\n      this.registerForm.controls[\n        'numberOfOpeningWithoutSettlementPerWeek'\n      ].disable();\n      this.registerForm.controls[\n        'numberOfOpeningWithoutSettlementPerDay'\n      ].patchValue(null);\n      this.registerForm.controls[\n        'numberOfOpeningWithoutSettlementPerWeek'\n      ].patchValue(null);\n    }\n  }\n\n  onAccChange(val: any) {\n    if (val.target.checked) {\n      this.registerForm.controls['cheque'].enable();\n      this.registerForm.controls['onCustomerAccount'].enable();\n      // this.registerForm.controls['otherRev'].enable();\n    } else {\n      this.registerForm.controls['cheque'].disable();\n      this.registerForm.controls['onCustomerAccount'].disable();\n      // this.registerForm.controls['otherRev'].disable();\n      this.registerForm.controls['cheque'].patchValue(false);\n      this.registerForm.controls['onCustomerAccount'].patchValue(false);\n      // this.registerForm.controls['otherRev'].patchValue(false);\n    }\n    this.changeSession();\n  }\n  removeregistersName() {\n    this.registerForm.get('registersName')?.patchValue('');\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  getForm() {\n    this.registerForm = this.fb.group({\n      id: [''],\n      registersName: [''],\n      cash: false,\n      onAccount: false,\n      cheque: [{ value: false, disabled: true }],\n      onCustomerAccount: [{ value: false, disabled: true }],\n      cards: [false],\n      visa: [{ value: false, disabled: true }],\n      mastercard: [{ value: false, disabled: true }],\n      americanExpress: [{ value: false, disabled: true }],\n      // otherRev: [{ value: false, disabled: true }],\n\n      collectForAllBranches: false,\n      collectForOwnBranch: false,\n\n      registerCurrencies: [{ value: [], disabled: true }],\n      city: [null, [Validators.required]],\n      branchId: [null, [Validators.required]],\n      allowedSessionTimeFrom: [{ value: '', disabled: true }],\n      allowedSessionTimeTo: [{ value: '', disabled: true }],\n      cashDepositTypeId: [null],\n      registerEmployees: this.fb.array([]),\n      allowOpenWithoutSettlement: [{ value: false, disabled: true }],\n      collectionOrders: [null],\n      numberOfSessionsPerDay: [{ value: 0, disabled: true }],\n      numberOfSessionsPerWeek: [{ value: 0, disabled: true }],\n      numberOfOpeningWithoutSettlementPerDay: [{ value: 0, disabled: true }],\n      numberOfOpeningWithoutSettlementPerWeek: [{ value: 0, disabled: true }],\n      ipAddresses: '',\n      status: 2001,\n    });\n  }\n  // , userList = ''\n  newEmployee(roleId = null, userId = null) {\n    return this.fb.group({\n      roleId: [roleId, [Validators.required]],\n      userId: [userId, [Validators.required]],\n      // userList: ['', [Validators.required]],\n    });\n  }\n  // , userList = ''\n  addNewEmployee(roleId = null, userId = null) {\n    // userList\n    this.employees().push(this.newEmployee(roleId, userId));\n  }\n  employees(): FormArray {\n    return this.registerForm.get('registerEmployees') as FormArray;\n  }\n  deleteEmployee(employeeIndex) {\n    this.employees().removeAt(employeeIndex);\n  }\n\n  getBranches() {\n    this.registerSetupService\n      .getBranches({ Status: 2001, sort: 2, PageSize: 1000 })\n      .subscribe((response: any) => {\n        this.branches = response.data;\n      });\n  }\n\n  changeBranch(val: any) {\n    //console.log(val);\n    this.registerForm.get('city')?.patchValue(val.city);\n    this.registerForm.get('branchId')?.patchValue(val.branchId);\n\n    this.registerSetupService\n      .getBranchDetails(val.branchId)\n      .subscribe((response: any) => {\n        this.branchInfo = response.data;\n        this.registerForm.controls['allowedSessionTimeFrom'].patchValue(\n          this.branchInfo.branchWorkingHours[0].fromTime\n        );\n        this.registerForm.controls['allowedSessionTimeTo'].patchValue(\n          this.branchInfo.branchWorkingHours[0].toTime\n        );\n        //console.log('branch Info', this.branchInfo);\n      });\n    //console.log(val.branchId);\n  }\n  clearBranch() {}\n  changeCity(val: any) {\n    this.getBranchesByCity(val);\n    this.registerForm.get('branchId')?.patchValue(null);\n  }\n\n  getBranchesByCity(city) {\n    this.registerSetupService\n      .getBranches({\n        Status: 2001,\n        sort: 2,\n        Search: city || '',\n        PageSize: 1000,\n      })\n      .subscribe((response: any) => {\n        // this.registerForm.get('branchId')?.patchValue('');\n        this.branches = response.data;\n      });\n  }\n\n  branchSelect(item: any) {\n    //console.log(item);\n  }\n  selectOrderCollection(item: number) {\n    //console.log(item);\n    if (this.collectionOrdersAry.includes(item)) {\n      this.collectionOrdersAry.splice(\n        this.collectionOrdersAry.indexOf(item),\n        1\n      );\n    } else {\n      this.collectionOrdersAry.push(item);\n    }\n    console.log(this.collectionOrdersAry);\n  }\n\n  get rolePermissions() {\n    return this.registerForm.controls['rolePermissions'] as FormArray;\n  }\n  get formValid(): { [key: string]: AbstractControl } {\n    return this.registerForm.controls;\n  }\n  getCurrencies() {\n    this.registerSetupService.getLookupsById(9).subscribe((response: any) => {\n      this.currencies = response.data.map((x) => ({\n        currencyId: x.id,\n        name: x.name[0].lookupName,\n      }));\n    });\n  }\n  getDeposites() {\n    this.registerSetupService.getLookupsById(8).subscribe((response: any) => {\n      this.deposites = response.data.map((x) => ({\n        id: x.id,\n        name: x.name[0].lookupName,\n      }));\n    });\n  }\n  getCollectionOrders() {\n    this.registerSetupService.getLookupsById(7).subscribe((response: any) => {\n      this.collectionOrders = response.data;\n    });\n  }\n  getCities() {\n    this.registerSetupService.getLocations().subscribe((response: any) => {\n      this.cities = response.data;\n\n      //console.log('cities', response.data);\n    });\n  }\n  userRoleId: number = 1;\n  getUsers() {\n    this.registerSetupService\n      .getUsers(this.userRoleId)\n      .subscribe((response: any) => {\n        this.users = response.data;\n\n        // this.employees().controls[0]?.get('userList').patchValue(this.users);\n        // console.log(this.employees().controls);\n        // console.log(this.registerForm.value);\n        //console.log('users', response.data);\n      });\n  }\n  usersall: any;\n  getUsersall() {\n    this.registerSetupService.getUsersall().subscribe((response: any) => {\n      this.usersall = response.data;\n    });\n  }\n  getRoles() {\n    this.registerSetupService.getRoles().subscribe((response: any) => {\n      this.userRoles = response.data;\n\n      if (this.isEdit == false) {\n        // console.log(this.isEdit);\n        this.addNewEmployee(1, null);\n      }\n    });\n  }\n\n  getUsersByRole(event, employeeIndex) {\n    this.registerSetupService\n      .getUsers(event.roleId)\n      .subscribe((response: any) => {\n        this.users = response.data;\n        // this.employees()\n        //   .controls[employeeIndex].get('userList')\n        //   .patchValue(this.users);\n\n        //console.log('users', response.data);\n      });\n  }\n  AddRolePermissions() {\n    return this.fb.group({\n      permissionItemId: 0,\n      permissionItemDetailId: 0,\n    });\n  }\n  roles: any;\n  getDefaultPermissions() {\n    return this.registerSetupService\n      .getDefaultPermissions()\n      .subscribe((response: any) => {\n        if (response) {\n          this.roles = response.data;\n        }\n      });\n  }\n  getRoleDetails() {\n    return this.registerSetupService\n      .GetRoleDetails(this.roleId)\n      .subscribe((response: any) => {\n        if (response) {\n          this.roles = response.data;\n        }\n      });\n  }\n\n  onSubmit() {\n    this.registerForm.controls['collectionOrders'].patchValue(\n      this.collectionOrdersAry.map((x) => ({ orderId: x }))\n    );\n    console.log(this.registerForm.value);\n\n    // this.registerForm\n    //   .get('ipAddresses')\n    //   ?.patchValue([this.registerForm.get('ipAddresses')?.value]);\n\n    // if (this.registerForm.get('ipAddresses')?.value) {\n    //   this.registerForm\n    //     .get('ipAddresses')\n    //     ?.patchValue(this.registerForm.get('ipAddresses')?.value.split(' '));\n    // }\n\n    console.log(this.registerForm.value);\n    // console.log(this.registerForm.getRawValue());\n\n    if (this.registerForm.get('id')?.value == 0) {\n      this.addRegister();\n    } else {\n      this.UpdateRegister();\n    }\n  }\n  errorMessage: any;\n  errorsList: any;\n  ipAdres = [];\n  addRegister() {\n    this.submitted = true;\n\n    this.registerForm\n      .get('registersName')\n      ?.patchValue(this.registerForm.get('registersName')?.value.trim());\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n\n    this.registerForm\n      .get('ipAddresses')\n      ?.patchValue(this.registerForm.get('ipAddresses')?.value.split(' '));\n\n    this.registerForm.controls['registerCurrencies'].patchValue(\n      this.registerForm.value?.registerCurrencies?.map((x) => ({\n        currencyId: x,\n      }))\n    );\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.getRawValue());\n    this.registerSetupService\n      .addRegister(this.registerForm.getRawValue())\n      .subscribe(\n        (response: any) => {\n          if (response.isSuccess == true) {\n            console.log(response);\n            const modalRef = this.modalService.open(RegDoneComponent);\n            modalRef.componentInstance.name = 'add';\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n            console.log('response-error', response);\n\n            this.registerForm.controls['registerCurrencies'].patchValue(\n              this.registerForm.value?.registerCurrencies?.map(\n                (x) => x.currencyId\n              )\n            );\n            this.registerForm\n              .get('ipAddresses')\n              ?.patchValue(this.registerForm.get('ipAddresses')?.value[0]);\n\n            this.errorsList = response.Errors || response.errors;\n          }\n        },\n        (error: any) => {\n          this.isLoading = false;\n          this.registerForm.controls['registerCurrencies'].setValue(\n            this.registerForm.value?.registerCurrencies?.map(\n              (x) => x.currencyId\n            )\n          );\n          this.registerForm\n            .get('ipAddresses')\n            ?.patchValue(this.registerForm.get('ipAddresses')?.value[0]);\n          console.log('error2', error);\n          console.log('error', error.error.errors);\n          this.errorsList = error.error.errors || error.error.Errors;\n\n          console.log(error), (this.errorMessage = error.statusText);\n\n          // this.registerForm.controls['registerCurrencies'].patchValue(\n          //   this.registerForm.value?.registerCurrencies?.map((x) => ({\n          //     currencyId: x.id,\n          //   }))\n          // );\n        }\n      );\n  }\n  UpdateRegister() {\n    this.registerForm.controls['registerCurrencies'].patchValue(\n      this.registerForm.value?.registerCurrencies?.map((x) => ({\n        currencyId: x,\n      }))\n    );\n    this.registerForm\n      .get('ipAddresses')\n      ?.patchValue(this.registerForm.get('ipAddresses')?.value.split(' '));\n\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.getRawValue());\n    this.isLoading = true;\n\n    return this.registerSetupService\n      .UpdateRegister(this.registerForm.getRawValue())\n      .subscribe(\n        (response: any) => {\n          if (response.isSuccess == true) {\n            console.log(response);\n            const modalRef = this.modalService.open(RegDoneComponent);\n            modalRef.componentInstance.name = 'edit';\n            this.collectionOrdersAry = [];\n            this.GetRegisterDetails();\n            this.isLoading = false;\n            this.isShowRegisterInfo = false;\n            this.isBranchLocation = false;\n            this.isCollectionOrders = false;\n            this.isEmployees = false;\n            this.isSetup = false;\n          } else {\n            this.isLoading = false;\n            this.registerForm.controls['registerCurrencies'].setValue(\n              this.registerForm.value?.registerCurrencies?.map(\n                (x) => x.currencyId\n              )\n            );\n\n            this.registerForm\n              .get('ipAddresses')\n              ?.patchValue(this.registerForm.get('ipAddresses')?.value[0]);\n\n            // this.errorsList = response.Errors || response.errors;\n          }\n        },\n        (error: any) => {\n          this.isLoading = false;\n\n          this.registerForm.controls['registerCurrencies'].setValue(\n            this.registerForm.value?.registerCurrencies?.map(\n              (x) => x.currencyId\n            )\n          );\n\n          this.registerForm\n            .get('ipAddresses')\n            ?.patchValue(this.registerForm.get('ipAddresses')?.value[0]);\n          console.log(error), (this.errorMessage = error.statusText);\n        }\n      );\n  }\n  removeBranchName() {\n    this.registerForm.get('name')?.patchValue('');\n  }\n\n  chooseStatus(val) {\n    //this.isStatus = this.isStatus == false ? true : false;\n    //this.isStatus = ! this.isStatus\n    if (val.target.checked) {\n      this.registerForm.get('status')?.patchValue(2001);\n    } else {\n      this.registerForm.get('status')?.patchValue(2002);\n    }\n    //console.log(this.registerForm.value.status);\n  }\n\n  pushPermissionItemId(e: any, permissionSubCatId) {\n    let isExist = this.registerForm.value.rolePermissions.findIndex(\n      (elem: any) =>\n        elem.permissionItemId === e.target.value ||\n        elem.permissionItemId === Number(e.target.value)\n    );\n\n    if (isExist !== -1) {\n      //console.log('isExist', isExist);\n      (this.registerForm.get('rolePermissions') as FormArray).removeAt(isExist);\n    } else {\n      this.rolePermissions.push(\n        this.fb.group({\n          permissionItemId: Number(e.target.value),\n          permissionItemDetailId: 0,\n        })\n      );\n    }\n\n    //console.log(this.registerForm.value);\n  }\n  registers: any;\n  GetRegisterDetails() {\n    return this.registerSetupService\n      .GetRegisterDetails(this.registerId)\n      .subscribe((response: any) => {\n        if (response) {\n          this.registers = response.data;\n          this.registerForm.patchValue(response.data);\n\n          if (this.registerForm.value.city) {\n            this.getBranchesByCity(this.registerForm.value.city);\n          }\n\n          if (this.registerForm.get('status')?.value == 2001) {\n            this.isStatus = true;\n          } else {\n            this.isStatus = false;\n          }\n          this.registers.collectionOrder.forEach((element) => {\n            this.collectionOrdersAry.push(element.order[0].lookupId);\n          });\n          // console.log(this.collectionOrdersAry);\n\n          for (let r = this.employees().value.length - 1; r >= 0; r--) {\n            this.employees().removeAt(r);\n          }\n\n          // this.userRoleId;\n          this.getUsersall();\n          this.registers.registerEmployees.forEach((element) => {\n            this.employees().push(\n              this.fb.group({\n                roleId: element.role.roleId,\n                userId: element.user.userId,\n                // userList: this.usersall,\n              })\n            );\n          });\n          // this.employees().controls[0].get('userList').patchValue(this.users);\n\n          // this.registers.registerCurrencies.forEach(element => {\n          //   this.registerCurrencies.push(\n          //     this.fb.group(element.lookupId)\n          //   );\n          // });\n\n          if (this.registers.registerCurrencies.length != 0) {\n            this.registerForm.controls['registerCurrencies'].enable();\n            // this.registers.registerCurrencies\n          }\n\n          this.registerForm.controls['registerCurrencies'].patchValue(\n            this.registers.registerCurrencies?.map(\n              (x) => x.currency[0]?.lookupId\n            )\n          );\n\n          if (this.registerForm.get('onAccount')?.value == true) {\n            this.registerForm.controls['cheque'].enable();\n            this.registerForm.controls['onCustomerAccount'].enable();\n            this.registerForm.controls['allowOpenWithoutSettlement'].enable();\n\n            // this.registerForm.controls['otherRev'].enable();\n          }\n\n          if (this.registerForm.get('cards')?.value == true) {\n            this.registerForm.controls['visa'].enable();\n            this.registerForm.controls['mastercard'].enable();\n            this.registerForm.controls['americanExpress'].enable();\n            this.registerForm.controls['allowOpenWithoutSettlement'].enable();\n          }\n          if (\n            this.registerForm.get('allowOpenWithoutSettlement')?.value == true\n          ) {\n            this.registerForm.controls['allowOpenWithoutSettlement'].enable();\n\n            this.registerForm.controls[\n              'numberOfOpeningWithoutSettlementPerDay'\n            ].enable();\n            this.registerForm.controls[\n              'numberOfOpeningWithoutSettlementPerWeek'\n            ].enable();\n          }\n\n          // if (this.registerForm.get('cashDepositTypeId')?.value) {\n          //   this.registerForm.controls['cashDepositTypeId'].enable();\n          // }\n\n          if (\n            this.registerForm.get('cash')?.value == true ||\n            this.registerForm.get('onAccount')?.value == true ||\n            this.registerForm.get('cards')?.value == true\n          ) {\n            this.registerForm.controls['numberOfSessionsPerDay'].enable();\n            this.registerForm.controls['numberOfSessionsPerWeek'].enable();\n            this.registerForm.controls['allowedSessionTimeFrom'].enable();\n            this.registerForm.controls['allowedSessionTimeTo'].enable();\n          }\n\n          this.registerForm\n            .get('ipAddresses')\n            ?.patchValue(this.registers?.registerIpAddresss[0]?.ipAddress);\n\n          // this.registerForm.controls['registerCurrencies'].patchValue(\n          //   this.registers.registerCurrencies?.map(\n          //     (x) => \"id\":x.currency[0].lookupId\n          //   )\n          // );\n          // console.log(this.registerForm.value);\n        }\n      });\n  }\n\n  isShowRegisterInfo: boolean = false;\n  editRegisterInfo() {\n    // this.isShowBranchInfo = this.isShowBranchInfo == false ? true : false;\n\n    if (this.isShowRegisterInfo == false) {\n      this.isShowRegisterInfo = true;\n      this.isBranchLocation = false;\n      this.isCollectionOrders = false;\n      this.isEmployees = false;\n      this.isSetup = false;\n    } else if (this.isShowRegisterInfo == true) {\n      const modalRef = this.modalService.open(RegConfirmComponent);\n      modalRef.componentInstance.name = 'edit';\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isShowRegisterInfo = false;\n        this.modalService.dismissAll();\n        // this.updateBranch();\n        this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isShowRegisterInfo = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n  isBranchLocation: boolean = false;\n  editBranchLocation() {\n    if (this.isBranchLocation == false) {\n      this.isBranchLocation = true;\n      this.isShowRegisterInfo = false;\n      this.isCollectionOrders = false;\n      this.isEmployees = false;\n      this.isSetup = false;\n    } else if (this.isBranchLocation == true) {\n      const modalRef = this.modalService.open(RegConfirmComponent);\n      modalRef.componentInstance.name = 'edit';\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isBranchLocation = false;\n        this.modalService.dismissAll();\n        // this.updateBranch();\n        this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isBranchLocation = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n  isCollectionOrders: boolean = false;\n  editCollectionOrders() {\n    if (this.isCollectionOrders == false) {\n      this.isCollectionOrders = true;\n      this.isBranchLocation = false;\n      this.isShowRegisterInfo = false;\n      this.isEmployees = false;\n      this.isSetup = false;\n    } else if (this.isCollectionOrders == true) {\n      const modalRef = this.modalService.open(RegConfirmComponent);\n      modalRef.componentInstance.name = 'edit';\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isCollectionOrders = false;\n        this.modalService.dismissAll();\n        // this.updateBranch();\n        this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isCollectionOrders = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n  isEmployees: boolean = false;\n  editEmployees() {\n    if (this.isEmployees == false) {\n      this.isEmployees = true;\n      this.isCollectionOrders = false;\n      this.isBranchLocation = false;\n      this.isShowRegisterInfo = false;\n      this.isSetup = false;\n    } else if (this.isEmployees == true) {\n      const modalRef = this.modalService.open(RegConfirmComponent);\n      modalRef.componentInstance.name = 'edit';\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isEmployees = false;\n        this.modalService.dismissAll();\n        // this.updateBranch();\n        this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isEmployees = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n  isSetup: boolean = false;\n  editSetup() {\n    if (this.isSetup == false) {\n      this.isSetup = true;\n      this.isEmployees = false;\n      this.isCollectionOrders = false;\n      this.isBranchLocation = false;\n      this.isShowRegisterInfo = false;\n    } else if (this.isSetup == true) {\n      const modalRef = this.modalService.open(RegConfirmComponent);\n      modalRef.componentInstance.name = 'edit';\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isSetup = false;\n        this.modalService.dismissAll();\n        // this.updateBranch();\n        this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isSetup = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n\n  chooseAllBranch() {\n    this.registerForm.get('collectForAllBranches')?.patchValue(true);\n    this.registerForm.get('collectForOwnBranch')?.patchValue(false);\n  }\n  chooseOwnBranch() {\n    this.registerForm.get('collectForOwnBranch')?.patchValue(true);\n    this.registerForm.get('collectForAllBranches')?.patchValue(false);\n  }\n\n  numberOnly(event): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div>\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"page-title\">\n\n          <h3> Register Information </h3>\n        </div>\n        <div class=\"card-form position-relative\" [class.overflow-hidden]=\"!isShowRegisterInfo  && isEdit\">\n          <div class=\"overlay-bi\" *ngIf=\"!isShowRegisterInfo && isEdit\"></div>\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Register Name *</label>\n                <input formControlName=\"registersName\" name=\"registersName\" type=\"text\" class=\"form-control\"\n                  placeholder=\"Type name\" required minlength=\"6\" maxlength=\"30\" OnlyCharacter autocomplete=\"off\">\n                <button class=\"btn btn-remove\" *ngIf=\"registerForm.get('registersName').value\"\n                  (click)=\"removeregistersName()\"><i class=\"fa-solid fa-xmark\"></i> </button>\n                <div\n                  *ngIf=\"submitted && formValid['registersName'].invalid ||  formValid['registersName'].invalid && (formValid['registersName'].dirty || formValid['registersName'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['registersName'].errors\">\n                  </span>\n                  <span class=\"error\" *ngIf=\"formValid['registersName'].errors['required']\"> This feild is\n                    required.</span>\n                  <span *ngIf=\"formValid['registersName'].errors['minlength']\">\n                    <span class=\"error\"> Register name length must be between 6 and 30 characters.</span>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"col-md-8\">\n              <div class=\"d-flex justify-content-end align-items-center\">\n                <div class=\"form-check form-switch\">\n                  <label class=\"labelactive\">Active</label>\n                  <input class=\"form-check-input\" [(ngModel)]=\"isStatus\" name=\"isStatus\" type=\"checkbox\" role=\"switch\"\n                    (change)=\"chooseStatus($event)\" [ngModelOptions]=\"{standalone: true}\">\n                </div>\n                <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n                  <button class=\"btn\" type=\"button\" (click)=\"editRegisterInfo()\" [disabled]=\"registerForm.invalid\">\n                    <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowUserInfo\"></i> -->\n                    <img src=\"assets/images/save.png\" *ngIf=\"isShowRegisterInfo \" class=\"save-img\" alt=\"\">\n                    <img src=\"assets/images/edit.png\" *ngIf=\"!isShowRegisterInfo\" alt=\"\">\n                  </button>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div class=\"page-title\">\n          <h3> Branch & Location* </h3>\n        </div>\n        <div class=\"card-form position-relative\" [class.overflow-hidden]=\"!isBranchLocation  && isEdit\">\n          <div class=\"overlay-bi\" *ngIf=\"!isBranchLocation && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editBranchLocation()\" [disabled]=\"registerForm.invalid\">\n              <!-- -->\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowUserInfo\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isBranchLocation \" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isBranchLocation\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n\n              <div class=\"form-group\">\n                <label>Location \"City\" </label>\n                <ng-select name=\"city\" (change)=\"changeCity($event)\" [searchable]=\"true\" [minTermLength]=\"3\" id=\"city\"\n                  placeholder=\"Type City\" [items]=\"cities\" bindLabel=\"city\" formControlName=\"city\" required>\n                </ng-select>\n\n                <div\n                  *ngIf=\"submitted && formValid['city'].invalid || formValid['city'].invalid  && (formValid['city'].dirty || formValid['city'].touched )   \"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['city'].errors\">\n                    <!-- <span class=\"error\">Please enter branch admin.</span> -->\n                    <span class=\"error\">This feild is required.</span>\n\n                  </span>\n                </div>\n              </div>\n\n            </div>\n            <div class=\"col-md-4\">\n\n              <div class=\"form-group\">\n                <label>Branch </label>\n                <ng-select name=\"branch\" (change)=\"changeBranch($event)\" [searchable]=\"true\" [minTermLength]=\"3\"\n                  id=\"branch\" placeholder=\"Type Branch\" [items]=\"branches\" bindValue=\"branchId\" bindLabel=\"branchName\"\n                  required formControlName=\"branchId\" (clear)=\"clearBranch()\">\n                </ng-select>\n                <!-- <div *ngIf=\" submitted &&  registerForm.get('branchId').value == 0\">\n                  <span class=\"error\">This element is required, please fill</span>\n                </div> -->\n                <div\n                  *ngIf=\"submitted && formValid['branchId'].invalid || formValid['branchId'].invalid  && (formValid['branchId'].dirty || formValid['branchId'].touched )   \"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['branchId'].errors\">\n                    <span class=\"error\">This feild is required.</span>\n\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\"></div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group \">\n                <label> IP addresses</label>\n                <input formControlName=\"ipAddresses\" name=\"ipAddresses\" type=\"text\" required class=\"form-control\"\n                  placeholder=\"IP addresses\" required>\n                <div\n                  *ngIf=\"submitted && formValid['ipAddresses'].invalid || formValid['ipAddresses'].invalid  && (formValid['ipAddresses'].dirty || formValid['ipAddresses'].touched )\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['ipAddresses'].errors\">\n                    <span class=\"error\">This feild is required.</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"page-title\">\n          <h3> Collection Orders* </h3>\n        </div>\n        <div class=\"card-form position-relative\" [class.overflow-hidden]=\"!isCollectionOrders  && isEdit\">\n          <div class=\"overlay-bi\" *ngIf=\"!isCollectionOrders && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editCollectionOrders()\" [disabled]=\"registerForm.invalid\">\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowUserInfo\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isCollectionOrders \" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isCollectionOrders\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div>\n                <div class=\"form-check form-check-inline\" *ngFor=\"let item of collectionOrders\">\n                  <input class=\"form-check-input\" type=\"checkbox\" [id]=\"item.id\"\n                    (change)=\"selectOrderCollection(item.id)\" [checked]=\"collectionOrdersAry.includes(item.id)\">\n                  <label class=\"form-check-label\" [for]=\"item.id\">{{item.name[0].lookupName}}</label>\n                </div>\n              </div>\n              <div *ngIf=\"submitted && collectionOrdersAry?.length == 0\" class=\"ng-dirty\">\n                <span>\n                  <span class=\"error\">Please select at least one order.</span>\n                </span>\n              </div>\n            </div>\n            <div class=\"col-md-12\">\n              <hr>\n              <div class=\"mb-3\">\n                <h5> Collect for * </h5>\n              </div>\n              <div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" formControlName=\"collectForAllBranches\" id=\"collectForAllBranches\"\n                    type=\"checkbox\" (click)=\"chooseAllBranch()\">\n                  <label for=\"collectForAllBranches\" class=\"form-check-label\"> All Branches </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" formControlName=\"collectForOwnBranch\" id=\"collectForOwnBranch\"\n                    type=\"checkbox\" (click)=\"chooseOwnBranch()\">\n                  <label for=\"collectForOwnBranch\" class=\"form-check-label\"> Own Branch</label>\n                </div>\n              </div>\n\n              <div\n                *ngIf=\"submitted &&  (f['collectForAllBranches'].value==false &&  f['collectForOwnBranch'].value==false ) \"\n                class=\"ng-dirty\">\n                <span class=\"error\">\n                  Please select one </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"page-title\">\n          <h3> Employees *</h3>\n        </div>\n        <div class=\"card-form position-relative\" [class.overflow-hidden]=\"!isEmployees  && isEdit\">\n          <div class=\"overlay-bi\" *ngIf=\"!isEmployees && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editEmployees()\" [disabled]=\"registerForm.invalid\">\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowUserInfo\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isEmployees \" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isEmployees\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <label class=\"form-check-label fw-bold\">Role Name</label>\n            </div>\n            <div class=\"col-md-4\">\n              <label class=\"form-check-label fw-bold\">User</label>\n            </div>\n          </div>\n          <hr class=\"m-0 mb-2\">\n\n          <div formArrayName=\"registerEmployees\">\n            <div *ngFor=\"let employee of employees().controls;let employeeIndex=index\">\n\n              <div class=\"row\" [formGroupName]=\"employeeIndex\">\n                <div class=\"col-md-2\">\n                  <div *ngIf=\"employeeIndex==0\">\n                    <label class=\"form-check-label mt-2\">Register Cashier</label>\n                  </div>\n                  <div *ngIf=\"employeeIndex!=0\">\n                    <ng-select name=\"role\" formControlName=\"roleId\" placeholder=\"Select Role\" [items]=\"userRoles\"\n                      bindLabel=\"name\" bindValue=\"roleId\" required (change)=\"getUsersByRole($event,employeeIndex)\">\n                    </ng-select>\n                    <div class=\"ng-dirty\" *ngIf=\" submitted && employee?.value?.roleId==null \">\n                      <span class=\"error\">\n                        Please select this role.\n                      </span>\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <ng-select name=\"adminUser\" formControlName=\"userId\" id=\"userId\" placeholder=\"Type name\"\n                      [items]=\"users\" bindLabel=\"fullName\" bindValue=\"userId\" required>\n                    </ng-select>\n\n                    <div class=\"ng-dirty\" *ngIf=\" submitted &&  employee?.value?.userId==null \">\n                      <span class=\"error\">\n                        Please select this user.\n                      </span>\n                    </div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-1\">\n                  <div class=\"btns-group justify-content-start m-0 mt-1\">\n                    <button *ngIf=\"employeeIndex!=0\" (click)=\"deleteEmployee(employeeIndex)\" class=\"btn btn-add p-2\"\n                      style=\"width: 40px;\"> <i class=\"fa fa-times\"></i></button>\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n\n          <!-- <div class=\"row\">\n            <div class=\"col-md-2\">\n              <label class=\"form-check-label\">Register Cashier</label>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n\n                <ng-select name=\"adminUser\" id=\"adminUser\" placeholder=\"Type name\" [items]=\"branches\"\n                  bindLabel=\"fullName\" required>\n                </ng-select>\n              </div>\n            </div>\n          </div> -->\n          <div class=\"row d-flex justify-content-end\">\n            <div class=\"btns-group\">\n              <input (click)=\"addNewEmployee()\" type=\"button\" class=\"btn btn-add\" value=\"Add Employee\">\n              <!-- <button (click)=\"addNewEmployee()\" class=\"btn btn-add\"> Add Employee</button> -->\n            </div>\n          </div>\n        </div>\n\n        <div class=\"page-title\">\n          <h3> Setup </h3>\n        </div>\n        <div class=\"card-form position-relative\" [class.overflow-hidden]=\"!isSetup  && isEdit\">\n          <div class=\"overlay-bi\" *ngIf=\"!isSetup && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editSetup()\" [disabled]=\"registerForm.invalid\">\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowUserInfo\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isSetup \" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isSetup\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <div class=\"form-check \">\n                <input class=\"form-check-input\" formControlName=\"cash\" (change)=\"cashChange($event)\" id=\"cash\"\n                  type=\"checkbox\">\n                <label for=\"cash\" class=\"form-check-label\">Cash</label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <ng-select name=\"Currency\" class=\"multi\" [multiple]=\"true\" [searchable]=\"true\" [minTermLength]=\"3\"\n                  id=\"Currency\" placeholder=\"Select Currency\" [items]=\"currencies\" bindLabel=\"name\"\n                  bindValue=\"currencyId\" formControlName=\"registerCurrencies\">\n                  <!-- required currencyId-->\n                </ng-select>\n                <div *ngIf=\" submitted &&  registerForm.get('registerCurrencies').value == 0\">\n                  <span class=\"error\">This feild is required.</span>\n                </div>\n                <div\n                  *ngIf=\"submitted && formValid['registerCurrencies'].invalid || formValid['registerCurrencies'].invalid  && (formValid['registerCurrencies'].dirty || formValid['registerCurrencies'].touched )   \"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['registerCurrencies'].errors\">\n                    <!-- <span class=\"error\">Please enter branch admin.</span> -->\n                    <span class=\"error\">This feild is required.</span>\n                  </span>\n                </div>\n              </div>\n\n            </div>\n            <!-- <div class=\"col-md-2\">\n              <div class=\"btns-group m-0\">\n                <button type=\"submit\" class=\"btn btn-save\">Add</button>\n              </div>\n            </div> -->\n\n          </div>\n          <div class=\"row mt-4\">\n            <div class=\"col-md-2\">\n              <div class=\"form-check form-check-inline\">\n                <input (change)=\"onAccChange($event)\" formControlName=\"onAccount\" class=\"form-check-input\" id=\"onA\"\n                  type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"onA\">On Account</label>\n              </div>\n            </div>\n            <div class=\"col-md-10\">\n              <div class=\"form-check form-check-inline\">\n                <input formControlName=\"cheque\" class=\"form-check-input\" id=\"cheque\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"cheque\">Cheque</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input formControlName=\"onCustomerAccount\" id=\"spare\" class=\"form-check-input\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"spare\">On Custumer Account</label>\n              </div>\n              <!-- <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" formControlName=\"otherRev\" id=\"otherR\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"otherR\">Other Revenues</label>\n              </div> -->\n            </div>\n          </div>\n\n          <div class=\"row my-2 mb-4\">\n            <div class=\"col-md-2\">\n              <div class=\"form-check form-check-inline\">\n                <input (change)=\"cardChange($event)\" formControlName=\"cards\" class=\"form-check-input\" id=\"cards\"\n                  type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"cards\">Cards</label>\n              </div>\n            </div>\n            <div class=\"col-md-10\">\n              <div class=\"form-check form-check-inline\">\n                <input formControlName=\"visa\" class=\"form-check-input\" id=\"visa\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"visa\">Visa Card</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input formControlName=\"mastercard\" class=\"form-check-input\" id=\"masterC\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"masterC\">Master Card</label>\n              </div>\n              <div class=\"form-check form-check-inline\">\n                <input formControlName=\"americanExpress\" id=\"American\" class=\"form-check-input\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"American\">American Express</label>\n              </div>\n            </div>\n            <div\n              *ngIf=\"submitted && f['cash'].value==false &&  f['cards'].value==false &&  f['onAccount'].value==false \"\n              class=\"ng-dirty\">\n              <span class=\"error\">\n                Please select at least one mathod from above</span>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <label class=\"fw-bold\" for=\"\">Register Session </label>\n          </div>\n          <hr class=\"m-0 mb-3\">\n          <div class=\"row\">\n            <div class=\"col-md-3\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Number of Session Per Day</label>\n                <input name=\"branchName\" type=\"number\" formControlName=\"numberOfSessionsPerDay\" class=\"form-control\"\n                  placeholder=\"Number of Sessions\" minlength=\"6\" maxlength=\"30\" autocomplete=\"off\"\n                  (keypress)=\"numberOnly($event)\">\n                <div\n                  *ngIf=\"(f['numberOfSessionsPerDay'].value*7)+1 <=(f['numberOfSessionsPerWeek'].value) && f['numberOfSessionsPerWeek'].value !=0 && f['numberOfSessionsPerWeek'].value !='' && f['numberOfSessionsPerDay'].value !=0 && f['numberOfSessionsPerDay'].value !=''\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\">\n                    seesion/week must less than session/Day of complete week </span>\n                </div>\n                <div\n                  *ngIf=\"submitted && formValid['numberOfSessionsPerDay'].invalid ||  formValid['numberOfSessionsPerDay'].invalid && (formValid['numberOfSessionsPerDay'].dirty || formValid['numberOfSessionsPerDay'].touched)\"\n                  class=\"ng-dirty\">\n\n                  <span class=\"error\" *ngIf=\"formValid['numberOfSessionsPerDay'].errors['required']\"> This feild is\n                    required.</span>\n\n                </div>\n\n                <!-- <button class=\"btn btn-remove\"><i class=\"fa-solid fa-xmark\"></i> </button> -->\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Number of Session Per Week</label>\n                <input name=\"branchName\" type=\"number\" formControlName=\"numberOfSessionsPerWeek\" class=\"form-control\"\n                  placeholder=\"Number of Sessions\" minlength=\"6\" maxlength=\"30\" autocomplete=\"off\"\n                  (keypress)=\"numberOnly($event)\">\n                <!-- required -->\n                <div *ngIf=\"(f['numberOfSessionsPerDay'].value*7)+1 <=(f['numberOfSessionsPerWeek'].value) &&\n                        f['numberOfSessionsPerWeek'].value !=0 && f['numberOfSessionsPerWeek'].value !='' &&\n                        f['numberOfSessionsPerDay'].value !=0 && f['numberOfSessionsPerDay'].value !='' ||\n                        f['numberOfSessionsPerDay'].value > f['numberOfSessionsPerWeek'].value\" class=\"ng-dirty\">\n                  <span class=\"error\">\n                    seesion/week must less than session/Day of complete week </span>\n                </div>\n\n                <div\n                  *ngIf=\"submitted && formValid['numberOfSessionsPerWeek'].invalid ||  formValid['numberOfSessionsPerWeek'].invalid && (formValid['numberOfSessionsPerWeek'].dirty || formValid['numberOfSessionsPerWeek'].touched)\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\" *ngIf=\"formValid['numberOfSessionsPerWeek'].errors['required']\">\n                    This element is required, please fill.\n                  </span>\n                </div>\n\n\n                <!-- <button class=\"btn btn-remove\"><i class=\"fa-solid fa-xmark\"></i> </button> -->\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <label class=\"fw-bold\" for=\"\">Allowed Session Time</label>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-3\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>From</label>\n                <input name=\"branchName\" formControlName=\"allowedSessionTimeFrom\" type=\"time\" class=\"form-control\">\n\n                <div\n                  *ngIf=\" f['allowedSessionTimeFrom'].value >= f['allowedSessionTimeTo'].value && f['allowedSessionTimeFrom'].value !='' && f['allowedSessionTimeTo'].value !=''\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\">\n                    From time shoud less than To time. </span>\n                </div>\n                <!-- <button class=\"btn btn-remove\"><i class=\"fa-solid fa-xmark\"></i> </button> -->\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>To</label>\n                <input name=\"branchName\" formControlName=\"allowedSessionTimeTo\" type=\"time\" class=\"form-control\">\n\n                <div\n                  *ngIf=\" f['allowedSessionTimeFrom'].value >= f['allowedSessionTimeTo'].value && f['allowedSessionTimeFrom'].value !='' && f['allowedSessionTimeTo'].value !=''\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\">\n                    To time should greater than From time. </span>\n                </div>\n                <!-- <button class=\"btn btn-remove\"><i class=\"fa-solid fa-xmark\"></i> </button> -->\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <label class=\"fw-bold\" for=\"\">Opening without settlement</label>\n\n          </div>\n          <hr class=\"m-0 mb-3\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" (change)=\"changeSettlement($event)\" id=\"settlement\"\n                  formControlName=\"allowOpenWithoutSettlement\" type=\"checkbox\">\n                <label class=\"form-check-label\" for=\"settlement\">Allow open a new session without settlement.</label>\n              </div>\n            </div>\n          </div>\n          <div class=\"row mt-4\">\n            <label class=\"fw-bold\" for=\"\">No of Opening without settlement</label>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-3\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Per Day</label>\n                <input name=\"branchName\" type=\"text\" formControlName=\"numberOfOpeningWithoutSettlementPerDay\"\n                  class=\"form-control\" minlength=\"6\" maxlength=\"30\" autocomplete=\"off\" (keypress)=\"numberOnly($event)\">\n                <!-- required -->\n                <div\n                  *ngIf=\"(f['numberOfOpeningWithoutSettlementPerDay'].value*7)+1 <=(f['numberOfOpeningWithoutSettlementPerWeek'].value) && f['numberOfOpeningWithoutSettlementPerWeek'].value !=0 && f['numberOfOpeningWithoutSettlementPerWeek'].value !='' && f['numberOfOpeningWithoutSettlementPerDay'].value !=0 && f['numberOfOpeningWithoutSettlementPerDay'].value !=''\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\">\n                    No of Opening/Day must less than No of Opening/week of complete week </span>\n                </div>\n\n\n                <div\n                  *ngIf=\"submitted && formValid['numberOfOpeningWithoutSettlementPerDay'].invalid ||  formValid['numberOfOpeningWithoutSettlementPerDay'].invalid && (formValid['numberOfOpeningWithoutSettlementPerDay'].dirty || formValid['numberOfOpeningWithoutSettlementPerDay'].touched)\"\n                  class=\"ng-dirty\">\n\n                  <span class=\"error\" *ngIf=\"formValid['numberOfOpeningWithoutSettlementPerDay'].errors['required']\">\n                    This feild is required.</span>\n\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Per Week</label>\n                <input name=\"branchName\" type=\"text\" formControlName=\"numberOfOpeningWithoutSettlementPerWeek\"\n                  class=\"form-control\" minlength=\"6\" maxlength=\"30\" autocomplete=\"off\" (keypress)=\"numberOnly($event)\">\n                <!-- required -->\n                <div\n                  *ngIf=\"(f['numberOfOpeningWithoutSettlementPerDay'].value*7)+1 <=(f['numberOfOpeningWithoutSettlementPerWeek'].value) && f['numberOfOpeningWithoutSettlementPerWeek'].value !=0 && f['numberOfOpeningWithoutSettlementPerWeek'].value !='' && f['numberOfOpeningWithoutSettlementPerDay'].value !=0 && f['numberOfOpeningWithoutSettlementPerDay'].value !=''\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\">\n                    No of Opening/Day must less than No of Opening/week of complete week </span>\n                </div>\n\n                <div\n                  *ngIf=\"submitted && formValid['numberOfOpeningWithoutSettlementPerWeek'].invalid ||  formValid['numberOfOpeningWithoutSettlementPerWeek'].invalid && (formValid['numberOfOpeningWithoutSettlementPerWeek'].dirty || formValid['numberOfOpeningWithoutSettlementPerWeek'].touched)\"\n                  class=\"ng-dirty\">\n\n                  <span class=\"error\" *ngIf=\"formValid['numberOfOpeningWithoutSettlementPerWeek'].errors['required']\">\n                    This feild is required.</span>\n\n                </div>\n\n\n                <!-- <button class=\"btn btn-remove\"><i class=\"fa-solid fa-xmark\"></i> </button> -->\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <label class=\"fw-bold\" for=\"\">Cash Deposit*</label>\n          </div>\n          <hr>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-check form-check-inline\" *ngFor=\"let item of deposites\">\n                <input class=\"form-check-input\" formControlName=\"cashDepositTypeId\" [value]=\"item.id\" [id]=\"item.id\"\n                  type=\"radio\" required>\n                <label class=\"form-check-label\" [for]=\"item.id\">{{item.name}}</label>\n              </div>\n              <div *ngIf=\"submitted && f['cashDepositTypeId'].value==null\" class=\"ng-dirty\">\n                <span class=\"error\"> This feild is required.</span>\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorsList\">\n              <ul>\n                <li *ngFor=\"let item of errorsList\">{{item.errorMessageEn || item.ErrorMessageEn}} </li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"btns-group\">\n              <button type=\"button\" class=\"btn btn-cancel\">Cancel</button>\n              <button type=\"submit\" class=\"btn btn-save\" *ngIf=\"!isLoading\"> {{!isEdit ? 'Add' : 'Save'}} </button>\n              <button type=\"button\" class=\"btn btn-save btn-load\" *ngIf=\"isLoading\" disabled><i\n                  class=\"fa-solid fa-circle-notch fa-spin\"></i></button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","<!-- <h4>Roles</h4> -->\n<div class=\"card-page\">\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"page-title\">\n          <h3> Registers Information </h3>\n        </div>\n        <div class=\"card-form overflow-hidden position-relative\">\n          <div class=\"row\">\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group overflow-hidden position-relative \">\n                <label>Registers Name *</label>\n                <input formControlName=\"registersName\" name=\"registersName\" type=\"text\" class=\"form-control\"\n                  placeholder=\"Type name \" required minlength=\"6\" maxlength=\"30\">\n                <button class=\"btn btn-remove\" *ngIf=\"formGroup.get('registersName').value\"\n                  (click)=\"removeBranchName()\"><i class=\"fa-solid fa-xmark\"></i> </button>\n                <div\n                  *ngIf=\"submitted && formValid['registersName'].invalid ||  formValid['registersName'].invalid && (formValid['registersName'].dirty || formValid['registersName'].touched)\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\" *ngIf=\"formValid['registersName'].errors['required']\"> This element is required,\n                    please fill.</span>\n                  <span *ngIf=\"formValid['registersName'].errors['minlength']\">\n                    <span class=\"error\"> Full name length must be between 3 and 30 character.</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"d-flex justify-content-end align-items-center pt30\">\n                <div class=\"form-check form-switch\">\n                  <label class=\"labelactive\">Active</label>\n                  <input class=\"form-check-input\" [(ngModel)]=\"isStatus\" name=\"isStatus\" type=\"checkbox\" role=\"switch\"\n                    (change)=\"chooseStatus()\" [ngModelOptions]=\"{standalone: true}\">\n                </div>\n                <!-- <div class=\"edit-btn\" [hidden]=\"!branchId\">\n                <button class=\"btn\" (click)=\"toEdit()\"><i class=\"fa-solid fa-pen\"></i> </button>\n              </div> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"page-title\">\n          <h3> Branch & Location * </h3>\n        </div>\n        <div class=\"card-form \">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label> Location \" City \" </label>\n                <ng-select name=\"city\" id=\"city\" placeholder=\"Select\" [items]=\"locations\" formControlName=\"city\"\n                  required (change)=\"chooseCity($event)\">\n                  <ng-template ng-label-tmp let-item=\"item\">\n                    {{item}}\n                  </ng-template>\n                </ng-select>\n                <div\n                  *ngIf=\"submitted && formValid['city'].invalid  && (formValid['city'].dirty || formValid['city'].touched)\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\" *ngIf=\"formValid['city'].errors['required']\"> This element is required,\n                    please fill.</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group  \">\n                <label> Branch</label>\n                <ng-select name=\"branchId\" id=\"branchId\" placeholder=\"Select\" [items]=\"branches\" bindLabel=\"branchName\"\n                  bindValue=\"branchId\" formControlName=\"branchId\" required>\n                </ng-select>\n                <div\n                  *ngIf=\"submitted && formValid['branchId'].invalid  && (formValid['branchId'].dirty || formValid['branchId'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['branchId'].errors\">\n                  </span>\n                  <span class=\"error\" *ngIf=\"formValid['branchId'].errors['required']\"> This element is required,\n                    please fill.</span>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-12\">\n        <div class=\"page-title\">\n          <h3> Collection Orders * </h3>\n        </div>\n        <div class=\"card-form overflow-hidden position-relative\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-check form-check-inline\" *ngFor=\"let item of collectioOrders\">\n                <input class=\"form-check-input\" type=\"checkbox\" [value]=\"item.id\" id=\"{{item.id}}\"\n                  (change)=\"selectCollection(item.id)\" [checked]=\"collectionAry.includes(item.id)\">\n                <label class=\"form-check-label\" for=\"{{item.id}}\">\n                  {{item.name[0].lookupName}}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"page-title\">\n          <h3> Employees</h3>\n        </div>\n        <div class=\"card-form overflow-hidden1 position-relative\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"row\">\n                <div class=\"col-md-3\">\n                  <p>Role Name</p>\n                </div>\n                <div class=\"col-md-3\">\n                  <p>User</p>\n                </div>\n              </div>\n              <hr>\n            </div>\n            <div class=\"col-md-12\" formArrayName=\"registerEmployees\"\n              *ngFor=\"let item of registerEmployees.controls; let i=index\">\n              <div class=\"row\" [formGroupName]=\"i\">\n                <div class=\"col-md-3\">\n                  <div *ngIf=\"i == 0\">\n                    <h6> Register Cashier </h6>\n                  </div>\n                  <div class=\"form-group\" [hidden]=\"i == 0\">\n                    <ng-select placeholder=\"Select\" [items]=\"roles\" required bindLabel=\"name\" bindValue=\"roleId\"\n                      formControlName=\"roleId\">\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <ng-select placeholder=\"Select\" [items]=\"users\" required bindLabel=\"fullName\" bindValue=\"userId\"\n                      formControlName=\"userId\">\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-md-2\">\n                  <div [hidden]=\"i == 0\">\n                    <button class=\"btn btnremove-emp\" (click)=\"Remove(i)\"><i class=\"fa-solid fa-trash-can\"></i></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-12\">\n              <div class=\"text-end\">\n                <button class=\"btn btn-addemp\" (click)=\"pushRegisterEmployees()\">Add Employee </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-12\">\n        <div class=\"page-title\">\n          <h3> Setup </h3>\n        </div>\n        <div class=\"card-form overflow-hidden1 position-relative\">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"cash\" formControlName=\"cash\">\n                <label class=\"form-check-label\" for=\"cash\"> Cash </label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <ng-select placeholder=\"Select Currency\" [multiple]=\"true\" [items]=\"curruncys\" bindLabel=\"name\"\n                  bindValue=\"id\" required formControlName=\"registerCurrencies\">\n                </ng-select>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"onAccount\" formControlName=\"onAccount\">\n                <label class=\"form-check-label\" for=\"onAccount\">\n                  On Account\n                </label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"cheque\" value=\"cheque\" formControlName=\"cheque\">\n                <label class=\"form-check-label\" for=\"cheque\">Cheque</label>\n              </div>\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"sparePartsSales\" value=\"sparePartsSales\">\n                <label class=\"form-check-label\" for=\"sparePartsSales\">Spare Parts Sales Order</label>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"onAccount\" formControlName=\"onAccount\">\n                <label class=\"form-check-label\" for=\"onAccount\">\n                  Cards\n                </label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"cheque\" value=\"cheque\" formControlName=\"cheque\">\n                <label class=\"form-check-label\" for=\"cheque\">Visa Card</label>\n              </div>\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"sparePartsSales\" value=\"sparePartsSales\">\n                <label class=\"form-check-label\" for=\"sparePartsSales\">Mastercard</label>\n              </div>\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"sparePartsSales\" value=\"sparePartsSales\">\n                <label class=\"form-check-label\" for=\"sparePartsSales\">American Express</label>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5> Register Session * </h5>\n              <hr>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group \">\n                <label>Number of Sessions Per Day *</label>\n                <input formControlName=\"numberOfSessionsPerDay\" name=\"numberOfSessionsPerDay\" type=\"text\"\n                  class=\"form-control\" placeholder=\"Number of sessions\" required>\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group \">\n                <label>Number Of Sessions Per Week *</label>\n                <input formControlName=\"numberOfSessionsPerWeek\" name=\"numberOfSessionsPerWeek\" type=\"text\"\n                  class=\"form-control\" placeholder=\"Number of sessions\" required>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5> Allowed Sessions time </h5>\n              <hr>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group \">\n                <label>From</label>\n                <input formControlName=\"numberOfSessionsPerDay\" name=\"numberOfSessionsPerDay\" type=\"time\"\n                  class=\"form-control\" placeholder=\"Number of sessions\" required>\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group \">\n                <label>To</label>\n                <input formControlName=\"numberOfSessionsPerWeek\" name=\"numberOfSessionsPerWeek\" type=\"time\"\n                  class=\"form-control\" placeholder=\"Number of sessions\" required>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5> Opening without Settlement </h5>\n              <hr>\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"cash\" formControlName=\"cash\">\n                <label class=\"form-check-label\" for=\"cash\"> Allow Open a new session without Settlement. </label>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5> Number of Opening Without settlement </h5>\n              <hr>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group \">\n                <label>Per day</label>\n                <input formControlName=\"numberOfSessionsPerDay\" name=\"numberOfSessionsPerDay\" type=\"text\"\n                  class=\"form-control\" placeholder=\"Number of sessions\" required>\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-group \">\n                <label>Per week</label>\n                <input formControlName=\"numberOfSessionsPerWeek\" name=\"numberOfSessionsPerWeek\" type=\"text\"\n                  class=\"form-control\" placeholder=\"Number of sessions\" required>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5> Cash Deposit * </h5>\n              <hr>\n            </div>\n            <div class=\"col-md-3\">\n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\"\n                  value=\"option1\">\n                <label class=\"form-check-label\" for=\"inlineRadio1\">1</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"btns-group\">\n          <button type=\"button\" class=\"btn btn-cancel\">Cancel</button>\n          <button type=\"submit\" class=\"btn btn-save\"> {{isEdit ? 'Add' : 'Save'}} </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { RegisterService } from '../register.service';\n\n@Component({\n  selector: 'app-addregister',\n  templateUrl: './addregister.component.html',\n  styleUrls: ['./addregister.component.scss'],\n})\nexport class AddregisterComponent {\n  formGroup: FormGroup;\n  registerId: number;\n  isEdit: boolean;\n\n  constructor(\n    private registerService: RegisterService,\n    private router: Router,\n    private modalService: NgbModal,\n    public toster: ToastrService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n  submitted = false;\n\n  ngOnInit(): void {\n    this.getForm();\n    this.GetLocations();\n    this.GetBranches();\n    this.CollectioOrders();\n    this.GetRoles();\n    this.GetUsers();\n    this.getCuruncy();\n\n    this.registerId = this.route.snapshot.params['id'];\n    if (this.registerId) {\n      // this.getRoleDetails();\n      this.isEdit == true;\n    } else {\n    }\n  }\n\n  getForm() {\n    this.formGroup = this.fb.group({\n      registersName: '',\n      city: '',\n      branchId: 0,\n      cash: false,\n      onAccount: true,\n      cheque: true,\n      sparePartsSales: true,\n      cards: true,\n      visa: true,\n      mastercard: true,\n      americanExpress: true,\n      numberOfSessionsPerDay: 0,\n      numberOfSessionsPerWeek: 0,\n      allowedSessionTimeFrom: '',\n      allowedSessionTimeTo: '',\n      allowOpenWithoutSettlement: true,\n      numberOfOpeningWithoutSettlementPerDay: 0,\n      numberOfOpeningWithoutSettlementPerWeek: 0,\n      cashDepositTypeId: 0,\n      status: 0,\n      registerEmployees: this.fb.array([this.addRegisterEmployees()]),\n      collectionOrders: this.fb.array([]),\n      registerCurrencies: [],\n      // registerCurrencies: this.fb.array([]),\n    });\n  }\n  // UserWorkingHours: this.fb.array([]),\n  get registerEmployees() {\n    return this.formGroup.controls['registerEmployees'] as FormArray;\n  }\n  get collectionOrders() {\n    return this.formGroup.controls['collectionOrders'] as FormArray;\n  }\n  get registerCurrencies() {\n    return this.formGroup.controls['registerCurrencies'] as FormArray;\n  }\n  get formValid(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  addRegisterEmployees(): FormGroup {\n    return this.fb.group({\n      roleId: 0,\n      userId: 0,\n    });\n  }\n  AddCollectionOrders() {\n    return this.fb.group({\n      orderId: 0,\n    });\n  }\n  AddregisterCurrencies() {\n    return this.fb.group({\n      currencyId: 0,\n    });\n  }\n\n  pushRegisterEmployees() {\n    this.registerEmployees.push(\n      this.fb.group({\n        roleId: 0,\n        userId: 0,\n      })\n    );\n\n    console.log(this.formGroup.value);\n  }\n\n  Remove(i: number) {\n    (this.formGroup.get('registerEmployees') as FormArray).removeAt(i);\n\n    // const empAry = <FormArray>(this.formGroup.get('registerEmployees'));\n\n    // empAry.controls[0].get('WalletDiscountValue').patchValue(0);\n  }\n  errorsList: any;\n\n  onSubmit() {\n    // this.submitted = true;\n\n    // if (this.formGroup.invalid) {\n    //   return window.scroll(0, 0);\n    // }\n\n    for (let r = this.collectionOrders.value.length - 1; r >= 0; r--) {\n      this.collectionOrders.removeAt(r);\n    }\n\n    for (let w = 0; w < this.collectionAry.length; w++) {\n      this.collectionOrders.push(\n        this.fb.group({\n          orderId: this.collectionAry[w],\n        })\n      );\n    }\n    console.log(this.formGroup.value);\n\n    // if (this.formGroup.get('roleId')?.value == 0) {\n    //   this.AddRegister();\n    // } else {\n    //   this.EditRegister();\n    // }\n  }\n\n  AddRegister() {\n    console.log(this.formGroup.value);\n    return this.registerService\n      .AddRegister(this.formGroup.value)\n      .subscribe((response: any) => {\n        if (response.isSuccess == true) {\n          console.log(response);\n          const modalRef = this.modalService.open('');\n          modalRef.componentInstance.name = 'add';\n        } else {\n          this.errorsList = response.Errors || response.errors;\n        }\n      });\n  }\n  EditRegister() {\n    console.log(this.formGroup.value);\n    return this.registerService\n      .EditRegister(this.formGroup.value)\n      .subscribe((response: any) => {\n        if (response.isSuccess == true) {\n          console.log(response);\n          const modalRef = this.modalService.open('');\n          modalRef.componentInstance.name = 'edit';\n        } else {\n          this.errorsList = response.Errors || response.errors;\n        }\n      });\n  }\n\n  removeBranchName() {\n    this.formGroup.get('FullName')?.patchValue('');\n  }\n  removeemail() {\n    this.formGroup.get('Email')?.patchValue('');\n  }\n  removephone() {\n    this.formGroup.get('Mobile')?.patchValue('');\n  }\n  isStatus: boolean = true;\n\n  chooseStatus() {\n    this.isStatus = this.isStatus == false ? true : false;\n\n    if (this.isStatus == true) {\n      this.formGroup.get('status')?.patchValue(2001);\n    } else {\n      this.formGroup.get('status')?.patchValue(2002);\n    }\n  }\n  collectionAry: any[] = [];\n\n  selectCollection(item: number) {\n    console.log(item);\n    if (this.collectionAry.includes(item)) {\n      this.collectionAry.splice(this.collectionAry.indexOf(item), 1);\n    } else {\n      this.collectionAry.push(item);\n    }\n    console.log(this.collectionAry);\n  }\n\n  locations: any;\n  GetLocations() {\n    return this.registerService.GetLocations().subscribe((response: any) => {\n      if (response) {\n        this.locations = response.data;\n      }\n    });\n  }\n  branches: any;\n  searchBranch: string = '';\n\n  GetBranches() {\n    return this.registerService\n      .GetBranches(this.searchBranch)\n      .subscribe((response: any) => {\n        if (response) {\n          this.branches = response.data;\n        }\n      });\n  }\n\n  chooseCity(e) {\n    console.log(e);\n    this.searchBranch = e;\n    this.GetBranches();\n  }\n  numberOnly(event): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n\n  roles: any;\n  GetRoles() {\n    this.registerService.GetRoles().subscribe(\n      (response: any) => {\n        this.roles = response.data;\n      },\n      (error) => {\n        // this.errorMessage = error.message;\n      }\n    );\n  }\n  users: any;\n  GetUsers() {\n    this.registerService.GetUsers().subscribe(\n      (response: any) => {\n        this.users = response.data;\n      },\n      (error) => {\n        // this.errorMessage = error.message;\n      }\n    );\n  }\n  collectioOrders: any;\n  CollectioOrders() {\n    this.registerService.getLookupsById(7).subscribe(\n      (response: any) => {\n        this.collectioOrders = response.data;\n      },\n      (error) => {\n        // this.errorMessage = error.message;\n      }\n    );\n  }\n\n  curruncys: any;\n  getCuruncy() {\n    this.registerService.getLookupsById(9).subscribe(\n      (response: any) => {\n        // this.curruncys = response.data;\n        this.curruncys = response.data.map(x => ({ id: x.id, name: x.name[0].lookupName }));\n\n      },\n      (error) => {\n        // this.errorMessage = error.message;\n      }\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-reg-confirm',\n  templateUrl: './reg-confirm.component.html',\n  styleUrls: ['./reg-confirm.component.scss'],\n})\nexport class RegConfirmComponent {\n  @Input() name;\n  @Output() semdToConfirm = new EventEmitter<string>();\n  @Output() sendToClose = new EventEmitter<string>();\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private modalService: NgbModal,\n    private router: Router\n  ) {}\n\n  confirm() {\n    this.semdToConfirm.emit();\n  }\n  close(){\n    this.sendToClose.emit();\n  }\n}\n","<!-- <div class=\"modal-header\">\n  <h4 class=\"modal-title\"> Confirm </h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div> -->\n<div class=\"modal-body\">\n  <div class=\"message\">\n    <h4> Are you sure you want to save changes? </h4>\n  </div>\n</div>\n<div class=\"modal-footer text-center\">\n  <button type=\"button\" class=\"btn\" (click)=\"confirm()\">Yes</button>\n  <button type=\"button\" class=\"btn \" (click)=\"close();activeModal.close('Close click')\">No</button>\n</div>\n","<div class=\"modal-body\">\n  <div class=\"message\">\n    <i class=\"fa-regular fa-circle-check\"></i>\n    <h3 *ngIf=\"name == 'add'\"> Register added successfully</h3>\n    <h3 *ngIf=\"name != 'add'\"> Register updated successfully</h3>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-reg-done',\n  templateUrl: './reg-done.component.html',\n  styleUrls: ['./reg-done.component.scss'],\n})\nexport class RegDoneComponent {\n  @Input() name;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private modalService: NgbModal,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    console.log(this.name);\n\n    if (this.name == 'add') {\n      setTimeout(() => {\n        this.modalService.dismissAll();\n        this.router.navigateByUrl('/registers');\n      }, 4000);\n    } else {\n      setTimeout(() => {\n        this.modalService.dismissAll();\n      }, 4000);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SharedService } from '../../../../services/shared.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterService {\n  apiUrl = this.sharedService.getUrl;\n  constructor(private http: HttpClient, public sharedService: SharedService) {}\n\n  GetRegisters(\n    searchText: string,\n    sort: number,\n    pageNo: number\n  ): Observable<any[]> {\n    return this.http.get<any[]>(\n      this.apiUrl +\n        `Register/GetRegisters?Search=${searchText}&Sort=${sort}&PageNo=${pageNo}&PageSize=6`,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  AddRegister(role: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Register/AddRegister',\n      role,\n      this.sharedService.getHeaders()\n    );\n  }\n  EditRegister(role: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Register/UpdateRegister',\n      role,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  GetRegisterDetails(id: number) {\n    return this.http.get(\n      this.apiUrl + `Register/GetRegisterDetails?Id=${id}`,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  GetLocations() {\n    return this.http.get(\n      this.apiUrl + `Lookups/GetLocations`,\n      this.sharedService.getHeaders()\n    );\n  }\n  GetBranches(searchText: string) {\n    return this.http.get(\n      this.apiUrl +\n        `Branches/GetBranches?Search=${searchText}&Status=2001&sort=2`,\n      this.sharedService.getHeaders()\n    );\n  }\n  GetUsers() {\n    return this.http.get(\n      this.apiUrl + `User/GetUsers?sort=2&Status=2001&Invitation=2004`, //RoleId=1&\n      this.sharedService.getHeaders()\n    );\n  }\n  GetRoles() {\n    return this.http.get(\n      this.apiUrl + `Roles/GetRoles?Status=2001&Sort=2`,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  getLookupsById(id: any) {\n    return this.http.get(\n      this.apiUrl + 'Lookups/GetLookups?lookupTypeId=' + id,\n      this.sharedService.getHeaders()\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddRegisterAndSetupComponent } from './add-register-and-setup/add-register-and-setup.component';\nimport { RegistersComponent } from './registers.component';\n\nconst routes: Routes = [\n  { path: '', component: RegistersComponent },\n  { path: 'add-register', component: AddRegisterAndSetupComponent },\n  { path: 'view-register/:id', component: AddRegisterAndSetupComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistersRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'underscore';\nimport { HeaderService } from '../../../../services/header.service';\nimport { RegisterService } from './register.service';\n\n@Component({\n  selector: 'app-registers',\n  templateUrl: './registers.component.html',\n  styleUrls: ['./registers.component.scss'],\n})\nexport class RegistersComponent implements OnInit {\n  registers!: any[];\n  totalRecords!: number;\n  totalPages!: number;\n\n  searchText: string = '';\n  sort: number = 1;\n\n  branchId: any = '';\n  roleId: any = '';\n\n  pageNo: number = 0;\n  pagin!: number;\n  pages!: number[];\n  totalRecordsCount: number;\n  constructor(\n    private registerService: RegisterService,\n    private router: Router,\n    public headerService: HeaderService\n  ) {}\n\n  ngOnInit(): void {\n    this.headerService.setTitle('Registers');\n\n    this.GetRegisters();\n    // this.registers = [];\n  }\n  addUser() {\n    this.router.navigateByUrl('/registers/add-register');\n\n    this.headerService.setTitle('Registers > Add Register');\n  }\n\n  GetRegisters() {\n    return this.registerService\n      .GetRegisters(this.searchText, this.sort, this.pageNo)\n      .subscribe((response: any) => {\n        if (response) {\n          this.registers = response.data;\n          this.totalPages = response.totalPages;\n          this.totalRecordsCount = response.totalRecordsCount;\n\n          this.totalRecords = response.info.totalRecordsCount;\n          this.pagin = Math.ceil(this.totalRecords / 6);\n          this.pages = _.range(this.pagin);\n          console.log(this.pagin);\n          console.log(this.pages);\n        }\n      });\n  }\n  searchRoles(event: any) {\n    console.log(event?.target.value);\n    const text = event.target.value;\n    console.log(text.length);\n    if (text.length >= 3) {\n      this.searchText = text;\n      this.pageNo = 0;\n      this.GetRegisters();\n    }\n    if (text.length == 0) {\n      this.GetRegisters();\n    }\n  }\n  removeSearch() {\n    this.searchText = '';\n    this.sort = 1;\n    this.GetRegisters();\n  }\n\n  sortByName() {\n    if (this.sort == 3) {\n      this.sort = 1;\n    } else {\n      this.sort = this.sort == 2 ? 3 : 2;\n    }\n    this.GetRegisters();\n  }\n  sortByNoUser() {\n    if (this.sort == 5) {\n      this.sort = 1;\n    } else {\n      this.sort = this.sort == 4 ? 5 : 4;\n    }\n    this.GetRegisters();\n  }\n  sortByIndoorOutdoor() {\n    if (this.sort == 7) {\n      this.sort = 1;\n    } else {\n      this.sort = this.sort == 6 ? 7 : 6;\n    }\n    this.GetRegisters();\n  }\n  sortByActivation() {\n    if (this.sort == 9) {\n      this.sort = 1;\n    } else {\n      this.sort = this.sort == 8 ? 9 : 8;\n    }\n    this.GetRegisters();\n  }\n  viewRegister() {\n    this.headerService.setTitle('Registers > View Register');\n  }\n  setPage(page: number) {\n    this.pageNo = page;\n    this.GetRegisters();\n    window.scroll(0, 0);\n  }\n}\n","<!-- <h4>Roles</h4> -->\n<div class=\"card-page\">\n  <div class=\"row\">\n    <div class=\"col-md-5\">\n      <div class=\"input-group search-box\">\n        <button class=\"btn\" type=\"button\" id=\"button-addon1\" (click)=\"removeSearch()\"><i\n            class=\"fa-solid fa-search\"></i></button>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchText\"\n          (keyup)=\"searchRoles($event)\">\n        <button class=\"btn\" type=\"button\" id=\"button-addon1\" [hidden]=\"searchText.length == 0\"\n          (click)=\"removeSearch()\"><i class=\"fa-solid fa-xmark\"></i></button>\n      </div>\n    </div>\n    <div class=\"col-md-5\"></div>\n    <div class=\"col-md-2 d-flex justify-content-end btnadd\">\n      <button (click)=\"addUser()\" class=\"btn btn-add\"> <img src=\"assets/images/plus.png\" alt=\"\"> Add Register\n      </button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\" *ngIf=\"registers; let registers; else: loading \">\n      <div class=\"card-table\">\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">\n                  <button class=\"btn\" [disabled]=\"registers?.length == 0\" (click)=\"sortByName()\"> Registers Name\n                    <i class=\"fa-solid fa-arrow-up-long\" [class.active]=\"sort == 2\"></i>\n                    <i class=\"fa-solid fa-arrow-down-long\" [class.active]=\"sort == 3\"></i>\n                  </button>\n                </th>\n                <th scope=\"col\"> <button class=\"btn\" [disabled]=\"registers?.length == 0\" (click)=\"sortByNoUser()\">\n                    Number\n                    <i class=\"fa-solid fa-arrow-up-long\" [class.active]=\"sort == 4\"></i>\n                    <i class=\"fa-solid fa-arrow-down-long\" [class.active]=\"sort == 5\"></i>\n                  </button></th>\n                <th scope=\"col\"> <button class=\"btn\" [disabled]=\"registers?.length == 0\"\n                    (click)=\"sortByIndoorOutdoor()\"> Branch\n                    <i class=\"fa-solid fa-arrow-up-long\" [class.active]=\"sort == 6\"></i>\n                    <i class=\"fa-solid fa-arrow-down-long\" [class.active]=\"sort == 7\"></i>\n                  </button></th>\n                <th scope=\"col\"> <button class=\"btn\"> Activation </button></th>\n                <th scope=\"col\"> <button class=\"btn\"> Action </button></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of registers\">\n                <td>{{item.registersName}}</td>\n                <td>{{item.id }}</td>\n                <td> {{item.branch.branchName}} </td>\n                <td>\n                  <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\"\n                      [checked]=\"item.status == '2001'\" readonly disabled>\n                    <label class=\"form-check-label\" for=\"flexSwitchCheckChecked\"></label>\n                  </div>\n                </td>\n                <td> <button class=\"btn btn-view\" (click)=\"viewRegister()\"\n                    routerLink=\"/registers/view-register/{{item.id}}\">View\n                    details </button> </td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n        <div *ngIf=\"registers?.length == 0\">\n          <app-not-found></app-not-found>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"col-md-12\">\n      <ng-template #loading>\n        <div>\n          <app-loading></app-loading>\n        </div>\n      </ng-template>\n    </div>\n    <div class=\"col-md-6\" [hidden]=\"registers?.length == 0\">\n      <h6 class=\"showing\"> Showing <span> {{( pageNo + 1 ) * 6 - 5}} - {{ registers?.length == 6 ? (( pageNo + 1 ) * 6\n          ):\n          totalRecords }} </span>\n        from <span> {{totalRecords}} </span> data\n      </h6>\n    </div>\n    <div class=\"col-md-6\" [hidden]=\"totalRecordsCount < 7\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" *ngFor=\"let page of pages\">\n          <button class=\"page-link\" (click)=\"setPage(page)\" [ngClass]=\"{ active: pageNo === page }\"\n            [disabled]=\"pageNo === page\">\n            {{ page + 1 }}\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegistersRoutingModule } from './registers-routing.module';\nimport { RegistersComponent } from './registers.component';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { AddRegisterAndSetupComponent } from './add-register-and-setup/add-register-and-setup.component';\nimport { AddregisterComponent } from './addregister/addregister.component';\nimport { RegDoneComponent } from './reg-done/reg-done.component';\nimport { RegConfirmComponent } from './reg-confirm/reg-confirm.component';\n\n@NgModule({\n  declarations: [\n    RegistersComponent,\n    AddRegisterAndSetupComponent,\n    AddregisterComponent,\n    RegDoneComponent,\n    RegConfirmComponent,\n  ],\n  imports: [CommonModule, RegistersRoutingModule, SharedModule],\n})\nexport class RegistersModule {}\n"],"names":["Validators","RegConfirmComponent","RegDoneComponent","i0","AddRegisterAndSetupComponent","constructor","registerSetupService","router","modalService","toster","route","headerService","fb","ngOnInit","getDefaultPermissions","getForm","getCollectionOrders","getCities","getBranches","getCurrencies","getDeposites","getUsers","getRoles","registerId","snapshot","params","isEdit","setTitle","GetRegisterDetails","cardChange","val","target","checked","registerForm","controls","enable","disable","patchValue","changeSession","value","cash","cards","onAccount","cashChange","changeSettlement","onAccChange","removeregistersName","get","f","group","id","registersName","cheque","disabled","onCustomerAccount","visa","mastercard","americanExpress","collectForAllBranches","collectForOwnBranch","registerCurrencies","city","required","branchId","allowedSessionTimeFrom","allowedSessionTimeTo","cashDepositTypeId","registerEmployees","array","allowOpenWithoutSettlement","collectionOrders","numberOfSessionsPerDay","numberOfSessionsPerWeek","numberOfOpeningWithoutSettlementPerDay","numberOfOpeningWithoutSettlementPerWeek","ipAddresses","status","newEmployee","roleId","userId","addNewEmployee","employees","push","deleteEmployee","employeeIndex","removeAt","Status","sort","PageSize","subscribe","response","branches","data","changeBranch","getBranchDetails","branchInfo","branchWorkingHours","fromTime","toTime","clearBranch","changeCity","getBranchesByCity","Search","branchSelect","item","selectOrderCollection","collectionOrdersAry","includes","splice","indexOf","console","log","rolePermissions","formValid","getLookupsById","currencies","map","x","currencyId","name","lookupName","deposites","getLocations","cities","userRoleId","users","getUsersall","usersall","userRoles","getUsersByRole","event","AddRolePermissions","permissionItemId","permissionItemDetailId","roles","getRoleDetails","GetRoleDetails","onSubmit","orderId","addRegister","UpdateRegister","submitted","trim","invalid","isLoading","split","getRawValue","isSuccess","modalRef","open","componentInstance","errorsList","Errors","errors","error","setValue","errorMessage","statusText","isShowRegisterInfo","isBranchLocation","isCollectionOrders","isEmployees","isSetup","removeBranchName","chooseStatus","pushPermissionItemId","e","permissionSubCatId","isExist","findIndex","elem","Number","registers","isStatus","collectionOrder","forEach","element","order","lookupId","r","length","role","user","currency","registerIpAddresss","ipAddress","editRegisterInfo","semdToConfirm","result","dismissAll","sendToClose","editBranchLocation","editCollectionOrders","editEmployees","editSetup","chooseAllBranch","chooseOwnBranch","numberOnly","charCode","which","keyCode","selectors","decls","vars","consts","template","ctx","AddregisterComponent","registerService","GetLocations","GetBranches","CollectioOrders","GetRoles","GetUsers","getCuruncy","formGroup","sparePartsSales","addRegisterEmployees","AddCollectionOrders","AddregisterCurrencies","pushRegisterEmployees","Remove","i","w","collectionAry","AddRegister","EditRegister","removeemail","removephone","selectCollection","locations","searchBranch","chooseCity","collectioOrders","curruncys","EventEmitter","activeModal","confirm","emit","close","inputs","outputs","setTimeout","navigateByUrl","RegisterService","http","sharedService","getUrl","GetRegisters","searchText","pageNo","apiUrl","getHeaders","post","factory","providedIn","RouterModule","RegistersComponent","routes","path","component","RegistersRoutingModule","forChild","imports","exports","_","addUser","totalPages","totalRecordsCount","totalRecords","info","pagin","Math","ceil","pages","range","searchRoles","text","removeSearch","sortByName","sortByNoUser","sortByIndoorOutdoor","sortByActivation","viewRegister","setPage","page","window","scroll","CommonModule","SharedModule","RegistersModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}