{"version":3,"file":"src_app_dashboard_modules_cashier_opening-register_opening-register_module_ts.js","mappings":"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","sources":["./src/app/dashboard/modules/cashier/opening-register/modal-msg/modal-msg.component.html","./src/app/dashboard/modules/cashier/opening-register/modal-msg/modal-msg.component.ts","./src/app/dashboard/modules/cashier/opening-register/opening-register-routing.module.ts","./src/app/dashboard/modules/cashier/opening-register/opening-register.component.ts","./src/app/dashboard/modules/cashier/opening-register/opening-register.component.html","./src/app/dashboard/modules/cashier/opening-register/opening-register.module.ts"],"sourcesContent":["<div class=\"message\" *ngIf=\"name == 'ok'\">\n  <h5> <i class=\"fa-regular fa-circle-check\"></i> The session has been opened successfully </h5>\n</div>\n\n<div class=\"message\" *ngIf=\"name == 'no'\">\n  <h5 *ngFor=\" let item of errors\"> <i class=\"fa-regular fa-circle-xmark\"></i> {{item.ErrorMessageEn}} </h5>\n  <!-- <ul>\n    <li *ngFor=\" let item of errors\"> {{item.ErrorMessageEn}}</li>\n  </ul> -->\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-modal-msg',\n  templateUrl: './modal-msg.component.html',\n  styleUrls: ['./modal-msg.component.scss'],\n})\nexport class ModalMsgComponent implements OnInit {\n  @Input() name;\n  @Input() errors;\n\n  constructor(private router: Router, private modalService: NgbModal) {}\n\n  ngOnInit(): void {\n    if (this.name === 'ok') {\n      console.log(this.name);\n      setTimeout(() => {\n        this.modalService.dismissAll();\n      //  window.location.reload();\n      //  this.router.navigateByUrl('/collect');\n      }, 4000);\n    } else {\n      setTimeout(() => {\n        this.modalService.dismissAll();\n        // this.router.navigateByUrl('/collect');\n      }, 4000);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OpeningRegisterComponent } from './opening-register.component';\n\nconst routes: Routes = [{ path: '', component: OpeningRegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OpeningRegisterRoutingModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { CommonService } from '../../../../services/common.service';\nimport { HeaderService } from '../../../../services/header.service';\nimport { HttpserviceService } from '../../../../services/httpservice.service';\nimport { SharedService } from '../../../../services/shared.service';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { ModalMsgComponent } from './modal-msg/modal-msg.component';\nimport { OpenregisterService } from './services/openregister.service';\n\n@Component({\n  selector: 'app-opening-register',\n  templateUrl: './opening-register.component.html',\n  styleUrls: ['./opening-register.component.scss'],\n})\nexport class OpeningRegisterComponent implements OnInit {\n  isShow: boolean = false;\n  formGroup: FormGroup;\n  registerName: string;\n  registerId: string;\n  branchName: string;\n  cityName: string;\n  isNoRegister: Boolean;\n  intervalId;\n\n  currentDate = new Date();\n  @ViewChild('modalPopup') modalPopup: ElementRef\n  constructor(\n    public sharedService: SharedService,\n    public openregisterService: OpenregisterService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public headerService: HeaderService,\n    private router: Router,\n    config: NgbModalConfig,\n    private httpserviceService: HttpserviceService,\n    private _commonService: CommonService,\n    private _subjectService: SubjectService,\n  ) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  // getCity;\n  ngOnInit(): void {\n    // cityName\n    // console.log( console.log(this.router))\n    // console.log( console.log(this.router.url))\n\n    if (this.sharedService.getRegister) {\n      this.headerService.setTitle('Opening Register');\n    } else {\n      this.headerService.setTitle('');\n    }\n\n    // this.CanOpenRegisterSession();\n    this.registerName =\n      this.sharedService.getRegister?.registerObj?.registersName;\n    this.registerId = this.sharedService.getRegister?.registerObj?.id;\n    this.branchName =\n      this.sharedService?.getRegister?.registerObj.registeBranch.branchName;\n    this.cityName =\n      this.sharedService?.getRegister?.registerObj.registeBranch.city;\n    console.log(this.registerName);\n    this.getForm();\n\n    this.intervalId = setInterval(() => {\n      this.currentDate = new Date();\n    }, 1000);\n  }\n\n  getForm() {\n    this.formGroup = this.fb.group({\n      InitialFund: ['0.000', [Validators.required, Validators.min(0)]],\n      Notes: [''],\n    });\n  }\n\n  get f() {\n    return this.formGroup;\n  }\n  isLoading: boolean;\n  getUserMenu() {\n    this.httpserviceService.GetUserMenuNew(17001).subscribe((response: any) => {\n      let userMenu: any[] = response?.data?.menu;\n      for (let menu of userMenu) {\n        let findItem = menu.items.find(x => x.canClick);\n        if (findItem) {\n          this._commonService.NavigateToRoute(findItem.url);\n          console.log(findItem);\n          break;\n        }\n      }\n    })\n  }\n  onSubmit() {\n    if (this.formGroup.invalid) {\n      this.formGroup.markAllAsTouched();\n      return window.scroll(0, 0);\n    }\n\n    //this.formGroup.get('InitialFund')?.patchValue(+(this.formGroup.get('InitialFund')?.value).toFixed(3));\n    const formData = new FormData();\n\n    formData.append('InitialFund', (+this.formGroup.get('InitialFund')?.value).toFixed(3));\n    formData.append('Notes', this.formGroup.get('Notes')?.value);\n    this.isLoading = true;\n\n    this.openregisterService.OpenRegisterSession(formData).subscribe(\n      (response: any) => {\n        if (response.isSuccess) {\n          this.isLoading = false;\n          const modalRef = this.modalService.open(ModalMsgComponent);\n          modalRef.componentInstance.name = 'ok';\n          console.log(response);\n          localStorage.setItem('timeRegister', new Date().toString());\n          this.getUserMenu();\n          this._subjectService.isRegisterOpen.next(true);\n          this._subjectService.sessionDetails.next({ opened: true });\n        } else {\n          this.isLoading = false;\n          const modalRef = this.modalService.open(ModalMsgComponent);\n          modalRef.componentInstance.name = 'no';\n          modalRef.componentInstance.errors = response.Errors;\n          // this.errorMessage = response.Errors || response.errors;\n        }\n      },\n      (error: any) => {\n        this.isLoading = false;\n        const modalRef = this.modalService.open(ModalMsgComponent);\n        modalRef.componentInstance.name = 'no';\n        modalRef.componentInstance.errors = error?.error.errors;\n        //modalRef.componentInstance.errors = 'asif';\n        // console.log(error), (this.errorMessage = error.statusText);\n      }\n    );\n  }\n\n  numberOnly(event): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n\n  canOpenRegister: boolean;\n  CanOpenRegisterSession() {\n    return this.openregisterService\n      .CanOpenRegisterSession({})\n      .subscribe((response: any) => {\n        if (response.isSuccess == true) {\n          this.canOpenRegister = response.data.canOpenRegister;\n          if (this.canOpenRegister == true) {\n          } else if (this.canOpenRegister == false) {\n            // this.router.navigate(['/collect']);\n          }\n        }\n      });\n  }\n}\n","\n\n<div *ngIf=\"sharedService.IsFoundIPAddress\">\n  <app-no-ip-address></app-no-ip-address>\n</div>\n\n\n<div class=\"card-page\" *ngIf=\"!sharedService.IsFoundIPAddress\">\n  <div class=\"row\" *ngIf=\"sharedService.getRegister\">\n    <div class=\"col-md-12\">\n      <div class=\"top-details\">\n        <p>\n          Date <span> {{currentDate | date:' d MMM y ' }} </span> &nbsp;\n          Time <span> {{currentDate | date:' hh:mm:ss a' }} </span>\n        </p>\n        <p *ngIf=\"isShow\">\n          Register <span> {{registerName}} </span> Branch <span> {{branchName}} </span>\n        </p>\n      </div>\n    </div>\n    <div class=\"col-md-12\" *ngIf=\"!isShow\">\n      <div class=\"card-collect\">\n        <div class=\"open-reg\">\n          <div class=\"bgimg\">\n            <img src=\"assets/images/locker.png\" alt=\"\">\n          </div>\n          <h3>Welcome To Register {{registerName}} {{registerId}} in Branch {{branchName}} - {{cityName}}</h3>\n          <p>Where you can define the initial fund and be active to start collecting</p>\n          <p> <span> To open the register, please click on the button below </span></p>\n\n          <!--<button class=\"btn\" (click)=\"isShow = !isShow\" [disabled]=\"sharedService.getCasherPermissions == false\">\n            {{sharedService.getCasherPermissions == false ?\n            'You are not allowed to open the register': 'Open Register'}}\n          </button>-->\n          <button class=\"btn\" (click)=\"isShow = !isShow\">Open Register</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-12\" *ngIf=\"isShow\">\n      <div class=\"card-collect\">\n        <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group mb-3\">\n                <label>Initial Fund .</label>\n                <p class=\"\"> Where you can define the initial fund and to be active to start collection </p>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group mb-3\">\n                <input appDecimalNumber type=\"text\" class=\"form-control\" formControlName=\"InitialFund\">\n                <ng-container *ngIf=\"f?.get('InitialFund')?.errors\">\n                  <ng-container *ngIf=\"f?.get('InitialFund')?.invalid && f?.get('InitialFund')?.touched || f?.get('InitialFund')?.dirty\">\n                    <span class=\"validation-error\" *ngIf=\"f?.get('InitialFund')?.errors['required']\">Input is required</span>\n                    <span class=\"validation-error\" *ngIf=\"f?.get('InitialFund')?.errors['min']\">Value cannot be negative number</span>\n                  </ng-container>\n                </ng-container>\n              </div>\n            </div>\n            <div class=\"col-md-6\"></div>\n            <div class=\"col-md-8\">\n              <div class=\"form-group mb-3\">\n                <label> Notes </label>\n                <textarea rows=\"4\" class=\"form-control\" formControlName=\"Notes\" name=\"Notes\"></textarea>\n              </div>\n            </div>\n            <div class=\"col-md-12\">\n              <div class=\"btns-group my-1 mx-1\">\n                <button type=\"submit\" class=\"btn btn-save\" *ngIf=\"!isLoading\">Save</button>\n                <button type=\"button\" class=\"btn btn-save btn-load\" *ngIf=\"isLoading\" disabled>\n                  <i class=\"fa-solid fa-circle-notch fa-spin\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"!sharedService.getRegister\">\n    <div class=\"col-md-12\">\n      <div class=\"card-collect\">\n        <div class=\"open-reg\">\n          <div class=\"bgimg\">\n            <img src=\"assets/images/locker.png\" alt=\"\">\n          </div>\n          <h3>You don't have register yet </h3>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OpeningRegisterRoutingModule } from './opening-register-routing.module';\nimport { OpeningRegisterComponent } from './opening-register.component';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { ModalMsgComponent } from './modal-msg/modal-msg.component';\n\n@NgModule({\n  declarations: [OpeningRegisterComponent, ModalMsgComponent],\n  imports: [CommonModule, OpeningRegisterRoutingModule, SharedModule],\n})\nexport class OpeningRegisterModule {}\n"],"names":["i0","ModalMsgComponent","constructor","router","modalService","ngOnInit","name","console","log","setTimeout","dismissAll","selectors","inputs","errors","decls","vars","consts","template","RouterModule","OpeningRegisterComponent","routes","path","component","OpeningRegisterRoutingModule","forChild","imports","exports","Validators","sharedService","openregisterService","route","fb","headerService","config","httpserviceService","_commonService","_subjectService","Date","backdrop","keyboard","getRegister","setTitle","registerName","registerObj","registersName","registerId","id","branchName","registeBranch","cityName","city","getForm","intervalId","setInterval","currentDate","formGroup","group","InitialFund","required","min","Notes","f","getUserMenu","GetUserMenuNew","subscribe","response","userMenu","data","menu","findItem","items","find","x","canClick","NavigateToRoute","url","onSubmit","invalid","markAllAsTouched","window","scroll","formData","FormData","append","get","value","toFixed","isLoading","OpenRegisterSession","isSuccess","modalRef","open","componentInstance","localStorage","setItem","toString","isRegisterOpen","next","sessionDetails","opened","Errors","error","numberOnly","event","charCode","which","keyCode","CanOpenRegisterSession","canOpenRegister","viewQuery","CommonModule","SharedModule","OpeningRegisterModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}