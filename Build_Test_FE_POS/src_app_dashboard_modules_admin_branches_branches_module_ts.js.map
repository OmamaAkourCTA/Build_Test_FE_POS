{"version":3,"file":"src_app_dashboard_modules_admin_branches_branches_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOwB;AAOgD;AAES;;;;;;;;;;;;;;;;;ICPvEG,uDAAAA,cAAkE;;;;;IAI9DA,uDAAAA,cAAmF;;;;;IACnFA,uDAAAA,cAAmE;;;;;;IAJvEA,4DAAAA,cAA+C;IACXA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB;IAAA,EAAC;IAE1DA,wDAAAA,6DAAmF;IACnFA,wDAAAA,6DAAmE;IACrEA,0DAAAA,EAAS;;;;IAJoDA,uDAAAA,GAA+B;IAA/BA,wDAAAA,uCAA+B;IAEvDA,uDAAAA,GAAsB;IAAtBA,wDAAAA,iCAAsB;IACtBA,uDAAAA,GAAuB;IAAvBA,wDAAAA,kCAAuB;;;;;;IAUxDA,4DAAAA,iBAC+B;IAA7BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,2BAAkB;IAAA,EAAC;IAACA,uDAAAA,YAAiC;IAACA,0DAAAA,EAAS;;;;;IAIxEA,uDAAAA,WAGO;;;;;IACPA,4DAAAA,eAAuE;IAACA,oDAAAA,8CAEjE;IAAAA,0DAAAA,EAAO;;;;;IACdA,4DAAAA,WAA0D;IACnCA,oDAAAA,8DAAsD;IAAAA,0DAAAA,EAAO;;;;;IAXtFA,4DAAAA,cAEmB;IACjBA,wDAAAA,gEAGO;IACPA,wDAAAA,gEAEc;IACdA,wDAAAA,gEAEO;IACTA,0DAAAA,EAAM;;;;IAVGA,uDAAAA,GAAoC;IAApCA,wDAAAA,+CAAoC;IAItBA,uDAAAA,GAAgD;IAAhDA,wDAAAA,2DAAgD;IAG9DA,uDAAAA,GAAiD;IAAjDA,wDAAAA,4DAAiD;;;;;;IA0BxDA,4DAAAA,cAA2E;IACVA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAAUA,yDAAAA,sCAAyB;IAAA,EAAC;IAAnGA,0DAAAA,EAC+C;IAC/CA,4DAAAA,gBAAgD;IAAAA,oDAAAA,GAA2B;IAAAA,0DAAAA,EAAQ;;;;;IAFnCA,uDAAAA,GAAc;IAAdA,wDAAAA,mBAAc;IAE9BA,uDAAAA,GAAe;IAAfA,wDAAAA,oBAAe;IAACA,uDAAAA,GAA2B;IAA3BA,+DAAAA,6BAA2B;;;;;IAM7EA,4DAAAA,eAAqF;IAC/DA,oDAAAA,6CAAsC;IAAAA,0DAAAA,EAAO;;;;IADrBA,wDAAAA,wFAAsC;;;;;IAHtFA,4DAAAA,cAEmB;IACjBA,wDAAAA,gEAEO;IACTA,0DAAAA,EAAM;;;;IAHGA,uDAAAA,GAAqC;IAArCA,wDAAAA,gDAAqC;;;;;;IAW9CA,4DAAAA,iBAA6F;IAAxBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,sBAAa;IAAA,EAAC;IAACA,uDAAAA,YAC3D;IAACA,0DAAAA,EAAS;;;;;IAKxCA,4DAAAA,eAAsD;IAACA,oDAAAA,2CAAmC;IAAAA,0DAAAA,EAAO;;;;;IAJrGA,4DAAAA,cAAqF;IAIjFA,wDAAAA,gEAAiG;IAEnGA,0DAAAA,EAAO;;;;IALDA,uDAAAA,GAA8C;IAA9CA,wDAAAA,sDAA8C;IAG7BA,uDAAAA,GAA+B;IAA/BA,wDAAAA,0CAA+B;;;;;;IActDA,4DAAAA,iBAA6F;IAAxBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,sBAAa;IAAA,EAAC;IAACA,uDAAAA,YAC3D;IAACA,0DAAAA,EAAS;;;;;IAG1CA,4DAAAA,eAAkE;IAACA,oDAAAA,8CAC5D;IAAAA,0DAAAA,EAAO;;;;;IACdA,4DAAAA,WAAqD;IAG/BA,oDAAAA,+EACpB;IAAAA,0DAAAA,EAAO;;;;;IARXA,4DAAAA,cACkE;IAChEA,wDAAAA,gEACc;IACdA,wDAAAA,gEAMO;IACTA,0DAAAA,EAAM;;;;IAVaA,wDAAAA,sDAA8C;IAC1CA,uDAAAA,GAA2C;IAA3CA,wDAAAA,sDAA2C;IAEzDA,uDAAAA,GAA4C;IAA5CA,wDAAAA,uDAA4C;;;;;IAqDnDA,4DAAAA,WAA0C;IACpBA,oDAAAA,uCAAgC;IAAAA,0DAAAA,EAAO;;;;;IAJ/DA,4DAAAA,cAEmB;IACjBA,wDAAAA,gEAEO;IACTA,0DAAAA,EAAM;;;;IAHGA,uDAAAA,GAAiC;IAAjCA,wDAAAA,6CAAiC;;;;;IAiC1CA,4DAAAA,WAA4C;IACrBA,oDAAAA,8BAAsB;IAAAA,0DAAAA,EAAO;;;;;IAJtDA,4DAAAA,cAEmB;IACjBA,wDAAAA,gEAEO;IACTA,0DAAAA,EAAM;;;;IAHGA,uDAAAA,GAAmC;IAAnCA,wDAAAA,+CAAmC;;;;;IAc1CA,4DAAAA,WAA2C;IACpBA,oDAAAA,6BAAqB;IAAAA,0DAAAA,EAAO;;;;;IAJrDA,4DAAAA,cAEmB;IACjBA,wDAAAA,gEAEO;IACTA,0DAAAA,EAAM;;;;IAHGA,uDAAAA,GAAkC;IAAlCA,wDAAAA,8CAAkC;;;;;IA2DjDA,uDAAAA,cAAoE;;;;;IAIhEA,uDAAAA,cAAqF;;;;;IACrFA,uDAAAA,cAAqE;;;;;;IAJzEA,4DAAAA,cAA+C;IACXA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,2BAAkB;IAAA,EAAC;IAE5DA,wDAAAA,+DAAqF;IACrFA,wDAAAA,+DAAqE;IACvEA,0DAAAA,EAAS;;;;IAJsDA,uDAAAA,GAA+B;IAA/BA,wDAAAA,wCAA+B;IAEzDA,uDAAAA,GAAwB;IAAxBA,wDAAAA,oCAAwB;IACxBA,uDAAAA,GAAyB;IAAzBA,wDAAAA,qCAAyB;;;;;;IAoB9DA,4DAAAA,cAAsG;IAS1FA,wDAAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAAUA,yDAAAA,mDAAiC;IAAA,EAAC;IAF9CA,0DAAAA,EAE+C;IAC/CA,4DAAAA,gBAAc;IAACA,oDAAAA,GAAuB;IAAAA,0DAAAA,EAAQ;IAIpDA,4DAAAA,cAAsB;IAGZA,oDAAAA,cAAK;IAAAA,0DAAAA,EAAI;IAEbA,uDAAAA,iBAC2D;IAC7DA,0DAAAA,EAAM;IAIVA,4DAAAA,eAAsB;IAGZA,oDAAAA,YAAG;IAAAA,0DAAAA,EAAI;IAGXA,uDAAAA,iBAA+F;IACjGA,0DAAAA,EAAM;;;;;;IA/BKA,uDAAAA,GAAmB;IAAnBA,wDAAAA,wBAAmB;IAOCA,uDAAAA,GAA4B;IAA5BA,wDAAAA,qCAA4B;IAE1CA,uDAAAA,GAAuB;IAAvBA,gEAAAA,kCAAuB;IAUpCA,uDAAAA,GAAwD;IAAxDA,wDAAAA,6DAAwD;;;;;IAyBtEA,uDAAAA,cAAmE;;;;;IAI/DA,uDAAAA,cAAoF;;;;;IACpFA,uDAAAA,cAAoE;;;;;;IAJxEA,4DAAAA,cAA+C;IACXA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,0BAAiB;IAAA,EAAC;IAE3DA,wDAAAA,+DAAoF;IACpFA,wDAAAA,+DAAoE;IACtEA,0DAAAA,EAAS;;;;IAJqDA,uDAAAA,GAA+B;IAA/BA,wDAAAA,wCAA+B;IAExDA,uDAAAA,GAAuB;IAAvBA,wDAAAA,mCAAuB;IACvBA,uDAAAA,GAAwB;IAAxBA,wDAAAA,oCAAwB;;;;;IAavDA,4DAAAA,WAA4C;IACtBA,oDAAAA,4CAAqC;IAAAA,0DAAAA,EAAO;;;;;IAJpEA,4DAAAA,cAEmB;IACjBA,wDAAAA,iEAEO;IACTA,0DAAAA,EAAM;;;;IAHGA,uDAAAA,GAAmC;IAAnCA,wDAAAA,+CAAmC;;;;;IAoB5CA,4DAAAA,SAAoC;IAAAA,oDAAAA,GAAwB;IAAAA,0DAAAA,EAAK;;;;IAA7BA,uDAAAA,GAAwB;IAAxBA,gEAAAA,kCAAwB;;;;;IAFhEA,4DAAAA,cAAgE;IAE5DA,wDAAAA,6DAAiE;IACnEA,0DAAAA,EAAK;;;;IADkBA,uDAAAA,GAAa;IAAbA,wDAAAA,+BAAa;;;;;;IASpCA,4DAAAA,iBAAmF;IAAzBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,uBAAc;IAAA,EAAC;IAAEA,oDAAAA,YAAI;IAAAA,0DAAAA,EAAS;;;;;IACjGA,4DAAAA,iBAAyE;IAACA,oDAAAA,WAAG;IAAAA,0DAAAA,EAAS;;;;;IACtFA,4DAAAA,iBAA+E;IAAAA,uDAAAA,YAC9B;IAAAA,0DAAAA,EAAS;;;;;;;;;;;;;;;;ADpWlE,MAAOC,kBAAkB;EA0B7B;EACA;EAEAC,aAAa,CAACC,MAAkB;IAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAACG,MAAM,CAACC,GAAG,EAAEJ,MAAM,CAACG,MAAM,CAACE,GAAG,CAAC;IAC5D,IAAI,CAACD,GAAG,GAAGJ,MAAM,CAACG,MAAM,CAACC,GAAG;IAC5B,IAAI,CAACC,GAAG,GAAGL,MAAM,CAACG,MAAM,CAACE,GAAG;IAC5BJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI,CAACI,mBAAmB,CAAC,IAAI,CAACF,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC;IAE5C;IACA,IAAI,CAACE,UAAU,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACL,GAAG,CAACM,QAAQ,EAAE,CAAC;IAC9D,IAAI,CAACH,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACJ,GAAG,CAACK,QAAQ,EAAE,CAAC;EACjE;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,YACUC,aAA4B,EAC5BC,MAAqB,EACrBC,EAAe,EACfC,kBAAsC,EACtCC,aAA4B,EAC5BC,MAAc,EACdC,MAAc;EACtB;EACQC,KAAqB,EACrBC,YAAsB,EACvBC,aAA4B,EACnCC,MAAsB;IAXd,kBAAa,GAAbV,aAAa;IACb,WAAM,GAANC,MAAM;IACN,OAAE,GAAFC,EAAE;IACF,uBAAkB,GAAlBC,kBAAkB;IAClB,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IAEN,UAAK,GAALC,KAAK;IACL,iBAAY,GAAZC,YAAY;IACb,kBAAa,GAAbC,aAAa;IAtDtB,cAAS,GAAQ,EAAE;IAEnB,2BAAsB,GAAQ,EAAE;IAChC,aAAQ,GAAQ,EAAE;IAClB,gBAAW,GAAQ,EAAE;IACrB,gBAAW,GAAQ,EAAE;IAErB,mBAAc,GAAU,EAAE;IAE1B,aAAQ,GAAW,KAAK;IACxB,WAAM,GAAY,KAAK;IAEvB,aAAQ,GAAY,IAAI;IACxB,SAAI,GAAW,EAAE;IACjB,cAAS,GAAG,KAAK;IAIjB,eAAU,GAAW,EAAE;IAokBvB,qBAAgB,GAAY,KAAK;IA2BjC,uBAAkB,GAAY,KAAK;IA4DnC,sBAAiB,GAAY,KAAK;IApnBhCC,MAAM,CAACC,QAAQ,GAAG,QAAQ;IAC1BD,MAAM,CAACE,QAAQ,GAAG,KAAK;EACzB;EAEAC,QAAQ;IACNxB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACwB,gBAAgB,CAAC;IAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAChD,IAAI,IAAI,CAACF,QAAQ,EAAE;MACjB,IAAI,CAACG,MAAM,GAAG,IAAI;MAElB,IAAK,IAAI,CAACA,MAAM,GAAG,IAAI,EAAG;QACxB,IAAI,CAACT,aAAa,CAACU,QAAQ,CAAC,wBAAwB,CAAC;;KAExD,MAAM;MACL,IAAI,CAACV,aAAa,CAACU,QAAQ,CAAC,uBAAuB,CAAC;;IAGtD,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;MAClBK,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,GAAG,IAAI;QAC/ClC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEiC,GAAG,CAAC;QACvB,IAAI,CAAC9B,GAAG,GAAG,CAAC8B,GAAG,CAAChC,MAAM,CAACiC,SAAS;QAChC,IAAI,CAAChC,GAAG,GAAG,CAAC+B,GAAG,CAAChC,MAAM,CAACkC,QAAQ;QAC/B,IAAI,CAAC9B,UAAU,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACL,GAAG,CAACM,QAAQ,EAAE,CAAC;QAC9D,IAAI,CAACH,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACJ,GAAG,CAACK,QAAQ,EAAE,CAAC;MACjE,CAAC,CAAC;;IAGJ,IAAI,CAAC4B,WAAW,EAAE;IAClB;IACA,IAAI,CAACtB,aAAa,CAACuB,IAAI,EAAE,CAACC,IAAI,CAAC,MAAK;MAClC,IAAIC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CACpD,IAAI,CAACnB,gBAAgB,CAACoB,aAAa,EACnC;QACE;MAAA,CACD,CACF;MACDL,YAAY,CAACM,WAAW,CAAC,eAAe,EAAE,MAAK;QAC7C,IAAI,CAAC9B,MAAM,CAAC+B,GAAG,CAAC,MAAK;UACnB;UACA,IAAIC,KAAK,GAAmCR,YAAY,CAACS,QAAQ,EAAE;UACnE;UACA;UACA;UACA;UAEA,IAAIC,YAAY,GAAGF,KAAK,CAACG,kBAAkB,CAACC,OAAO,EAAE;UAErDpD,OAAO,CAACC,GAAG,CAACiD,YAAY,CAAC;UAEzB,IAAI,CAAC5C,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAACwC,KAAK,CAACK,iBAAiB,CAAC;UAEjE,IAAI,CAAC/C,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAAC0C,YAAY,CAAC,CAAC,CAAC,EAAEI,SAAS,CAAC;UACpE,IAAI,CAAChD,UAAU,CACZC,GAAG,CAAC,MAAM,CAAC,EACVC,QAAQ,CAAC0C,YAAY,CAAC,CAAC,CAAC,EAAEI,SAAS,IAAI,EAAE,CAAC;UAE9C,IAAI,CAAChD,UAAU,CACZC,GAAG,CAAC,YAAY,CAAC,EAChBC,QAAQ,CAAC0C,YAAY,CAAC,CAAC,CAAC,EAAEI,SAAS,IAAI,EAAE,CAAC;UAE9C,IAAI,CAACnD,GAAG,GAAG6C,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACrD,GAAG,EAAE;UACxC,IAAI,CAACC,GAAG,GAAG4C,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACpD,GAAG,EAAE;UACxC,IAAI,CAACqD,IAAI,GAAG,EAAE;UAEdzD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,GAAG,CAAC;UACrBH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,GAAG,CAAC;UACrB,IAAI,CAACE,UAAU,CACZC,GAAG,CAAC,WAAW,CAAC,EACfC,QAAQ,CAACwC,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACpD,GAAG,EAAE,CAACK,QAAQ,EAAE,CAAC;UACtD,IAAI,CAACH,UAAU,CACZC,GAAG,CAAC,UAAU,CAAC,EACdC,QAAQ,CAACwC,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACrD,GAAG,EAAE,CAACM,QAAQ,EAAE,CAAC;UAEtD;UACA,IAAIuC,KAAK,CAACO,QAAQ,KAAKG,SAAS,IAAIV,KAAK,CAACO,QAAQ,KAAK,IAAI,EAAE;YAC3D;;UAGF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF,IAAI,CAACI,cAAc,EAAE;IACrB,IAAI,CAACC,cAAc,EAAE;IAErB,IAAI,CAAC,IAAI,CAAClC,QAAQ,EAAE;MAClB,IAAI,CAACmC,eAAe,EAAE;;IAExB,IAAI,IAAI,CAACnC,QAAQ,EAAE;MACjB,IAAI,CAACoC,gBAAgB,EAAE;MACvB,IAAI,CAACjC,MAAM,GAAG,IAAI;MAClB,IAAI,CAACkC,QAAQ,GAAG,MAAM;;EAE1B;EAEA;EAEA;EACA;EACA;EACA;EAEA1B,WAAW;IACT,IAAI,CAAC/B,UAAU,GAAG,IAAI,CAACO,EAAE,CAACmD,KAAK,CAAC;MAC9BtC,QAAQ,EAAE,CAAC;MACXuC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC1E,4DAAgB,CAAC,CAAC;MAC/B2E,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbpC,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdoC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,CAAC,CAAC,EAAE,CAACjF,+DAAmB,CAAC,CAAC;MACvCmF,kBAAkB,EAAE,IAAI,CAAC/D,EAAE,CAACgE,KAAK,CAAC,EAAE;KACrC,CAAC;EACJ;EAEAC,qBAAqB;IACnB,OAAO,IAAI,CAACjE,EAAE,CAACmD,KAAK,CAAC;MACnBe,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,IAAI;MACdX,MAAM,EAAE;KACT,CAAC;EACJ;EAEAY,UAAU,CAACC,KAAU,EAAEC,CAAC;IACtBtF,OAAO,CAACC,GAAG,CAACoF,KAAK,CAAC;IAClBA,KAAK,IAAI,IAAI;IACb,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAAC/E,UAAU,CACZC,GAAG,CAAC,oBAAoB,CAAC,CACzB,IAAI,CAAC,CAAC+E,CAAC,CAAC,CACR/E,GAAG,CAAC,UAAU,CAAC,CACfgF,MAAM,EAAE;MAEX,IAAI,CAACjF,UAAU,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC+E,CAAC,CAAC,CAAC/E,GAAG,CAAC,QAAQ,CAAC,CAACgF,MAAM,EAAE;MACzE,IAAI,CAACjF,UAAU,CACZC,GAAG,CAAC,oBAAoB,CAAC,CACzB,IAAI,CAAC,CAAC+E,CAAC,CAAC,CACR/E,GAAG,CAAC,QAAQ,CAAC,CACbiF,UAAU,CAAC,IAAI,CAAC;KACpB,MAAM;MACL,IAAI,CAAClF,UAAU,CACZC,GAAG,CAAC,oBAAoB,CAAC,CACzB,IAAI,CAAC,CAAC+E,CAAC,CAAC,CACR/E,GAAG,CAAC,QAAQ,CAAC,CACbiF,UAAU,CAAC,IAAI,CAAC;MAEnB,IAAI,CAAClF,UAAU,CACZC,GAAG,CAAC,oBAAoB,CAAC,CACzB,IAAI,CAAC,CAAC+E,CAAC,CAAC,CACR/E,GAAG,CAAC,UAAU,CAAC,CACfkF,OAAO,EAAE;MAEZ,IAAI,CAACnF,UAAU,CACZC,GAAG,CAAC,oBAAoB,CAAC,CACzB,IAAI,CAAC,CAAC+E,CAAC,CAAC,CACR/E,GAAG,CAAC,QAAQ,CAAC,CACbkF,OAAO,EAAE;;EAEhB;EACAC,YAAY;IACV;IAEA,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,EAAE;MACzB,IAAI,CAACrF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAEiF,UAAU,CAAC,IAAI,CAAC;KAChD,MAAM;MACL,IAAI,CAAClF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAEiF,UAAU,CAAC,IAAI,CAAC;;EAEnD;EACA,IAAIZ,kBAAkB;IACpB,OAAO,IAAI,CAACtE,UAAU,CAACC,GAAG,CAAC,oBAAoB,CAAc;EAC/D;EAEA,IAAIqF,SAAS;IACX,OAAO,IAAI,CAACtF,UAAU,CAACuF,QAAQ;EACjC;EAKAC,QAAQ;IACN,IAAI,CAACxF,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,EAAEiF,UAAU,CAAC,IAAI,CAACO,cAAc,CAAC;IACnE/F,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC8E,KAAK,CAAC;IACrD;IAEA,IAAI,CAACW,SAAS,GAAG,IAAI;IACrB,IAAI,CAAC1F,UAAU,CACZC,GAAG,CAAC,YAAY,CAAC,EAChBiF,UAAU,CAAC,IAAI,CAAClF,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE8E,KAAK,CAACY,IAAI,EAAE,CAAC;IAC/D,IAAI,IAAI,CAAC3F,UAAU,CAAC4F,OAAO,EAAE;MAC3B,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;;IAE5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEApG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,UAAU,CAAC+E,KAAK,CAAC;IAElC,IAAI,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE8E,KAAK,IAAI,CAAC,EAAE;MAC/C,IAAI,CAACgB,SAAS,EAAE;KACjB,MAAM;MACL,IAAI,CAACC,YAAY,EAAE;;EAEvB;EAIAD,SAAS;IACP,IAAI,CAACE,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACjG,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE8E,KAAK,IAAI,EAAE,EAAE;MAClD,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEiF,UAAU,CAAC,GAAG,CAAC;;IAEpD,IAAI,CAAC,IAAI,CAAClF,UAAU,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE8E,KAAK,EAAE;MACxC,OAAO,IAAI,CAAC/E,UAAU,CAAC+E,KAAK,CAAClB,KAAK;;IAEpC,IAAI,CAAC,IAAI,CAAC7D,UAAU,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE8E,KAAK,EAAE;MACxC,OAAO,IAAI,CAAC/E,UAAU,CAAC+E,KAAK,CAACnB,KAAK;;IAEpC,IAAI,CAAC,IAAI,CAAC5D,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE8E,KAAK,EAAE;MAC5C,OAAO,IAAI,CAAC/E,UAAU,CAAC+E,KAAK,CAACZ,SAAS;;IAGxC,IAAI,CAAC9D,aAAa,CAAC0F,SAAS,CAAC,IAAI,CAAC/F,UAAU,CAAC+E,KAAK,CAAC,CAACmB,SAAS,CAC1DC,QAAa,IAAI;MAChB,IAAIA,QAAQ,CAACC,SAAS,IAAI,IAAI,EAAE;QAC9B;QACA,IAAI,CAACH,SAAS,GAAG,KAAK;QAEtB,MAAMI,QAAQ,GAAG,IAAI,CAACxF,YAAY,CAACyF,IAAI,CAAClH,gFAAkB,CAAC;QAC3DiH,QAAQ,CAACE,iBAAiB,CAACC,IAAI,GAAG,EAAE;QACpC;QACA;QACA;QACA;OACD,MAAM;QACL,IAAI,IAAI,CAACxG,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE8E,KAAK,IAAI,GAAG,EAAE;UACnD,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEiF,UAAU,CAAC,EAAE,CAAC;;QAEnD,IAAI,CAACe,SAAS,GAAG,KAAK;QAEtB,IAAI,CAACQ,UAAU,GAAGN,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,MAAM;QAEpDC,UAAU,CAAC,MAAK;UACd,IAAI,CAACH,UAAU,GAAG,EAAE;QACtB,CAAC,EAAE,IAAI,CAAC;QAER;QACA;QACA;;MAEF;IACF,CAAC,EACAI,KAAU,IAAI;MACb,IAAI,CAACZ,SAAS,GAAG,KAAK;MACtBvG,OAAO,CAACC,GAAG,CAACkH,KAAK,CAAC,EAAG,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,UAAW;IAC5D,CAAC,CACF;EACH;EAEAf,YAAY;IACV;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACc,YAAY,GAAG,EAAE;IACtB,IAAI,CAACL,UAAU,GAAG,EAAE;IACpB;IACA,IAAI,CAACzG,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,EAAEiF,UAAU,CAAC,IAAI,CAACO,cAAc,CAAC;IACnE/F,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC8E,KAAK,CAAC;IAErD,IAAI,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE8E,KAAK,IAAI,IAAI,EAAE;MACnD,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEiF,UAAU,CAAC,CAAC,CAAC;;IAEjD,IAAI,CAACe,SAAS,GAAG,IAAI;IAErBvG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,UAAU,CAAC+E,KAAK,CAAC;IAElC,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,EAAEiF,UAAU,CAAC,IAAI,CAACO,cAAc,CAAC;IACnE/F,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC8E,KAAK,CAAC;IACrD,IAAI,CAAC1E,aAAa,CAAC2F,YAAY,CAAC,IAAI,CAAChG,UAAU,CAAC+E,KAAK,CAAC,CAACmB,SAAS,CAC7DC,QAAa,IAAI;MAChB,IAAIA,QAAQ,CAACC,SAAS,IAAI,IAAI,EAAE;QAC9B,IAAI,CAAC5C,gBAAgB,EAAE;QACvB,IAAI,CAACyC,SAAS,GAAG,KAAK;QACtB,IAAI,CAACe,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACC,gBAAgB,IAAI,KAAK;QAC9B,IAAI,CAACC,kBAAkB,IAAI,KAAK;QAChC,MAAMb,QAAQ,GAAG,IAAI,CAACxF,YAAY,CAACyF,IAAI,CAAClH,gFAAkB,CAAC;QAC3DiH,QAAQ,CAACE,iBAAiB,CAACC,IAAI,GAAG,MAAM;OACzC,MAAM;QACL,IAAI,CAACP,SAAS,GAAG,KAAK;QACtB,IAAI,CAACQ,UAAU,GAAGN,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,MAAM;;IAExD,CAAC,EACAE,KAAU,IAAI;MACb,IAAI,CAACZ,SAAS,GAAG,KAAK;MACtBvG,OAAO,CAACC,GAAG,CAACkH,KAAK,CAAC,EAAG,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,UAAW;IAC5D,CAAC,CACF;EACH;EACAI,MAAM;IACJ,IAAI,IAAI,CAAC5F,MAAM,IAAI,KAAK,EAAE;MACxB,IAAI,CAACA,MAAM,GAAG,IAAI;MAClB,IAAI,CAACkC,QAAQ,GAAG,MAAM;KACvB,MAAM;MACL,IAAI,CAAClC,MAAM,GAAG,KAAK;MACnB,IAAI,CAACkC,QAAQ,GAAG,MAAM;;EAE1B;EACAD,gBAAgB;IACd,IAAI,CAACiC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACpF,aAAa,CACfmD,gBAAgB,CAAC,IAAI,CAACpC,QAAQ,CAAC,CAC/B8E,SAAS,CAAEC,QAAa,IAAI;MAC3B,IAAIA,QAAQ,EAAE;QACZzG,OAAO,CAACC,GAAG,CAACwG,QAAQ,CAAC;QAErB,MAAMiB,aAAa,GAAGjB,QAAQ,CAACkB,IAAI;QACnC;QACA,IAAI,CAACrH,UAAU,CAACkF,UAAU,CAACkC,aAAa,CAAC;QACzC,IAAI,CAACpH,UAAU,CACZC,GAAG,CAAC,WAAW,CAAC,EACfiF,UAAU,CAACkC,aAAa,CAACjD,SAAS,EAAEmD,MAAM,CAAC;QAE/C,IAAI,CAACnG,gBAAgB,CAACoB,aAAa,CAACwC,KAAK,GACvC,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAE8E,KAAK;QAEvC,IAAI,CAACjF,GAAG,GAAG,CAAC,IAAI,CAACE,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE8E,KAAK;QACnD,IAAI,CAAClF,GAAG,GAAG,CAAC,IAAI,CAACG,UAAU,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE8E,KAAK;QAClDrF,OAAO,CAACC,GAAG,CAAC,OAAO,IAAI,CAACG,GAAG,CAAC;QAC5B8G,UAAU,CAAC,MAAK;UACd,IAAI,CAACzD,IAAI,GAAG,EAAE;QAChB,CAAC,EAAE,IAAI,CAAC;QAER;QACA;QACA;QAEA,IAAI,IAAI,CAACnD,UAAU,CAAC+E,KAAK,CAACb,MAAM,IAAI,IAAI,EAAE;UACxC,IAAI,CAACmB,QAAQ,GAAG,IAAI;SACrB,MAAM;UACL,IAAI,CAACA,QAAQ,GAAG,KAAK;;QAEvB+B,aAAa,CAACG,UAAU,CAACC,OAAO,CAAEC,IAAI,IAAI;UACxC,IAAI,CAAChC,cAAc,CAACiC,IAAI,CAACD,IAAI,CAACE,YAAY,CAAC;QAC7C,CAAC,CAAC;QAEFjI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC8F,cAAc,CAAC;QAEhC,KAAK,IAAImC,CAAC,GAAG,IAAI,CAACtD,kBAAkB,CAACS,KAAK,CAAC8C,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAClE,IAAI,CAACtD,kBAAkB,CAACwD,QAAQ,CAACF,CAAC,CAAC;;QAGrC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,aAAa,CAAC9C,kBAAkB,CAACuD,MAAM,EAAEE,CAAC,EAAE,EAAE;UAChE;UACA;UACA;UACA;UACA,IAAI,CAACzD,kBAAkB,CAACoD,IAAI,CAC1B,IAAI,CAACnH,EAAE,CAACmD,KAAK,CAAC;YACZe,KAAK,EAAE2C,aAAa,CAAC9C,kBAAkB,CAACyD,CAAC,CAAC,CAACtD,KAAK;YAChDC,OAAO,EAAE0C,aAAa,CAAC9C,kBAAkB,CAACyD,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,UAAU;YAC9DtD,QAAQ,EAAEyC,aAAa,CAAC9C,kBAAkB,CAACyD,CAAC,CAAC,EAAEpD,QAAQ;YACvDC,MAAM,EAAEwC,aAAa,CAAC9C,kBAAkB,CAACyD,CAAC,CAAC,EAAEnD,MAAM;YACnDC,QAAQ,EACNuC,aAAa,CAAC9C,kBAAkB,CAACyD,CAAC,CAAC,CAAC7D,MAAM,IAAI,IAAI,GAC9C,IAAI,GACJ,KAAK;YACXA,MAAM,EAAEkD,aAAa,CAAC9C,kBAAkB,CAACyD,CAAC,CAAC,CAAC7D;WAC7C,CAAC,CACH;;;IAGP,CAAC,CAAC;EACN;EAEAgE,gBAAgB,CAACT,IAAY;IAC3B/H,OAAO,CAACC,GAAG,CAAC8H,IAAI,CAAC;IACjB,IAAI,IAAI,CAAChC,cAAc,CAAC0C,QAAQ,CAACV,IAAI,CAAC,EAAE;MACtC,IAAI,CAAChC,cAAc,CAAC2C,MAAM,CAAC,IAAI,CAAC3C,cAAc,CAAC4C,OAAO,CAACZ,IAAI,CAAC,EAAE,CAAC,CAAC;KACjE,MAAM;MACL,IAAI,CAAChC,cAAc,CAACiC,IAAI,CAACD,IAAI,CAAC;;IAEhC/H,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC8F,cAAc,CAAC;EAClC;EAEApC,cAAc;IACZ,IAAI,CAAChD,aAAa,CAACiI,cAAc,CAAC,CAAC,CAAC,CAACpC,SAAS,CAC3CC,QAAa,IAAI;MAChB,IAAI,CAAC/B,WAAW,GAAG+B,QAAQ,CAACkB,IAAI;IAClC,CAAC,EACAR,KAAK,IAAI;MACR,IAAI,CAACC,YAAY,GAAGD,KAAK,CAAC0B,OAAO;IACnC,CAAC,CACF;EACH;EAEAhF,eAAe;IACb,IAAI,CAAClD,aAAa,CAACiI,cAAc,CAAC,CAAC,CAAC,CAACpC,SAAS,CAC3CC,QAAa,IAAI;MAChBzG,OAAO,CAACC,GAAG,CAACwG,QAAQ,CAACkB,IAAI,CAAC;MAE1B,KAAK,IAAIrC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,QAAQ,CAACkB,IAAI,CAACQ,MAAM,EAAE7C,CAAC,EAAE,EAAE;QAC7C,IAAI,CAACV,kBAAkB,CAACoD,IAAI,CAC1B,IAAI,CAACnH,EAAE,CAACmD,KAAK,CAAC;UACZe,KAAK,EAAE0B,QAAQ,CAACkB,IAAI,CAACrC,CAAC,CAAC,EAAEwD,EAAE;UAC3B9D,OAAO,EAAEyB,QAAQ,CAACkB,IAAI,CAACrC,CAAC,CAAC,EAAEyD,WAAW;UACtC9D,QAAQ,EAAE,OAAO;UACjBC,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE,IAAI;UACdX,MAAM,EAAE;SACT,CAAC,CACH;;IAEL,CAAC,EACA2C,KAAK,IAAI;MACR,IAAI,CAACC,YAAY,GAAGD,KAAK,CAAC0B,OAAO;IACnC,CAAC,CACF;EACH;EAEAjF,cAAc;IACZ,IAAI,CAACjD,aAAa,CAACqI,QAAQ,EAAE,CAACxC,SAAS,CACpCC,QAAa,IAAI;MAChB,IAAI,CAACwC,WAAW,GAAGxC,QAAQ,CAACkB,IAAI;IAClC,CAAC,EACAR,KAAK,IAAI;MACR,IAAI,CAACC,YAAY,GAAGD,KAAK,CAAC0B,OAAO;IACnC,CAAC,CACF;EACH;EAEAxI,mBAAmB,CAACF,GAAG,EAAE+I,IAAI;IAC3B,IAAI,CAACvI,aAAa,CAACN,mBAAmB,CAACF,GAAG,EAAE+I,IAAI,CAAC,CAAC1C,SAAS,CACxDC,QAAa,IAAI;MAChBzG,OAAO,CAACC,GAAG,CAACwG,QAAQ,CAAC;MACrB,MAAM0C,eAAe,GAAG1C,QAAQ,CAAC2C,OAAO,CAAC,CAAC,CAAC;MAE3C,MAAMC,QAAQ,GAAGF,eAAe,CAAChG,kBAAkB,CAACC,OAAO,EAAE;MAE7D,IAAI,CAAC9C,UAAU,CACZC,GAAG,CAAC,SAAS,CAAC,EACbC,QAAQ,CAAC2I,eAAe,CAAC9F,iBAAiB,CAAC;MAE/C,IAAI,CAAC5B,gBAAgB,CAACoB,aAAa,CAACwC,KAAK,GACvC,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAE8E,KAAK;MAEvC,IAAI,CAAC/E,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAAC6I,QAAQ,CAAC,CAAC,CAAC,CAAC/F,SAAS,CAAC;MAC/D,IAAI,CAAChD,UAAU,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC6I,QAAQ,CAAC,CAAC,CAAC,CAAC/F,SAAS,CAAC;MAC5D,IAAI,CAAChD,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEC,QAAQ,CAAC6I,QAAQ,CAAC,CAAC,CAAC,CAAC/F,SAAS,CAAC;MAClE;MACA;IACF,CAAC,EACA6D,KAAK,IAAI;MACR,IAAI,CAACC,YAAY,GAAGD,KAAK,CAAC0B,OAAO;IACnC,CAAC,CACF;EACH;EAGAS,cAAc;IACZ;IAEA,IAAI,IAAI,CAAC/B,gBAAgB,IAAI,KAAK,EAAE;MAClC,IAAI,CAACA,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACD,iBAAiB,GAAG,KAAK;MAC9B,IAAI,CAACE,kBAAkB,GAAG,KAAK;KAChC,MAAM,IAAI,IAAI,CAACD,gBAAgB,IAAI,IAAI,EAAE;MACxC,MAAMZ,QAAQ,GAAG,IAAI,CAACxF,YAAY,CAACyF,IAAI,CAACjH,yFAAqB,CAAC;MAC9DgH,QAAQ,CAACE,iBAAiB,CAACC,IAAI,GAAG,OAAO;MAEzCH,QAAQ,CAACE,iBAAiB,CAAC0C,aAAa,CAAC/C,SAAS,CAAEgD,MAAW,IAAI;QACjExJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuJ,MAAM,CAAC;QAC7B,IAAI,CAACjC,gBAAgB,GAAG,KAAK;QAC7B,IAAI,CAACpG,YAAY,CAACsI,UAAU,EAAE;QAC9B,IAAI,CAACnD,YAAY,EAAE;QACnB;MACF,CAAC,CAAC;;MACFK,QAAQ,CAACE,iBAAiB,CAAC6C,WAAW,CAAClD,SAAS,CAAEgD,MAAW,IAAI;QAC/DxJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuJ,MAAM,CAAC;QACpC,IAAI,CAACjC,gBAAgB,GAAG,KAAK;QAC7B,IAAI,CAACpG,YAAY,CAACsI,UAAU,EAAE;MAChC,CAAC,CAAC;;EAEN;EAGAE,gBAAgB;IACd;IAEA,IAAI,IAAI,CAACnC,kBAAkB,IAAI,KAAK,EAAE;MACpC,IAAI,CAACA,kBAAkB,GAAG,IAAI;MAC9B,IAAI,CAACD,gBAAgB,GAAG,KAAK;MAC7B,IAAI,CAACD,iBAAiB,GAAG,KAAK;KAC/B,MAAM,IAAI,IAAI,CAACE,kBAAkB,IAAI,IAAI,EAAE;MAC1C,MAAMb,QAAQ,GAAG,IAAI,CAACxF,YAAY,CAACyF,IAAI,CAACjH,yFAAqB,CAAC;MAC9DgH,QAAQ,CAACE,iBAAiB,CAACC,IAAI,GAAG,OAAO;MAEzCH,QAAQ,CAACE,iBAAiB,CAAC0C,aAAa,CAAC/C,SAAS,CAAEgD,MAAW,IAAI;QACjExJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuJ,MAAM,CAAC;QAC7B,IAAI,CAAChC,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACrG,YAAY,CAACsI,UAAU,EAAE;QAC9B,IAAI,CAACnD,YAAY,EAAE;QAEnBY,UAAU,CAAC,MAAK;UACd,IAAI,CAACpD,gBAAgB,EAAE;QACzB,CAAC,EAAE,IAAI,CAAC;QACR;MACF,CAAC,CAAC;;MACF6C,QAAQ,CAACE,iBAAiB,CAAC6C,WAAW,CAAClD,SAAS,CAAEgD,MAAW,IAAI;QAC/DxJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuJ,MAAM,CAAC;QACpC,IAAI,CAAChC,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACrG,YAAY,CAACsI,UAAU,EAAE;MAChC,CAAC,CAAC;;EAEN;EAEAG,YAAY;IACV,IACE,IAAI,CAACrC,gBAAgB,IAAI,IAAI,IAC7B,IAAI,CAACC,kBAAkB,IAAI,IAAI,IAC/B,IAAI,CAACF,iBAAiB,IAAI,IAAI,EAC9B;MACA,MAAMX,QAAQ,GAAG,IAAI,CAACxF,YAAY,CAACyF,IAAI,CAACjH,yFAAqB,CAAC;MAC9DgH,QAAQ,CAACE,iBAAiB,CAACC,IAAI,GAAG,MAAM;MAExCH,QAAQ,CAACE,iBAAiB,CAAC0C,aAAa,CAAC/C,SAAS,CAAEgD,MAAW,IAAI;QACjExJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuJ,MAAM,CAAC;QAC7B,IAAI,CAAClC,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACC,gBAAgB,IAAI,KAAK;QAC9B,IAAI,CAACC,kBAAkB,IAAI,KAAK;QAChC,IAAI,CAACrG,YAAY,CAACsI,UAAU,EAAE;QAC9B,IAAI,CAACnD,YAAY,EAAE;QACnB;MACF,CAAC,CAAC;;MACFK,QAAQ,CAACE,iBAAiB,CAAC6C,WAAW,CAAClD,SAAS,CAAEgD,MAAW,IAAI;QAC/DxJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuJ,MAAM,CAAC;QACpC,IAAI,CAAClC,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACC,gBAAgB,IAAI,KAAK;QAC9B,IAAI,CAACC,kBAAkB,IAAI,KAAK;QAChC,IAAI,CAACrG,YAAY,CAACsI,UAAU,EAAE;MAChC,CAAC,CAAC;KACH,MAAM;EAET;EACAI,YAAY,IAAI;EAEhBC,eAAe;IACb;IAEA,IAAI,IAAI,CAACxC,iBAAiB,IAAI,KAAK,EAAE;MACnC,IAAI,CAACA,iBAAiB,GAAG,IAAI;MAC7B,IAAI,CAACE,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACD,gBAAgB,GAAG,KAAK;KAC9B,MAAM,IAAI,IAAI,CAACD,iBAAiB,IAAI,IAAI,EAAE;MACzC,MAAMX,QAAQ,GAAG,IAAI,CAACxF,YAAY,CAACyF,IAAI,CAACjH,yFAAqB,CAAC;MAC9DgH,QAAQ,CAACE,iBAAiB,CAACC,IAAI,GAAG,OAAO;MAEzCH,QAAQ,CAACE,iBAAiB,CAAC0C,aAAa,CAAC/C,SAAS,CAAEgD,MAAW,IAAI;QACjExJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuJ,MAAM,CAAC;QAC7B,IAAI,CAAClC,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACnG,YAAY,CAACsI,UAAU,EAAE;QAC9B,IAAI,CAACnD,YAAY,EAAE;QACnB;MACF,CAAC,CAAC;;MACFK,QAAQ,CAACE,iBAAiB,CAAC6C,WAAW,CAAClD,SAAS,CAAEgD,MAAW,IAAI;QAC/DxJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuJ,MAAM,CAAC;QACpC,IAAI,CAAClC,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACnG,YAAY,CAACsI,UAAU,EAAE;MAChC,CAAC,CAAC;;EAEN;EAEAM,UAAU,CAACC,KAAK;IACd,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACG,OAAO;IAC1D,IAAIF,QAAQ,GAAG,EAAE,KAAKA,QAAQ,GAAG,EAAE,IAAIA,QAAQ,GAAG,EAAE,CAAC,EAAE;MACrD,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAEAG,gBAAgB;IACd,IAAI,CAAC9J,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEiF,UAAU,CAAC,EAAE,CAAC;EACnD;EACA6E,WAAW;IACT,IAAI,CAAC/J,UAAU,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEiF,UAAU,CAAC,EAAE,CAAC;EAC9C;EACA8E,WAAW;IACT,IAAI,CAAChK,UAAU,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEiF,UAAU,CAAC,EAAE,CAAC;EAC9C;EACA+E,aAAa;IACX,IAAI,CAAC9I,gBAAgB,CAACoB,aAAa,CAACwC,KAAK,GAAG,EAAE;IAC9C,IAAI,CAACmF,UAAU,GAAG,EAAE;IACpB,IAAI,CAAClK,UAAU,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;IAC9C,IAAI,CAACF,UAAU,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;IAC7C,IAAI,CAACF,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;IAE5C,IAAI,CAACF,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;IAC5C,IAAI,CAACF,UAAU,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;IACzC,IAAI,CAACF,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;IAE/C;EACF;;EAEAiK,gBAAgB,CAACC,CAAC;IAChB,IAAIC,CAAC;IACLC,QAAQ,CAACC,GAAG,GAAIF,CAAC,GAAGD,CAAC,CAACP,OAAO,GAAKQ,CAAC,GAAGD,CAAC,CAACR,KAAM;IAC9C,OACGS,CAAC,GAAG,EAAE,IAAIA,CAAC,GAAG,EAAE,IAChBA,CAAC,GAAG,EAAE,IAAIA,CAAC,GAAG,GAAI,IACnBA,CAAC,IAAI,CAAC,IACNA,CAAC,IAAI,EAAE,IACNA,CAAC,IAAI,EAAE,IAAIA,CAAC,IAAI,EAAG;EAExB;;AAxvBW9K,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAiL;EAAAC;IAAA;;;;;;;;;;;;;MC/B/BnL,4DAAAA,aAAiB;MAGoBA,wDAAAA;QAAA,OAAYoL,cAAU;MAAA,EAAC;MACpDpL,4DAAAA,aAAwB;MAEjBA,oDAAAA,2BAAmB;MAAAA,0DAAAA,EAAK;MAE/BA,4DAAAA,aAAyD;MACvDA,wDAAAA,sDAAkE;MAClEA,wDAAAA,sDAMM;MACNA,4DAAAA,cAAiB;MAGJA,oDAAAA,qBAAa;MAAAA,0DAAAA,EAAQ;MAC5BA,uDAAAA,gBACiG;MAEjGA,wDAAAA,+DAC0E;MAC1EA,wDAAAA,yDAaM;MAERA,0DAAAA,EAAM;MAERA,uDAAAA,cACM;MACNA,4DAAAA,cAAuB;MAGUA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAQ;MAC1CA,4DAAAA,iBACkE;MADlCA,wDAAAA;QAAA;MAAA,EAAsB;QAAA,OAC1CoL,kBAAc;MAAA,EAD4B;MAAtDpL,0DAAAA,EACkE;MAQxEA,4DAAAA,cAAuB;MAEXA,oDAAAA,qBAAY;MAAAA,0DAAAA,EAAQ;MAC5BA,4DAAAA,WAAK;MACHA,wDAAAA,yDAIM;MACRA,0DAAAA,EAAM;MACNA,wDAAAA,yDAMM;MACRA,0DAAAA,EAAM;MAERA,4DAAAA,cAAsB;MAEXA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAQ;MACpBA,uDAAAA,iBACoD;MACpDA,wDAAAA,+DAC4C;MAC5CA,wDAAAA,yDAOM;MACRA,0DAAAA,EAAM;MAERA,4DAAAA,cAAsB;MAGXA,oDAAAA,oBAAY;MAAAA,0DAAAA,EAAQ;MAC3BA,4DAAAA,WAAK;MAG4BA,wDAAAA;QAAA,OAAYoL,sBAAkB;MAAA,EAAC;MAF9DpL,0DAAAA,EAEiE;MACjEA,wDAAAA,+DAC4C;MAC5CA,wDAAAA,yDAWM;MACRA,0DAAAA,EAAM;MAMZA,4DAAAA,cAAiB;MAESA,oDAAAA,yBAAgB;MAAAA,0DAAAA,EAAK;MAC3CA,4DAAAA,aAA+B;MAACA,oDAAAA,oEAA2D;MAAAA,0DAAAA,EAAI;MAEjGA,uDAAAA,eAIM;MAiBNA,4DAAAA,eAAsB;MAEsBA,wDAAAA;QAAA,OAAiBG,uBAAuB;MAAA,EAAC;QAAA;MAAA;MAAjFH,0DAAAA,EAEyE;MACzEA,4DAAAA,kBACqC;MAD0BA,wDAAAA;QAAA,OAASoL,mBAAe;MAAA,EAAC;MACnDpL,uDAAAA,aAAiC;MACtEA,0DAAAA,EAAS;MAETA,4DAAAA,WAAK;MACHA,wDAAAA,yDAMM;MACRA,0DAAAA,EAAM;MAIVA,4DAAAA,cAAuB;MAMjBA,wDAAAA;QAAA,OAAWoL,yBAAqB;MAAA,EAAC;MAEjCpL,4DAAAA,uBAAiB;MACAA,oDAAAA,6BAAoB;MAAAA,0DAAAA,EAAS;MAKlDA,uDAAAA,UAAI;MACNA,0DAAAA,EAAM;MAENA,4DAAAA,eAA6B;MAElBA,oDAAAA,kBAAU;MAAAA,0DAAAA,EAAQ;MACzBA,uDAAAA,iBACmC;MACnCA,wDAAAA,yDAMM;MACRA,0DAAAA,EAAM;MAERA,4DAAAA,eAA6B;MAElBA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAQ;MACxBA,uDAAAA,iBACkC;MAClCA,wDAAAA,yDAMM;MACRA,0DAAAA,EAAM;MAGRA,4DAAAA,cAAsB;MAEXA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAQ;MACvBA,uDAAAA,iBACW;MAWbA,0DAAAA,EAAM;MAERA,4DAAAA,cAAsB;MAEVA,oDAAAA,cAAK;MAAAA,0DAAAA,EAAQ;MACrBA,uDAAAA,iBAA0F;MAQ5FA,0DAAAA,EAAM;MAERA,4DAAAA,cAAsB;MAEXA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAQ;MACpBA,uDAAAA,iBAAsG;MAQxGA,0DAAAA,EAAM;MAOZA,4DAAAA,cAAwB;MAClBA,oDAAAA,sBAAa;MAAAA,0DAAAA,EAAK;MAExBA,4DAAAA,gBAA+D;MAC7DA,wDAAAA,2DAAoE;MACpEA,wDAAAA,0DAMM;MACNA,4DAAAA,gBAAc;MACZA,uDAAAA,gBAGM;MACNA,4DAAAA,eAAiB;MAGNA,oDAAAA,eAAK;MAAAA,0DAAAA,EAAK;MAGnBA,4DAAAA,eAAsB;MACGA,oDAAAA,eAAK;MAAAA,0DAAAA,EAAK;MAEnCA,uDAAAA,eACM;MACRA,0DAAAA,EAAM;MACNA,wDAAAA,4DAoCM;MAERA,0DAAAA,EAAM;MAGRA,4DAAAA,eAAwB;MAClBA,oDAAAA,qBAAY;MAAAA,0DAAAA,EAAK;MAEvBA,4DAAAA,gBAAyC;MACvCA,wDAAAA,2DAAmE;MACnEA,wDAAAA,0DAMM;MACNA,4DAAAA,eAAiB;MAGJA,oDAAAA,qBAAY;MAAAA,0DAAAA,EAAQ;MAC3BA,uDAAAA,sBAEY;MACZA,wDAAAA,2DAMM;MACRA,0DAAAA,EAAM;MAIZA,4DAAAA,eAAiB;MAEfA,uDAAAA,gBAA4B;MAC5BA,4DAAAA,gBAAsB;MAOpBA,wDAAAA,2DAIM;MACRA,0DAAAA,EAAM;MACNA,4DAAAA,eAAuB;MACrBA,uDAAAA,gBACM;MACNA,4DAAAA,gBAAwB;MACuBA,oDAAAA,eAAM;MAAAA,0DAAAA,EAAS;MAC5DA,wDAAAA,iEAAiG;MACjGA,wDAAAA,iEAAsF;MACtFA,wDAAAA,iEAC0D;MAC5DA,0DAAAA,EAAM;;;MAjYNA,uDAAAA,GAAwB;MAAxBA,wDAAAA,6BAAwB;MAMDA,uDAAAA,GAAiC;MAAjCA,wDAAAA,6CAAiC;MACzBA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;MAcPA,uDAAAA,GAAwC;MAAxCA,wDAAAA,gDAAwC;MAGrEA,uDAAAA,GAA4J;MAA5JA,wDAAAA,mLAA4J;MAsB7HA,uDAAAA,GAAsB;MAAtBA,wDAAAA,yBAAsB;MAaKA,uDAAAA,GAAc;MAAdA,wDAAAA,4BAAc;MAOxEA,uDAAAA,GAA+J;MAA/JA,wDAAAA,uLAA+J;MAalIA,uDAAAA,GAAmC;MAAnCA,wDAAAA,2CAAmC;MAE7DA,uDAAAA,GAA4D;MAA5DA,wDAAAA,wEAA4D;MAYzBA,uDAAAA,GAAqD;MAArDA,yDAAAA,wDAAqD;MAI9EA,uDAAAA,GAA2D;MAA3DA,wDAAAA,uBAAAA,6DAAAA,UAAAA,6DAAAA,WAA2D;MAEzCA,uDAAAA,GAAmC;MAAnCA,wDAAAA,2CAAmC;MAE7DA,uDAAAA,GAA4F;MAA5FA,wDAAAA,4GAA4F;MAgD1FA,uDAAAA,IAAwB;MAAxBA,wDAAAA,2BAAwB;MAEhCA,uDAAAA,GAAkC;MAAlCA,wDAAAA,wEAAkC;MAK/BA,uDAAAA,GAA+I;MAA/IA,wDAAAA,uKAA+I;MAa7IA,uDAAAA,GAAgB;MAAhBA,wDAAAA,qBAAgB;MAEXA,uDAAAA,GAAgB;MAAhBA,wDAAAA,qBAAgB;MAkBzBA,uDAAAA,IAAwG;MAAxGA,wDAAAA,wHAAwG;MAcxGA,uDAAAA,GAAqG;MAArGA,wDAAAA,qHAAqG;MA6DrFA,uDAAAA,IAAmC;MAAnCA,wDAAAA,+CAAmC;MAC3BA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;MAwBcA,uDAAAA,IAAgC;MAAhCA,wDAAAA,4CAAgC;MA6ClEA,uDAAAA,GAAkC;MAAlCA,wDAAAA,8CAAkC;MAC1BA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;MAW4BA,uDAAAA,GAAqB;MAArBA,wDAAAA,0BAAqB;MAIrFA,uDAAAA,GAA4G;MAA5GA,wDAAAA,wHAA4G;MAoBrEA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MAWhBA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;MACZA,uDAAAA,GAA2B;MAA3BA,wDAAAA,uCAA2B;MAClBA,uDAAAA,GAAe;MAAfA,wDAAAA,uBAAe;;;;;;;;;;;;;;;;;;;;;;;ACjY3B;AACgB;AACd;;;AAEzD,MAAMuL,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH,kEAAiB;EAC5BI,QAAQ,EAAE;CACX,EACD;EAAEF,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAExL,gFAAkBA;AAAA,CAAE,EACpD;EAAEuL,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAExL,gFAAkBA;AAAA,CAAE,CAC1D;AAMK,MAAO0L,qBAAqB;AAArBA,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA;AAAqB;AAArBA,qBAAqB;YAHtBN,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXM,qBAAqB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFtBT,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACjBgD;AAExC;;;;;;;;;;;;ICIxBrL,4DAAAA,iBAC+B;IAA7BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,6BAAkB;IAAA,EAAC;IAAEA,oDAAAA,GAA2B;IAAAA,0DAAAA,EAAS;;;;;IADCA,yDAAAA,yCAAoC;IACzEA,uDAAAA,GAA2B;IAA3BA,gEAAAA,qCAA2B;;;;;;IAgDrDA,4DAAAA,SAAkC;IAChBA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAK;IAExCA,4DAAAA,SAAI;IAACA,oDAAAA,GAAmC;IAAAA,0DAAAA,EAAK;IAC7CA,4DAAAA,SAAI;IAACA,oDAAAA,GAAe;IAAAA,0DAAAA,EAAK;IACzBA,4DAAAA,SAAI;IAACA,oDAAAA,GAAe;IAAAA,0DAAAA,EAAK;IACzBA,4DAAAA,SAAI;IAEAA,uDAAAA,iBACsD;IAExDA,0DAAAA,EAAM;IAERA,4DAAAA,UAAI;IAAyBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,qBAAY;IAAA,EAAC;IAC/CA,oDAAAA,sBAAa;IAAAA,0DAAAA,EAAI;;;;IAbLA,uDAAAA,GAAmB;IAAnBA,+DAAAA,qBAAmB;IAE9BA,uDAAAA,GAAmC;IAAnCA,gEAAAA,oDAAmC;IACnCA,uDAAAA,GAAe;IAAfA,gEAAAA,0BAAe;IACfA,uDAAAA,GAAe;IAAfA,gEAAAA,0BAAe;IAIdA,uDAAAA,GAAiC;IAAjCA,wDAAAA,sCAAiC;IAIaA,uDAAAA,GAAmD;IAAnDA,oEAAAA,8DAAmD;;;;;IAO/GA,4DAAAA,UAAmC;IACjCA,uDAAAA,oBAA+B;IACjCA,0DAAAA,EAAM;;;;;;IA9CVA,4DAAAA,cAAsE;IAMcA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,2BAAkB;IAAA,EAAC;IAChGA,oDAAAA,GACA;IAAAA,uDAAAA,YAAoE;IAEtEA,0DAAAA,EAAS;IACXA,4DAAAA,cAAgB;IAAwDA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB;IAAA,EAAC;IAC9FA,oDAAAA,kBACA;IAAAA,uDAAAA,aAAoE;IAEtEA,0DAAAA,EAAS;IACXA,4DAAAA,cAAgB;IAAsBA,oDAAAA,eAAM;IAAAA,0DAAAA,EAAS;IACrDA,4DAAAA,cAAgB;IAAsBA,oDAAAA,eAAM;IAAAA,0DAAAA,EAAS;IACrDA,4DAAAA,cAAgB;IAAsBA,oDAAAA,oBAAW;IAAAA,0DAAAA,EAAS;IAC1DA,4DAAAA,cAAgB;IAAsBA,oDAAAA,gBAAO;IAAAA,0DAAAA,EAAS;IACtDA,uDAAAA,cAAqB;IACvBA,0DAAAA,EAAK;IAEPA,4DAAAA,aAAO;IACLA,wDAAAA,8DAeK;IACPA,0DAAAA,EAAQ;IAIZA,wDAAAA,+DAEM;IACRA,0DAAAA,EAAM;;;;;IAzCyCA,uDAAAA,GAAkC;IAAlCA,wDAAAA,oEAAkC;IACnEA,uDAAAA,GACA;IADAA,gEAAAA,2BACA;IAAqCA,uDAAAA,GAA0B;IAA1BA,yDAAAA,4BAA0B;IACxBA,uDAAAA,GAA0B;IAA1BA,yDAAAA,4BAA0B;IAEhCA,uDAAAA,GAAkC;IAAlCA,wDAAAA,oEAAkC;IAE9BA,uDAAAA,GAA0B;IAA1BA,yDAAAA,4BAA0B;IACxBA,uDAAAA,GAA0B;IAA1BA,yDAAAA,4BAA0B;IAUlDA,uDAAAA,IAAW;IAAXA,wDAAAA,wBAAW;IAoBhCA,uDAAAA,GAA2B;IAA3BA,wDAAAA,gEAA2B;;;;;IAOjCA,4DAAAA,UAAK;IACHA,uDAAAA,kBAA2B;IAC7BA,0DAAAA,EAAM;;;;;;;;;;;IAWNA,4DAAAA,aAAiD;IACrBA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,0BAAa;IAAA,EAAC;IAE/CA,oDAAAA,GACF;IAAAA,0DAAAA,EAAS;;;;;IAHyCA,uDAAAA,GAAuC;IAAvCA,wDAAAA,YAAAA,6DAAAA,qCAAuC;IAEvFA,uDAAAA,GACF;IADEA,gEAAAA,wBACF;;;ADxFJ,MAAOsL,iBAAiB;EAiB5BxK,YACUC,aAA4B,EAC5BM,MAAc,EACfG,aAA4B;IAF3B,kBAAa,GAAbT,aAAa;IACb,WAAM,GAANM,MAAM;IACP,kBAAa,GAAbG,aAAa;IAbtB,eAAU,GAAW,EAAE;IACvB,SAAI,GAAW,CAAC;IAChB,gBAAW,GAAQ,EAAE;IACrB,aAAQ,GAAW,IAAI;IACvB,aAAQ,GAAW,mBAAmB;IACtC,WAAM,GAAW,CAAC;IAGR,gBAAW,GAAG,IAAIuK,uDAAY,EAAU;EAM/C;EAEHnK,QAAQ;IACN,IAAI,CAACJ,aAAa,CAACU,QAAQ,CAAC,UAAU,CAAC;IAEvC,IAAI,CAAC+J,WAAW,EAAE;IAClB,IAAI,CAAClI,cAAc,EAAE;EACvB;EACAmI,SAAS;IACP,IAAI,CAAC7K,MAAM,CAAC8K,aAAa,CAAC,qBAAqB,CAAC;IAChD,IAAI,CAAC3K,aAAa,CAACU,QAAQ,CAAC,uBAAuB,CAAC;IACpD;EACF;;EACAkK,UAAU;IACR;IACA,IAAI,CAAC5K,aAAa,CAACU,QAAQ,CAAC,wBAAwB,CAAC;IACrD;IACA;EACF;;EACAmK,YAAY,CAAClE,IAAS;IACpB,IAAI,CAACrG,QAAQ,GAAGqG,IAAI,CAACe,EAAE;IACvB,IAAI,CAACoD,QAAQ,GAAGnE,IAAI,CAACjB,IAAI,CAAC,CAAC,CAAC,CAACyB,UAAU;IACvC,IAAI,CAAC4D,MAAM,GAAG,CAAC;IACf,IAAI,CAAC3B,UAAU,GAAG,EAAE;IAEpB,IAAI,CAACqB,WAAW,EAAE;EACpB;EACAA,WAAW;IACT,OAAO,IAAI,CAAClL,aAAa,CACtBkL,WAAW,CAAC,IAAI,CAACrB,UAAU,EAAE,IAAI,CAAC9I,QAAQ,EAAE,IAAI,CAAC0K,IAAI,EAAE,IAAI,CAACD,MAAM,CAAC,CACnE3F,SAAS,CAAEC,QAAa,IAAI;MAC3B,IAAIA,QAAQ,EAAE;QACZ,IAAI,CAAC4F,QAAQ,GAAG5F,QAAQ,CAACkB,IAAI;QAC7B,IAAI,CAAC2E,oBAAoB,GAAG7F,QAAQ,CAAC8F,IAAI,EAAED,oBAAoB;QAC/D,IAAI,CAACE,iBAAiB,GAAG/F,QAAQ,CAAC8F,IAAI,EAAEC,iBAAiB;QAEzD,IAAI,CAACC,YAAY,GAAGhG,QAAQ,CAAC8F,IAAI,EAAEC,iBAAiB;QACpD,IAAI,CAACE,KAAK,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACH,YAAY,GAAG,CAAC,CAAC;QAC7C,IAAI,CAACI,KAAK,GAAGjB,6CAAO,CAAC,IAAI,CAACc,KAAK,CAAC;QAChC1M,OAAO,CAACC,GAAG,CAAC,IAAI,CAACyM,KAAK,CAAC;QACvB1M,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC4M,KAAK,CAAC;;IAE3B,CAAC,CAAC;EACN;EACAE,WAAW,CAAC/C,KAAU;IACpBhK,OAAO,CAACC,GAAG,CAAC+J,KAAK,EAAEgD,MAAM,CAAC3H,KAAK,CAAC;IAChC,MAAM4H,IAAI,GAAGjD,KAAK,CAACgD,MAAM,CAAC3H,KAAK;IAC/BrF,OAAO,CAACC,GAAG,CAACgN,IAAI,CAAC9E,MAAM,CAAC;IACxB,IAAI8E,IAAI,CAAC9E,MAAM,IAAI,CAAC,EAAE;MACpB,IAAI,CAACqC,UAAU,GAAGyC,IAAI;MACtB,IAAI,CAACd,MAAM,GAAG,CAAC;MAEf,IAAI,CAACN,WAAW,EAAE;;IAEpB,IAAIoB,IAAI,CAAC9E,MAAM,IAAI,CAAC,EAAE;MACpB,IAAI,CAAC0D,WAAW,EAAE;;EAEtB;EACAqB,YAAY;IACV,IAAI,CAAC1C,UAAU,GAAG,EAAE;IACpB,IAAI,CAAC4B,IAAI,GAAG,CAAC;IACb,IAAI,CAACP,WAAW,EAAE;EACpB;EAEAsB,gBAAgB;IACd,IAAI,IAAI,CAACf,IAAI,IAAI,CAAC,EAAE;MAClB,IAAI,CAACA,IAAI,GAAG,CAAC;KACd,MAAM;MACL,IAAI,CAACA,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;;IAEpC,IAAI,CAACP,WAAW,EAAE;EACpB;EACAuB,cAAc;IACZ,IAAI,IAAI,CAAChB,IAAI,IAAI,CAAC,EAAE;MAClB,IAAI,CAACA,IAAI,GAAG,CAAC;KACd,MAAM;MACL,IAAI,CAACA,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;;IAEpC,IAAI,CAACP,WAAW,EAAE;EACpB;EACAwB,gBAAgB;IACd,IAAI,CAACjB,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAClC,IAAI,CAACP,WAAW,EAAE;EACpB;EAEAyB,OAAO,CAACC,IAAY;IAClB,IAAI,CAACpB,MAAM,GAAGoB,IAAI;IAClB,IAAI,CAAC1B,WAAW,EAAE;IAClB1F,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACrB;EAEAzC,cAAc;IACZ,IAAI,CAAChD,aAAa,CAACiI,cAAc,CAAC,CAAC,CAAC,CAACpC,SAAS,CAC3CC,QAAa,IAAI;MAChB,IAAI,CAAC/B,WAAW,GAAG+B,QAAQ,CAACkB,IAAI;IAClC,CAAC,EACAR,KAAK,IAAI;MACR,IAAI,CAACC,YAAY,GAAGD,KAAK,CAAC0B,OAAO;IACnC,CAAC,CACF;EACH;;AAzHWqC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAJ;EAAA0C;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BjO,4DAAAA,aAAuB;MAKfA,wDAAAA,2DACoE;MACtEA,0DAAAA,EAAM;MAGRA,4DAAAA,aAAsB;MACKA,oDAAAA,GAA4C;MAAAA,0DAAAA,EAAI;MAE3EA,4DAAAA,aAAsB;MAEmCA,wDAAAA;QAAA,OAASoL,kBAAc;MAAA,EAAC;MAACpL,uDAAAA,aAC3C;MAAAA,0DAAAA,EAAS;MAC5CA,4DAAAA,iBACgC;MAD6BA,wDAAAA;QAAA;MAAA,EAAwB;QAAA,OAC1EoL,uBAAmB;MAAA,EADuD;MAArFpL,0DAAAA,EACgC;MAChCA,4DAAAA,kBACoC;MADiBA,wDAAAA;QAAA,OAASoL,kBAAc;MAAA,EAAC;MACzCpL,uDAAAA,aAAiC;MAAAA,0DAAAA,EAAS;MAGlFA,uDAAAA,eAA4B;MAC5BA,4DAAAA,eAAwD;MAC9CA,wDAAAA;QAAA,OAASoL,eAAW;MAAA,EAAC;MAAsBpL,uDAAAA,eAAyC;MAACA,oDAAAA,oBAC7F;MAAAA,0DAAAA,EAAS;MAGbA,4DAAAA,cAAiB;MACfA,wDAAAA,0DAgDM;MACNA,4DAAAA,eAAuB;MACrBA,wDAAAA,+EAAAA,oEAAAA,CAIc;MAChBA,0DAAAA,EAAM;MACNA,4DAAAA,eAAuD;MAChCA,oDAAAA,iBAAQ;MAAAA,4DAAAA,YAAM;MAACA,oDAAAA,IAChB;MAAAA,0DAAAA,EAAO;MACzBA,oDAAAA,cAAK;MAAAA,4DAAAA,YAAM;MAACA,oDAAAA,IAAiB;MAAAA,0DAAAA,EAAO;MAACA,oDAAAA,cACvC;MAAAA,0DAAAA,EAAK;MAEPA,4DAAAA,eAAwD;MAEpDA,wDAAAA,sDAKK;MACPA,0DAAAA,EAAK;;;;MA/FoCA,uDAAAA,GAAgB;MAAhBA,wDAAAA,4BAAgB;MAMhCA,uDAAAA,GAA4C;MAA5CA,gEAAAA,uDAA4C;MAMNA,uDAAAA,GAAwB;MAAxBA,wDAAAA,2BAAwB;MAGnFA,uDAAAA,GAAiC;MAAjCA,wDAAAA,sCAAiC;MAUfA,uDAAAA,GAAgB;MAAhBA,wDAAAA,sBAAgB;MAwDlBA,uDAAAA,GAAgC;MAAhCA,wDAAAA,oEAAgC;MAChBA,uDAAAA,GAChB;MADgBA,gEAAAA,+IAChB;MACNA,uDAAAA,GAAiB;MAAjBA,gEAAAA,4BAAiB;MAGVA,uDAAAA,GAAgC;MAAhCA,wDAAAA,qCAAgC;MAEZA,uDAAAA,GAAQ;MAARA,wDAAAA,sBAAQ;;;;;;;;;;;;;;;;;;;;;;;;;AC9FR;AAEmB;AACT;AACO;AACO;;AAajE,MAAOoO,cAAc;AAAdA,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA;AAAc;AAAdA,cAAc;YALvBF,yDAAY,EACZvC,2EAAqB,EACrBwC,+DAAY;AAAA;;sHAGHC,cAAc;IAAAC,eARvB/C,kEAAiB,EAACrL,gFAAkB;IAAA4L,UAGpCqC,yDAAY,EACZvC,2EAAqB,EACrBwC,+DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACRV,MAAOG,aAAa;EAMxBxN,YAAoByN,IAAgB,EAASC,aAA4B;IAArD,SAAI,GAAJD,IAAI;IAAqB,kBAAa,GAAbC,aAAa;IAL1D;IACA;IACA;IAEA,WAAM,GAAG,IAAI,CAACA,aAAa,CAACC,MAAM;EAC0C;EAE5ExC,WAAW,CACTrB,UAAkB,EAClB9I,QAAgB,EAChB0K,IAAY,EACZD,MAAc;IAEd,OAAO,IAAI,CAACgC,IAAI,CAAC5N,GAAG,CAClB,IAAI,CAAC+N,MAAM,GACT,+BAA+B9D,UAAU,iBAAiB9I,QAAQ,SAAS0K,IAAI,WAAWD,MAAM,aAAa,EAC/G,IAAI,CAACiC,aAAa,CAACG,UAAU,EAAE,CAChC;EACH;EAEAlI,SAAS,CAACmI,MAAW;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CACnB,IAAI,CAACH,MAAM,GAAG,oBAAoB,EAClCE,MAAM,EACN,IAAI,CAACJ,aAAa,CAACG,UAAU,EAAE,CAChC;EACH;EACAjI,YAAY,CAACkI,MAAW;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CACnB,IAAI,CAACH,MAAM,GAAG,uBAAuB,EACrCE,MAAM,EACN,IAAI,CAACJ,aAAa,CAACG,UAAU,EAAE,CAChC;EACH;EAEAzK,gBAAgB,CAACgF,EAAU;IACzB,OAAO,IAAI,CAACqF,IAAI,CAAC5N,GAAG,CAClB,IAAI,CAAC+N,MAAM,GAAG,sCAAsCxF,EAAE,EAAE,EACxD,IAAI,CAACsF,aAAa,CAACG,UAAU,EAAE,CAChC;EACH;EACAvF,QAAQ;IACN,OAAO,IAAI,CAACmF,IAAI,CAAC5N,GAAG,CAClB,IAAI,CAAC+N,MAAM,GAAG,+DAA+D,EAC7E,IAAI,CAACF,aAAa,CAACG,UAAU,EAAE,CAChC;EACH;EACA3F,cAAc,CAACE,EAAO;IACpB,OAAO,IAAI,CAACqF,IAAI,CAAC5N,GAAG,CAClB,IAAI,CAAC+N,MAAM,GAAG,kCAAkC,GAAGxF,EAAE,EACrD,IAAI,CAACsF,aAAa,CAACG,UAAU,EAAE,CAChC;EACH;EAEAlO,mBAAmB,CAACF,GAAG,EAAE+I,IAAI;IAC3B,OAAO,IAAI,CAACiF,IAAI,CAAC5N,GAAG,CAClB,4DAA4DJ,GAAG,IAAI+I,IAAI,8CAA8C,CACtH;EACH;;AA3DWgF,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAQ,SAAbR,aAAa;EAAAS,YAFZ;AAAM","sources":["./src/app/dashboard/modules/admin/branches/add-branch/add-branch.component.ts","./src/app/dashboard/modules/admin/branches/add-branch/add-branch.component.html","./src/app/dashboard/modules/admin/branches/branches-routing.module.ts","./src/app/dashboard/modules/admin/branches/branches.component.ts","./src/app/dashboard/modules/admin/branches/branches.component.html","./src/app/dashboard/modules/admin/branches/branches.module.ts","./src/app/dashboard/modules/admin/branches/services/branch.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpserviceService } from 'src/app/services/httpservice.service';\nimport { BranchService } from '../services/branch.service';\nimport { ElementRef, NgZone } from '@angular/core';\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\nimport { ModalDoneComponent } from '../modal-done/modal-done.component';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalConfirmComponent } from '../modal-confirm/modal-confirm.component';\nimport { HeaderService } from '../../../../../services/header.service';\n\ninterface marker {\n  lat: number;\n  lng: number;\n  label?: any;\n  draggable: boolean;\n}\n\n@Component({\n  selector: 'app-add-branch',\n  templateUrl: './add-branch.component.html',\n  styleUrls: ['./add-branch.component.scss'],\n})\nexport class AddBranchComponent implements OnInit {\n  // @ViewChild('search')\n\n  @ViewChild('search', { static: false })\n  public searchElementRef: ElementRef;\n\n  branchForm!: FormGroup;\n  formModel: any = {};\n  errorMessage: any;\n  branchWorkingHoursList: any = [];\n  response: any = {};\n  branchAdmin: any = [];\n  branchTypes: any = [];\n  branchId!: number;\n  branchTypesAry: any[] = [];\n  address!: string;\n  pageType: string = 'Add';\n  isEdit: boolean = false;\n  private geoCoder: any;\n  isStatus: boolean = true;\n  zoom: number = 15;\n  submitted = false;\n  lat: any;\n  lng: any;\n  isLoading: boolean;\n  searchText: string = '';\n  // lat: number = 35.8645648;\n  // lng: number = 31.97258070000001;\n\n  markerDragEnd($event: MouseEvent) {\n    console.log('dragEnd', $event);\n    console.log('dragEnd', $event.coords.lat, $event.coords.lng);\n    this.lat = $event.coords.lat;\n    this.lng = $event.coords.lng;\n    console.log('mmmm');\n    this.getAddressBylangLat(this.lat, this.lng);\n\n    // this.getAddress(this.latitude, this.longitude);\n    this.branchForm.get('latitude')?.setValue(this.lat.toString());\n    this.branchForm.get('longitude')?.setValue(this.lng.toString());\n  }\n\n  // markers: marker[] = [\n  //   {\n  //     lat: 31.2798855,\n  //     lng: 37.122627,\n  //     draggable: true,\n  //   },\n  // ];\n\n  constructor(\n    private branchService: BranchService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private httpserviceService: HttpserviceService,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private router: Router,\n    // public searchElementRef: ElementRef,\n    private route: ActivatedRoute,\n    private modalService: NgbModal,\n    public headerService: HeaderService,\n    config: NgbModalConfig\n  ) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngOnInit(): void {\n    console.log(this.searchElementRef);\n    this.branchId = this.route.snapshot.params['id'];\n    if (this.branchId) {\n      this.isEdit = true;\n\n      if ((this.isEdit = true)) {\n        this.headerService.setTitle('Branches > View branch');\n      }\n    } else {\n      this.headerService.setTitle('Branches > Add branch');\n    }\n\n    if (!this.branchId) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        console.log('pos', pos);\n        this.lng = +pos.coords.longitude;\n        this.lat = +pos.coords.latitude;\n        this.branchForm.get('latitude')?.setValue(this.lat.toString());\n        this.branchForm.get('longitude')?.setValue(this.lng.toString());\n      });\n    }\n\n    this.getFormData();\n    // this.getAddressBylangLat();\n    this.mapsAPILoader.load().then(() => {\n      let autocomplete = new google.maps.places.Autocomplete(\n        this.searchElementRef.nativeElement,\n        {\n          // types: [\"address\"]\n        }\n      );\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          //get the place result\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          // console.log(place);\n          // console.log(place.name);\n          // console.log(place.formatted_address);\n          // console.log(place.address_components.reverse());\n\n          let locationData = place.address_components.reverse();\n\n          console.log(locationData);\n\n          this.branchForm.get('address')?.setValue(place.formatted_address);\n\n          this.branchForm.get('country')?.setValue(locationData[0]?.long_name);\n          this.branchForm\n            .get('city')\n            ?.setValue(locationData[1]?.long_name || '');\n\n          this.branchForm\n            .get('branchArea')\n            ?.setValue(locationData[3]?.long_name || '');\n\n          this.lat = place.geometry.location.lat();\n          this.lng = place.geometry.location.lng();\n          this.zoom = 15;\n\n          console.log(this.lat);\n          console.log(this.lng);\n          this.branchForm\n            .get('longitude')\n            ?.setValue(place.geometry.location.lng().toString());\n          this.branchForm\n            .get('latitude')\n            ?.setValue(place.geometry.location.lat().toString());\n\n          //verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          //set latitude, longitude and zoom\n        });\n      });\n    });\n\n    this.getBranchTypes();\n    this.getBranchAdmin();\n\n    if (!this.branchId) {\n      this.getWorkingHours();\n    }\n    if (this.branchId) {\n      this.getBranchDetails();\n      this.isEdit = true;\n      this.pageType = 'View';\n    }\n  }\n\n  // zoom: number = 8;\n\n  // // initial center position for the map\n  // lat: number = 51.673858;\n  // lng: number = 7.815982;\n  // previous: any;\n\n  getFormData() {\n    this.branchForm = this.fb.group({\n      branchId: 0,\n      branchName: '',\n      phone: [''],\n      email: ['', [Validators.email]],\n      country: [''],\n      city: [''],\n      branchArea: [''],\n      address: [''],\n      longitude: [''],\n      latitude: [''],\n      status: 2001,\n      adminUser: null,\n      branchTypes: [0, [Validators.required]],\n      branchWorkingHours: this.fb.array([]),\n    });\n  }\n\n  addBranchWorkingHours(): FormGroup {\n    return this.fb.group({\n      dayId: '',\n      dayName: '',\n      fromTime: '',\n      toTime: '',\n      isActive: true,\n      status: 2001,\n    });\n  }\n\n  chooseTime(value: any, i) {\n    console.log(value);\n    value == true;\n    if (value == true) {\n      this.branchForm\n        .get('branchWorkingHours')\n        ['at'](i)\n        .get('fromTime')\n        .enable();\n\n      this.branchForm.get('branchWorkingHours')['at'](i).get('toTime').enable();\n      this.branchForm\n        .get('branchWorkingHours')\n        ['at'](i)\n        .get('status')\n        .patchValue(2001);\n    } else {\n      this.branchForm\n        .get('branchWorkingHours')\n        ['at'](i)\n        .get('status')\n        .patchValue(2002);\n\n      this.branchForm\n        .get('branchWorkingHours')\n        ['at'](i)\n        .get('fromTime')\n        .disable();\n\n      this.branchForm\n        .get('branchWorkingHours')\n        ['at'](i)\n        .get('toTime')\n        .disable();\n    }\n  }\n  chooseStatus() {\n    // this.isStatus = this.isStatus == false ? true : false;\n\n    if (this.isStatus == true) {\n      this.branchForm.get('status')?.patchValue(2001);\n    } else {\n      this.branchForm.get('status')?.patchValue(2002);\n    }\n  }\n  get branchWorkingHours(): FormArray {\n    return this.branchForm.get('branchWorkingHours') as FormArray;\n  }\n\n  get formValid(): { [key: string]: AbstractControl } {\n    return this.branchForm.controls;\n  }\n  msgBranchNAme: string;\n  msgBranchTypes: string;\n  msgBranchAdmin: string;\n\n  onSubmit() {\n    this.branchForm.get('branchTypes')?.patchValue(this.branchTypesAry);\n    console.log(this.branchForm.get('branchTypes').value);\n    // const whours = this.branchForm.get('branchWorkingHours').value;\n\n    this.submitted = true;\n    this.branchForm\n      .get('branchName')\n      ?.patchValue(this.branchForm.get('branchName')?.value.trim());\n    if (this.branchForm.invalid) {\n      return window.scroll(0, 0);\n    }\n    // console.log(this.formValid['branchName'].invalid);\n    // console.log(this.formValid['branchTypes'].invalid);\n    // if (this.formValid['branchName'].invalid) {\n    //   this.msgBranchNAme = 'Please Enter Branch Name';\n    //   setTimeout(() => {\n    //     this.msgBranchNAme = '';\n    //   }, 3000);\n    //   return;\n    // }\n\n    // if (this.formValid['branchTypes'].invalid) {\n    //   this.msgBranchNAme = 'Please Enter Branch Types';\n    //   setTimeout(() => {\n    //     this.msgBranchNAme = '';\n    //   }, 3000);\n    //   return;\n    // }\n    // if (this.formValid['adminUser'].invalid) {\n    //   this.msgBranchNAme = 'Please Enter Branch Admin';\n    //   setTimeout(() => {\n    //     this.msgBranchNAme = '';\n    //   }, 3000);\n    //   return;\n    // }\n\n    // let whours = this.branchForm\n    //   .get('branchWorkingHours')\n    //   .value.filter((item) => {\n    //     return item.isActive == true;\n    //   });\n    // console.log('whours', whours);\n\n    // for (let r = this.branchWorkingHours.value.length - 1; r >= 0; r--) {\n    //   this.branchWorkingHours.removeAt(r);\n    // }\n\n    // // this.branchForm.get('branchWorkingHours')?.patchValue();\n    // for (let w = 0; w < whours.length; w++) {\n    //   this.branchWorkingHours.push(\n    //     this.fb.group({\n    //       dayId: whours[w].dayId,\n    //       dayName: whours[w].dayName,\n    //       fromTime: whours[w].fromTime,\n    //       toTime: whours[w].toTime,\n    //       isActive: whours[w].isActive,\n    //       \"status\": 2001\n\n    //     })\n    //   );\n    // }\n\n    // const newArr = this.branchForm.value.map((element) => ({\n    //   ...element,\n    //   fromTime: '00:00',\n    //   toTime: '00:00',\n    // }));\n\n    console.log(this.branchForm.value);\n\n    if (this.branchForm.get('branchId')?.value == 0) {\n      this.addBranch();\n    } else {\n      this.updateBranch();\n    }\n  }\n\n  messageSuccess: string;\n  errorsList: any;\n  addBranch() {\n    this.isLoading = true;\n\n    if (this.branchForm.get('branchName')?.value == '') {\n      this.branchForm.get('branchName')?.patchValue('-');\n    }\n    if (!this.branchForm.get('email')?.value) {\n      delete this.branchForm.value.email;\n    }\n    if (!this.branchForm.get('phone')?.value) {\n      delete this.branchForm.value.phone;\n    }\n    if (!this.branchForm.get('adminUser')?.value) {\n      delete this.branchForm.value.adminUser;\n    }\n\n    this.branchService.addBranch(this.branchForm.value).subscribe(\n      (response: any) => {\n        if (response.isSuccess == true) {\n          // this.messageSuccess = 'your new branch is added successfully';\n          this.isLoading = false;\n\n          const modalRef = this.modalService.open(ModalDoneComponent);\n          modalRef.componentInstance.name = '';\n          // this.getFormData();\n          // setTimeout(() => {\n          //   this.router.navigateByUrl('/branches');\n          // }, 2000);\n        } else {\n          if (this.branchForm.get('branchName')?.value == '-') {\n            this.branchForm.get('branchName')?.patchValue('');\n          }\n          this.isLoading = false;\n\n          this.errorsList = response.Errors || response.errors;\n\n          setTimeout(() => {\n            this.errorsList = '';\n          }, 5000);\n\n          // if (this.branchForm.invalid) {\n          //   return;\n          // }\n        }\n        // this.toastr.success('Added Successfully');\n      },\n      (error: any) => {\n        this.isLoading = false;\n        console.log(error), (this.errorMessage = error.statusText);\n      }\n    );\n  }\n\n  updateBranch() {\n    // let whours = this.branchForm\n    //   .get('branchWorkingHours')\n    //   .value.filter((item) => {\n    //     return item.isActive == true;\n    //   });\n    // console.log('whours', whours);\n\n    // for (let r = this.branchWorkingHours.value.length - 1; r >= 0; r--) {\n    //   this.branchWorkingHours.removeAt(r);\n    // }\n\n    // // this.branchForm.get('branchWorkingHours')?.patchValue();\n    // for (let w = 0; w < whours.length; w++) {\n    //   this.branchWorkingHours.push(\n    //     this.fb.group({\n    //       dayId: whours[w].dayId,\n    //       dayName: whours[w].dayName,\n    //       fromTime: whours[w].fromTime,\n    //       toTime: whours[w].toTime,\n    //       isActive: whours[w].isActive,\n    //     })\n    //   );\n    // }\n    this.errorMessage = '';\n    this.errorsList = '';\n    // this.branchForm.get('branchTypes')?.patchValue('');\n    this.branchForm.get('branchTypes')?.patchValue(this.branchTypesAry);\n    console.log(this.branchForm.get('branchTypes').value);\n\n    if (this.branchForm.get('adminUser')?.value == null) {\n      this.branchForm.get('adminUser')?.patchValue(0);\n    }\n    this.isLoading = true;\n\n    console.log(this.branchForm.value);\n\n    this.branchForm.get('branchTypes')?.patchValue(this.branchTypesAry);\n    console.log(this.branchForm.get('branchTypes').value);\n    this.branchService.updateBranch(this.branchForm.value).subscribe(\n      (response: any) => {\n        if (response.isSuccess == true) {\n          this.getBranchDetails();\n          this.isLoading = false;\n          this.isShowBranchAdmin = false;\n          this.isShowBranchInfo == false;\n          this.isShowWorkingHours == false;\n          const modalRef = this.modalService.open(ModalDoneComponent);\n          modalRef.componentInstance.name = 'edit';\n        } else {\n          this.isLoading = false;\n          this.errorsList = response.Errors || response.errors;\n        }\n      },\n      (error: any) => {\n        this.isLoading = false;\n        console.log(error), (this.errorMessage = error.statusText);\n      }\n    );\n  }\n  toEdit() {\n    if (this.isEdit == false) {\n      this.isEdit = true;\n      this.pageType = 'Edit';\n    } else {\n      this.isEdit = false;\n      this.pageType = 'View';\n    }\n  }\n  getBranchDetails() {\n    this.branchTypesAry = [];\n    this.branchService\n      .getBranchDetails(this.branchId)\n      .subscribe((response: any) => {\n        if (response) {\n          console.log(response);\n\n          const branchDetails = response.data;\n          // this.branchTypesAry= []\n          this.branchForm.patchValue(branchDetails);\n          this.branchForm\n            .get('adminUser')\n            ?.patchValue(branchDetails.adminUser?.userId);\n\n          this.searchElementRef.nativeElement.value =\n            this.branchForm.get('address')?.value;\n\n          this.lng = +this.branchForm.get('longitude')?.value;\n          this.lat = +this.branchForm.get('latitude')?.value;\n          console.log(typeof this.lng);\n          setTimeout(() => {\n            this.zoom = 16;\n          }, 2000);\n\n          // this.branchForm\n          // .get('branchTypes')\n          // ?.patchValue(branchDetails.);\n\n          if (this.branchForm.value.status == 2001) {\n            this.isStatus = true;\n          } else {\n            this.isStatus = false;\n          }\n          branchDetails.branchType.forEach((item) => {\n            this.branchTypesAry.push(item.branchTypeId);\n          });\n\n          console.log(this.branchTypesAry);\n\n          for (let r = this.branchWorkingHours.value.length - 1; r >= 0; r--) {\n            this.branchWorkingHours.removeAt(r);\n          }\n\n          for (let w = 0; w < branchDetails.branchWorkingHours.length; w++) {\n            // this.branchWorkingHours\n            //   .at(w)\n            //   .get('fromTime')\n            //   .patchValue('patchmail@gmail.com');\n            this.branchWorkingHours.push(\n              this.fb.group({\n                dayId: branchDetails.branchWorkingHours[w].dayId,\n                dayName: branchDetails.branchWorkingHours[w].day[0].lookupName,\n                fromTime: branchDetails.branchWorkingHours[w]?.fromTime,\n                toTime: branchDetails.branchWorkingHours[w]?.toTime,\n                isActive:\n                  branchDetails.branchWorkingHours[w].status == 2001\n                    ? true\n                    : false,\n                status: branchDetails.branchWorkingHours[w].status,\n              })\n            );\n          }\n        }\n      });\n  }\n\n  selectBranchType(item: number) {\n    console.log(item);\n    if (this.branchTypesAry.includes(item)) {\n      this.branchTypesAry.splice(this.branchTypesAry.indexOf(item), 1);\n    } else {\n      this.branchTypesAry.push(item);\n    }\n    console.log(this.branchTypesAry);\n  }\n\n  getBranchTypes() {\n    this.branchService.getLookupsById(3).subscribe(\n      (response: any) => {\n        this.branchTypes = response.data;\n      },\n      (error) => {\n        this.errorMessage = error.message;\n      }\n    );\n  }\n  idEditWH: boolean;\n  getWorkingHours() {\n    this.branchService.getLookupsById(6).subscribe(\n      (response: any) => {\n        console.log(response.data);\n\n        for (let i = 0; i < response.data.length; i++) {\n          this.branchWorkingHours.push(\n            this.fb.group({\n              dayId: response.data[i]?.id,\n              dayName: response.data[i]?.description,\n              fromTime: '09:00',\n              toTime: '17:00',\n              isActive: true,\n              status: 2001,\n            })\n          );\n        }\n      },\n      (error) => {\n        this.errorMessage = error.message;\n      }\n    );\n  }\n\n  getBranchAdmin() {\n    this.branchService.getUsers().subscribe(\n      (response: any) => {\n        this.branchAdmin = response.data;\n      },\n      (error) => {\n        this.errorMessage = error.message;\n      }\n    );\n  }\n\n  getAddressBylangLat(lat, lang) {\n    this.branchService.getAddressBylangLat(lat, lang).subscribe(\n      (response: any) => {\n        console.log(response);\n        const locationDetails = response.results[0];\n\n        const listData = locationDetails.address_components.reverse();\n\n        this.branchForm\n          .get('address')\n          ?.setValue(locationDetails.formatted_address);\n\n        this.searchElementRef.nativeElement.value =\n          this.branchForm.get('address')?.value;\n\n        this.branchForm.get('country')?.setValue(listData[1].long_name);\n        this.branchForm.get('city')?.setValue(listData[2].long_name);\n        this.branchForm.get('branchArea')?.setValue(listData[3].long_name);\n        // this.branchForm.get('city')?.setValue(locationDetails[1]?.long_name || '');\n        // this.branchForm.get('branchArea')?.setValue(locationDetails[3]?.long_name || '');\n      },\n      (error) => {\n        this.errorMessage = error.message;\n      }\n    );\n  }\n\n  isShowBranchInfo: boolean = false;\n  editBranchInfo() {\n    // this.isShowBranchInfo = this.isShowBranchInfo == false ? true : false;\n\n    if (this.isShowBranchInfo == false) {\n      this.isShowBranchInfo = true;\n      this.isShowBranchAdmin = false;\n      this.isShowWorkingHours = false;\n    } else if (this.isShowBranchInfo == true) {\n      const modalRef = this.modalService.open(ModalConfirmComponent);\n      modalRef.componentInstance.name = 'World';\n\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isShowBranchInfo = false;\n        this.modalService.dismissAll();\n        this.updateBranch();\n        // this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isShowBranchInfo = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n\n  isShowWorkingHours: boolean = false;\n  editWorkingHours() {\n    // this.isShowWorkingHours = this.isShowWorkingHours == false ? true : false;\n\n    if (this.isShowWorkingHours == false) {\n      this.isShowWorkingHours = true;\n      this.isShowBranchInfo = false;\n      this.isShowBranchAdmin = false;\n    } else if (this.isShowWorkingHours == true) {\n      const modalRef = this.modalService.open(ModalConfirmComponent);\n      modalRef.componentInstance.name = 'World';\n\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isShowWorkingHours = false;\n        this.modalService.dismissAll();\n        this.updateBranch();\n\n        setTimeout(() => {\n          this.getBranchDetails();\n        }, 2000);\n        // this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isShowWorkingHours = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n\n  chickForEdit() {\n    if (\n      this.isShowBranchInfo == true ||\n      this.isShowWorkingHours == true ||\n      this.isShowBranchAdmin == true\n    ) {\n      const modalRef = this.modalService.open(ModalConfirmComponent);\n      modalRef.componentInstance.name = 'name';\n\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isShowBranchAdmin = false;\n        this.isShowBranchInfo == false;\n        this.isShowWorkingHours == false;\n        this.modalService.dismissAll();\n        this.updateBranch();\n        // this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isShowBranchAdmin = false;\n        this.isShowBranchInfo == false;\n        this.isShowWorkingHours == false;\n        this.modalService.dismissAll();\n      });\n    } else {\n    }\n  }\n  applyAllTime() {}\n  isShowBranchAdmin: boolean = false;\n  editBranchAdmin() {\n    // this.isShowBranchAdmin = this.isShowBranchAdmin == false ? true : false;\n\n    if (this.isShowBranchAdmin == false) {\n      this.isShowBranchAdmin = true;\n      this.isShowWorkingHours = false;\n      this.isShowBranchInfo = false;\n    } else if (this.isShowBranchAdmin == true) {\n      const modalRef = this.modalService.open(ModalConfirmComponent);\n      modalRef.componentInstance.name = 'World';\n\n      modalRef.componentInstance.semdToConfirm.subscribe((result: any) => {\n        console.log('result', result);\n        this.isShowBranchAdmin = false;\n        this.modalService.dismissAll();\n        this.updateBranch();\n        // this.onSubmit();\n      });\n      modalRef.componentInstance.sendToClose.subscribe((result: any) => {\n        console.log('resulttoclose', result);\n        this.isShowBranchAdmin = false;\n        this.modalService.dismissAll();\n      });\n    }\n  }\n\n  numberOnly(event): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n\n  removeBranchName() {\n    this.branchForm.get('branchName')?.patchValue('');\n  }\n  removeemail() {\n    this.branchForm.get('email')?.patchValue('');\n  }\n  removephone() {\n    this.branchForm.get('phone')?.patchValue('');\n  }\n  removeseacrch() {\n    this.searchElementRef.nativeElement.value = '';\n    this.searchText = '';\n    this.branchForm.get('longitude')?.setValue('');\n    this.branchForm.get('latitude')?.setValue('');\n    this.branchForm.get('address')?.setValue('');\n\n    this.branchForm.get('country')?.setValue('');\n    this.branchForm.get('city')?.setValue('');\n    this.branchForm.get('branchArea')?.setValue('');\n\n    // this.search = '';\n  }\n\n  checkSpecialChar(e) {\n    var k;\n    document.all ? (k = e.keyCode) : (k = e.which);\n    return (\n      (k > 64 && k < 91) ||\n      (k > 96 && k < 123) ||\n      k == 8 ||\n      k == 32 ||\n      (k >= 48 && k <= 57)\n    );\n  }\n\n  //  nameValidator(control: FormControl): { [key: string]: boolean } {\n  //       const nameRegexp: RegExp = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n  //       if (control.value && nameRegexp.test(control.value)) {\n  //          return { invalidName: true };\n  //       }\n  //   }\n  // clickedMarker(label: any, index: number, infowindow: any) {\n  //   console.log(`clicked the marker: ${label || index}`);\n\n  //   if (this.previous) {\n  //     this.previous.close();\n  //   }\n  //   this.previous = infowindow;\n  // }\n\n  // mapClicked($event: MouseEvent) {\n  //   this.markers.push({\n  //     lat: $event.coords.lat,\n  //     lng: $event.coords.lng,\n  //     draggable: true,\n  //   });\n  // }\n\n  // markerDragEnd(m: marker, $event: MouseEvent) {\n  //   console.log('dragEnd', m, $event);\n  //   this.branchForm.get('latitude')?.patchValue(m.lat);\n  //   this.branchForm.get('longitude')?.patchValue(m.lng);\n  // }\n\n  // markers: marker[] = [\n  //   {\n  //     lat: 51.673858,\n  //     lng: 7.815982,\n  //     label: 'A',\n  //     draggable: true,\n  //   },\n  // ];\n}\n\n// interface marker {\n//   lat: number;\n//   lng: number;\n//   label?: any;\n//   draggable: boolean;\n// }\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div>\n      <form [formGroup]=\"branchForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"page-title\">\n          <!-- {{pageType}} -->\n          <h3> Branch Information </h3>\n        </div>\n        <div class=\"card-form overflow-hidden position-relative\">\n          <div class=\"overlay-bi\" *ngIf=\"!isShowBranchInfo && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editBranchInfo()\" [disabled]=\"branchForm.invalid\">\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowBranchInfo\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isShowBranchInfo\" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isShowBranchInfo\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Branch Name *</label>\n                <input formControlName=\"branchName\" name=\"branchName\" type=\"text\" class=\"form-control\"\n                  placeholder=\"Type name\" required minlength=\"6\" maxlength=\"30\" OnlyCharacter autocomplete=\"off\">\n                <!-- (keypress)=\"checkSpecialChar($event)\" -->\n                <button class=\"btn btn-remove\" *ngIf=\"branchForm.get('branchName').value\"\n                  (click)=\"removeBranchName()\"><i class=\"fa-solid fa-xmark\"></i> </button>\n                <div\n                  *ngIf=\"submitted && formValid['branchName'].invalid ||  formValid['branchName'].invalid && (formValid['branchName'].dirty || formValid['branchName'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['branchName'].errors\">\n                    <!-- <span class=\"error\"> Branch name is required.</span> -->\n                    <!-- <span class=\"error\"> This element is required, please fill.</span> -->\n                  </span>\n                  <span class=\"error\" *ngIf=\"formValid['branchName'].errors['required']\"> This element is required,\n                    please\n                    fill.</span>\n                  <span *ngIf=\"formValid['branchName'].errors['minlength']\">\n                    <span class=\"error\"> Branch name length must be between 6 and 30 character.</span>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n            </div>\n            <div class=\"col-md-4 \">\n              <div class=\"d-flex justify-content-end\">\n                <div class=\"form-check form-switch\">\n                  <label class=\"labelactive\">Active </label>\n                  <input class=\"form-check-input\" [(ngModel)]=\"isStatus\" name=\"isStatus\" type=\"checkbox\" role=\"switch\"\n                    (change)=\"chooseStatus()\" [ngModelOptions]=\"{standalone: true}\">\n                </div>\n\n                <!-- <div class=\"edit-btn\" [hidden]=\"!branchId\">\n                  <button class=\"btn\" (click)=\"toEdit()\"><i class=\"fa-solid fa-pen\"></i> </button>\n                </div> -->\n              </div>\n            </div>\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label> Branch Type </label>\n                <div>\n                  <div class=\"form-check form-check-inline\" *ngFor=\"let item of branchTypes\">\n                    <input class=\"form-check-input\" type=\"checkbox\" [id]=\"item.id\" (change)=\"selectBranchType(item.id)\"\n                      [checked]=\"branchTypesAry.includes(item.id)\">\n                    <label class=\"form-check-label\" [for]=\"item.id\">{{item.name[0].lookupName}}</label>\n                  </div>\n                </div>\n                <div\n                  *ngIf=\"submitted && formValid['branchTypes'].invalid || formValid['branchTypes'].invalid && (formValid['branchTypes'].dirty || formValid['branchTypes'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['branchTypes'].errors\" [hidden]=\"branchTypesAry?.length != 0\">\n                    <span class=\"error\">This element is required, please fill.</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <label>Email</label>\n                <input type=\"text\" formControlName=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email\"\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{1,3}$\">\n                <button class=\"btn btn-remove\" *ngIf=\"branchForm.get('email').value\" (click)=\"removeemail()\"><i\n                    class=\"fa-solid fa-xmark\"></i> </button>\n                <div *ngIf=\"formValid['email'].dirty || formValid['email'].touched\" class=\"ng-dirty\">\n                  <span [hidden]=\"branchForm.get('email').value == ''\">\n                    <!-- <span class=\"error\" *ngIf=\"formValid['email'].errors['required']\"> This element is required, please\n                      fill.</span> -->\n                    <span class=\"error\" *ngIf=\"formValid['email'].errors\"> the email you entered is incorrect.</span>\n\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n\n              <div class=\"form-group  position-relative\" [class.overflow-hidden]=\"!isShowBranchInfo && isEdit\">\n                <label>Phone Number</label>\n                <div>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"phone\" name=\"phone\" placeholder=\"\"\n                    ng2TelInput [ng2TelInputOptions]=\"{'preferredCountries': ['jo', 'sa']}\" min=\"8\" max=\"10\"\n                    minlength=\"8\" maxlength=\"10\" (keypress)=\"numberOnly($event)\" />\n                  <button class=\"btn btn-remove\" *ngIf=\"branchForm.get('phone').value\" (click)=\"removephone()\"><i\n                      class=\"fa-solid fa-xmark\"></i> </button>\n                  <div *ngIf=\"formValid['phone'].invalid && (formValid['phone'].dirty || formValid['phone'].touched)\"\n                    class=\"ng-dirty\" [hidden]=\"branchForm.get('phone').value == ''\">\n                    <span class=\"error\" *ngIf=\"formValid['phone'].errors['required']\"> This element is required, please\n                      fill.</span>\n                    <span *ngIf=\"formValid['phone'].errors['minlength']\">\n                      <!-- <span class=\"error\">Please enter valid phone no.</span> -->\n                      <!-- <span class=\"error\">the digits are must be from 8 to 10 </span> -->\n                      <span class=\"error\">The digits are less than 10 for (Mobile) and the digits are more than 8\n                      </span>\n\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 d-flex\">\n              <h3 class=\"heading1\"> Branch Location </h3>\n              <p class=\"smallTextMuted mx-3\"> Define Location by Search and select or set location on map</p>\n            </div>\n            <div class=\"col-md-6\">\n              <!-- <div class=\"form-group mt-3\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n              </div> -->\n            </div>\n            <div class=\"col-md-12\">\n              <!-- <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [disableDefaultUI]=\"false\" [zoomControl]=\"false\"\n                (mapClick)=\"mapClicked($event)\">\n\n                <agm-marker *ngFor=\"let m of markers; let i = index\"\n                  (markerClick)=\"clickedMarker(m.label, i, infowindow)\" [latitude]=\"m.lat\" [longitude]=\"m.lng\"\n                  [label]=\"m.label\" [markerDraggable]=\"m.draggable\" (dragEnd)=\"markerDragEnd(m, $event)\">\n\n                  <agm-info-window #infowindow>\n                    <strong>InfoWindow content</strong>\n                  </agm-info-window>\n\n                </agm-marker>\n\n              </agm-map> -->\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group overflow-hidden position-relative\">\n                <input type=\"text\" class=\"form-control\" (keydown.enter)=\"$event.preventDefault()\"\n                  placeholder=\"Search Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\"\n                  #search [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone: true}\">\n                <button type=\"button\" class=\"btn btn-remove\" style=\"top: 4px;\" (click)=\"removeseacrch()\"\n                  [hidden]=\"searchText?.length == 0\"><i class=\"fa-solid fa-xmark\"></i>\n                </button>\n                <!-- [hidden]=\"stext.length == 0\" -->\n                <div>\n                  <div\n                    *ngIf=\"submitted && formValid['country'].invalid || formValid['country'].invalid && (formValid['country'].dirty || formValid['country'].touched)\"\n                    class=\"ng-dirty\">\n                    <span *ngIf=\"formValid['country'].errors\">\n                      <span class=\"error\">This element is required, please</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n            <div class=\"col-md-12\">\n              <!-- <p> {{this.branchForm.get('longitude')?.value}}, {{this.branchForm.get('latitude')?.value}} </p>\n              <p> {{lng}} - {{lat}} </p> -->\n              <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [disableDefaultUI]=\"true\" [zoomControl]=\"true\"\n                [fullscreenControl]=\"true\">\n                <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [markerDraggable]=\"true\"\n                  (dragEnd)=\"markerDragEnd($event)\">\n                  <!-- [label]=\"m.label\" [markerDraggable]=\"m.draggable\" (dragEnd)=\"markerDragEnd(m, $event)\" -->\n                  <agm-info-window>\n                    <div> <strong> My Current Location </strong></div>\n                  </agm-info-window>\n                </agm-marker>\n              </agm-map>\n\n              <br>\n            </div>\n\n            <div class=\"col-md-6\" hidden>\n              <div class=\"form-group\">\n                <label>longitude </label>\n                <input formControlName=\"longitude\" name=\"longitude\" type=\"text\" class=\"form-control\"\n                  placeholder=\"longitude\" required>\n                <div\n                  *ngIf=\"formValid['longitude'].invalid && (formValid['longitude'].dirty || formValid['longitude'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['longitude'].errors\">\n                    <span class=\"error\"> longitude is required.</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\" hidden>\n              <div class=\"form-group\">\n                <label>latitude </label>\n                <input formControlName=\"latitude\" name=\"latitude\" type=\"text\" class=\"form-control\"\n                  placeholder=\"latitude\" required>\n                <div\n                  *ngIf=\"formValid['latitude'].invalid && (formValid['latitude'].dirty || formValid['latitude'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['latitude'].errors\">\n                    <span class=\"error\"> latitude is required.</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label>Country </label>\n                <input formControlName=\"country\" name=\"country\" type=\"text\" class=\"form-control\" placeholder=\"\"\n                  required>\n                <!-- <div *ngIf=\"submitted && formValid['country'].errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"formValid['country'].errors['required']\">country is required</div>\n                </div> -->\n                <!-- <div\n                  *ngIf=\"submitted && formValid['country'].invalid || formValid['country'].invalid && (formValid['country'].dirty || formValid['country'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['country'].errors\">\n                    <span class=\"error\"> Country is required.</span>\n                  </span>\n                </div> -->\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label> City </label>\n                <input formControlName=\"city\" name=\"city\" type=\"text\" class=\"form-control\" placeholder=\"\">\n                <!-- <div\n                  *ngIf=\"submitted && formValid['city'].invalid || formValid['city'].invalid && (formValid['city'].dirty || formValid['city'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['city'].errors\">\n                    <span class=\"error\"> City is required.</span>\n                  </span>\n                </div> -->\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label>Area </label>\n                <input formControlName=\"branchArea\" name=\"branchArea\" type=\"text\" class=\"form-control\" placeholder=\"\">\n                <!-- <div\n                  *ngIf=\"submitted && formValid['branchArea'].invalid || formValid['branchArea'].invalid && (formValid['branchArea'].dirty || formValid['branchArea'].touched)\"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['branchArea'].errors\">\n                    <span class=\"error\"> Area is required.</span>\n                  </span>\n                </div> -->\n              </div>\n            </div>\n\n\n          </div>\n        </div>\n\n        <div class=\"page-title\">\n          <h3>Working Hours</h3>\n        </div>\n        <div class=\"card-form whour overflow-hidden position-relative\">\n          <div class=\"overlay-wh\" *ngIf=\"!isShowWorkingHours && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editWorkingHours()\" [disabled]=\"branchForm.invalid\">\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowWorkingHours\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isShowWorkingHours\" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isShowWorkingHours\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"\">\n            <div class=\"form-check mb-2\">\n              <!-- <label class=\"form-check-label\" for=\"flexCheckDefault\"> Apply All </label> -->\n              <!-- <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" (change)=\"applyAllTime()\"> -->\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <div class=\"day-active mt-0 mb-2\">\n                  <h6> Days </h6>\n                </div>\n              </div>\n              <div class=\"col-md-4\">\n                <h6 class=\"px-2 mb-2\"> Hours</h6>\n              </div>\n              <div class=\"col-md-4\">\n              </div>\n            </div>\n            <div formArrayName=\"branchWorkingHours\" *ngFor=\"let item of branchWorkingHours.controls; let i=index\">\n              <div class=\"row\" [formGroupName]=\"i\">\n                <div class=\"col-sm-4\">\n                  <div class=\"form-group day-active\">\n                    <!-- [value]=\"item.value.fromTime ? true : false\" -->\n                    <!-- [checked]=\"item.value.fromTime\" -->\n                    <div class=\"form-check form-switch justify-content-between\">\n                      <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"\n                        formControlName=\"isActive\" [disabled]=\"isEdit == false\"\n                        (change)=\"chooseTime(item.value.isActive,i)\">\n                      <label for=\"\"> {{item.value.dayName}} </label>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-sm-4\">\n                  <div class=\"\">\n                    <div class=\"from-to-time\">\n                      <p> From </p>\n                      <!-- [readonly]=\"isEdit == false\"  -->\n                      <input type=\"time\" formControlName=\"fromTime\" name=\"fromTime\" class=\"form-control\" placeholder=\"\"\n                        [disabled]=\"item.value.isActive == false ? true : false\">\n                    </div>\n                    <!-- [disabled]=\"item.value.isActive == false ? true : false\" -->\n                  </div>\n                </div>\n                <div class=\"col-sm-4\">\n                  <div class=\"\">\n                    <div class=\"from-to-time\">\n                      <p> To </p>\n                      <!-- [readonly]=\"isEdit == false\" -->\n                      <!-- item.value.isActive ? true : false  -->\n                      <input type=\"time\" formControlName=\"toTime\" name=\"toTime\" class=\"form-control \" placeholder=\"\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div class=\"page-title\">\n          <h3>Branch Admin</h3>\n        </div>\n        <div class=\"card-form position-relative\">\n          <div class=\"overlay-ba\" *ngIf=\"!isShowBranchAdmin && isEdit\"></div>\n          <div class=\"edit-btn float-end\" *ngIf=\"isEdit\">\n            <button class=\"btn\" type=\"button\" (click)=\"editBranchAdmin()\" [disabled]=\"branchForm.invalid\">\n              <!-- <i class=\"fa-solid fa-pen\" *ngIf=\"isShowBranchAdmin\"></i> -->\n              <img src=\"assets/images/save.png\" *ngIf=\"isShowBranchAdmin\" class=\"save-img\" alt=\"\">\n              <img src=\"assets/images/edit.png\" *ngIf=\"!isShowBranchAdmin\" alt=\"\">\n            </button>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label>Branch Admin</label>\n                <ng-select name=\"adminUser\" id=\"adminUser\" placeholder=\"Type name\" [items]=\"branchAdmin\"\n                  bindLabel=\"fullName\" bindValue=\"userId\" formControlName=\"adminUser\">\n                </ng-select>\n                <div\n                  *ngIf=\" formValid['adminUser'].invalid  && (formValid['adminUser'].dirty || formValid['adminUser'].touched )   \"\n                  class=\"ng-dirty\">\n                  <span *ngIf=\"formValid['adminUser'].errors\">\n                    <span class=\"error\">This element is required, please fill</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <!-- [hidden]=\"isEdit == false\" -->\n          <div class=\"col-md-2\"></div>\n          <div class=\"col-md-8\">\n            <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"msgBranchNAme\">\n              {{msgBranchNAme}}\n            </div> -->\n            <!-- <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"messageSuccess\">\n              {{messageSuccess}}\n            </div> -->\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorsList\">\n              <ul>\n                <li *ngFor=\"let item of errorsList\">{{item.ErrorMessageEn}} </li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"btns-group\">\n            </div>\n            <div class=\"btns-group\">\n              <button type=\"button\" class=\"btn btn-cancel\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-save\" *ngIf=\"isEdit\" (click)=\"chickForEdit()\"> Save</button>\n              <button type=\"submit\" class=\"btn btn-save\" *ngIf=\"!isLoading && !isEdit\"> Add</button>\n              <button type=\"button\" class=\"btn btn-save btn-load\" *ngIf=\"isLoading\" disabled><i\n                  class=\"fa-solid fa-circle-notch fa-spin\"></i></button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <div class=\"btns-group\">\n  <button type=\"button\" class=\"btn btn-cancel\">Cancel</button>\n  <button type=\"submit\" class=\"btn btn-save\" *ngIf=\"!isLoading\"> {{!isEdit ? 'Add' : 'Save'}} </button>\n  <button type=\"button\" class=\"btn btn-save btn-load\" *ngIf=\"isLoading\" disabled><i class=\"fa-solid fa-circle-notch fa-spin\"></i></button>\n</div> -->\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddBranchComponent } from './add-branch/add-branch.component';\nimport { BranchesComponent } from './branches.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BranchesComponent,\n    children: [],\n  },\n  { path: 'addbranch', component: AddBranchComponent },\n  { path: 'viewbranch/:id', component: AddBranchComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BranchesRoutingModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'underscore';\nimport { HeaderService } from '../../../../services/header.service';\nimport { BranchService } from './services/branch.service';\n\n@Component({\n  selector: 'app-branches',\n  templateUrl: './branches.component.html',\n  styleUrls: ['./branches.component.scss'],\n})\nexport class BranchesComponent implements OnInit {\n  branches!: any[];\n  totalRecords!: number;\n  totalPages!: number;\n  errorMessage: any;\n  totalAllRecordsCount: number;\n  totalRecordsCount:number\n  searchText: string = '';\n  sort: number = 1;\n  branchTypes: any = [];\n  branchId: number = 3001;\n  typeName: string = 'Showroom Branches';\n  pageNo: number = 0;\n  pagin!: number;\n  pages!: number[];\n  @Output() titleOfPage = new EventEmitter<string>();\n\n  constructor(\n    private branchService: BranchService,\n    private router: Router,\n    public headerService: HeaderService\n  ) {}\n\n  ngOnInit(): void {\n    this.headerService.setTitle('Branches');\n\n    this.getBranches();\n    this.getBranchTypes();\n  }\n  addbranch() {\n    this.router.navigateByUrl('/branches/addbranch');\n    this.headerService.setTitle('Branches > Add branch');\n    // this.titleOfPage.emit('Branches > Add branch');\n  }\n  Viewbranch() {\n    // this.router.navigateByUrl('/addbranch');\n    this.headerService.setTitle('Branches > View branch');\n    // this.titleOfPage.emit('Branches > Add branch');\n    // view-branch/{{item.branchId}}\n  }\n  chooseBranch(item: any) {\n    this.branchId = item.id;\n    this.typeName = item.name[0].lookupName;\n    this.pageNo = 0;\n    this.searchText = '';\n\n    this.getBranches();\n  }\n  getBranches() {\n    return this.branchService\n      .getBranches(this.searchText, this.branchId, this.sort, this.pageNo)\n      .subscribe((response: any) => {\n        if (response) {\n          this.branches = response.data;\n          this.totalAllRecordsCount = response.info?.totalAllRecordsCount;\n          this.totalRecordsCount = response.info?.totalRecordsCount;\n\n          this.totalRecords = response.info?.totalRecordsCount;\n          this.pagin = Math.ceil(this.totalRecords / 6);\n          this.pages = _.range(this.pagin);\n          console.log(this.pagin);\n          console.log(this.pages);\n        }\n      });\n  }\n  searchRoles(event: any) {\n    console.log(event?.target.value);\n    const text = event.target.value;\n    console.log(text.length);\n    if (text.length >= 3) {\n      this.searchText = text;\n      this.pageNo = 0;\n\n      this.getBranches();\n    }\n    if (text.length == 0) {\n      this.getBranches();\n    }\n  }\n  removeSearch() {\n    this.searchText = '';\n    this.sort = 1;\n    this.getBranches();\n  }\n\n  sortByBranchName() {\n    if (this.sort == 3) {\n      this.sort = 1;\n    } else {\n      this.sort = this.sort == 2 ? 3 : 2;\n    }\n    this.getBranches();\n  }\n  sortByLocation() {\n    if (this.sort == 5) {\n      this.sort = 1;\n    } else {\n      this.sort = this.sort == 4 ? 5 : 4;\n    }\n    this.getBranches();\n  }\n  sortByActivation() {\n    this.sort = this.sort == 6 ? 7 : 6;\n    this.getBranches();\n  }\n\n  setPage(page: number) {\n    this.pageNo = page;\n    this.getBranches();\n    window.scroll(0, 0);\n  }\n\n  getBranchTypes() {\n    this.branchService.getLookupsById(3).subscribe(\n      (response: any) => {\n        this.branchTypes = response.data;\n      },\n      (error) => {\n        this.errorMessage = error.message;\n      }\n    );\n  }\n}\n","<!-- <h4>Roles</h4> -->\n<div class=\"card-page\">\n\n  <div class=\"row\">\n    <div class=\"col-md-9\">\n      <div class=\"branchesTypes\">\n        <button class=\"btn\" *ngFor=\" let item of branchTypes; let i = index\" [class.active]=\"item.id == branchId\"\n          (click)=\"chooseBranch(item)\"> {{item.name[0].lookupName}}</button>\n      </div>\n    </div>\n\n    <div class=\"col-md-3\">\n      <p class=\"branch-total\"> Branches Total No. {{totalAllRecordsCount}} </p>\n    </div>\n    <div class=\"col-md-5\">\n      <div class=\"input-group search-box\">\n        <button class=\"btn\" type=\"button\" id=\"button-addon1\" (click)=\"removeSearch()\"><i\n            class=\"fa-solid fa-search\"></i></button>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchText\"\n          (keyup)=\"searchRoles($event)\">\n        <button class=\"btn\" type=\"button\" id=\"button-addon1\" (click)=\"removeSearch()\"\n          [hidden]=\"searchText.length == 0\"><i class=\"fa-solid fa-xmark\"></i></button>\n      </div>\n    </div>\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-5 d-flex justify-content-end btnadd\">\n      <button (click)=\"addbranch()\" class=\"btn btn-add\"> <img src=\"assets/images/plus.png\" alt=\"\"> Add Branch\n      </button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\" *ngIf=\"branches; let branches; else: loading \">\n      <div class=\"card-table\">\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\"> <button class=\"btn\" [disabled]=\"branches?.length == 0\" (click)=\"sortByBranchName()\">\n                    {{typeName}}\n                    <i class=\"fa-solid fa-arrow-up-long\" [class.active]=\"sort == 2\"></i>\n                    <i class=\"fa-solid fa-arrow-down-long\" [class.active]=\"sort == 3\"></i>\n                  </button></th>\n                <th scope=\"col\"> <button class=\"btn\" [disabled]=\"branches?.length == 0\" (click)=\"sortByLocation()\">\n                    Location\n                    <i class=\"fa-solid fa-arrow-up-long\" [class.active]=\"sort == 4\"></i>\n                    <i class=\"fa-solid fa-arrow-down-long\" [class.active]=\"sort == 5\"></i>\n                  </button></th>\n                <th scope=\"col\"> <button class=\"btn\"> Email </button></th>\n                <th scope=\"col\"> <button class=\"btn\"> Phone </button></th>\n                <th scope=\"col\"> <button class=\"btn\"> Activation </button></th>\n                <th scope=\"col\"> <button class=\"btn\"> Action </button></th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of branches\">\n                <td scope=\"row\">{{item.branchName}}</td>\n                <!-- {{item.country}}  -->\n                <td> {{item.city}} , {{item.branchArea}}</td>\n                <td> {{item.email}} </td>\n                <td> {{item.phone}} </td>\n                <td>\n                  <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\"\n                      [checked]=\"item.status == '2001'\" readonly disabled>\n                    <label class=\"form-check-label\" for=\"flexSwitchCheckChecked\"></label>\n                  </div>\n                </td>\n                <td> <a class=\"btn btn-view\" (click)=\"Viewbranch()\" routerLink=\"/branches/viewbranch/{{item.branchId}}\">\n                    View details </a> </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"branches?.length == 0\">\n          <app-not-found></app-not-found>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <ng-template #loading>\n        <div>\n          <app-loading></app-loading>\n        </div>\n      </ng-template>\n    </div>\n    <div class=\"col-md-6\" [hidden]=\"branches?.length == 0\">\n      <h6 class=\"showing\"> Showing <span> {{( pageNo + 1 ) * 6 - 5}} - {{ branches?.length == 6 ? (( pageNo + 1 ) * 6 ):\n          totalRecords }} </span>\n        from <span> {{totalRecords}} </span> data\n      </h6>\n    </div>\n    <div class=\"col-md-6 \" [hidden]=\"totalRecordsCount < 7\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" *ngFor=\"let page of pages\">\n          <button class=\"page-link\" (click)=\"setPage(page)\" [ngClass]=\"{ active: pageNo === page }\"\n            [disabled]=\"pageNo === page\">\n            {{ page + 1 }}\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BranchesRoutingModule } from './branches-routing.module';\nimport { BranchesComponent } from './branches.component';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { AddBranchComponent } from './add-branch/add-branch.component';\n\n\n@NgModule({\n  declarations: [\n    BranchesComponent,AddBranchComponent\n  ],\n  imports: [\n    CommonModule,\n    BranchesRoutingModule,\n    SharedModule\n  ]\n})\nexport class BranchesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SharedService } from '../../../../../services/shared.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BranchService {\n  // apiUrl: string =\n  //   'https://markazia-pos.azurewebsites.net/POSAPI/api/Branches/GetBranches';\n  // url = 'https://markazia-pos.azurewebsites.net/POSAPI/api/Branches/AddBranch';\n\n  apiUrl = this.sharedService.getUrl;\n  constructor(private http: HttpClient, public sharedService: SharedService) {}\n\n  getBranches(\n    searchText: string,\n    branchId: number,\n    sort: number,\n    pageNo: number\n  ): Observable<any[]> {\n    return this.http.get<any[]>(\n      this.apiUrl +\n        `Branches/GetBranches?Search=${searchText}&BranchTypeId=${branchId}&Sort=${sort}&PageNo=${pageNo}&PageSize=6`,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  addBranch(branch: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Branches/AddBranch',\n      branch,\n      this.sharedService.getHeaders()\n    );\n  }\n  updateBranch(branch: any): Observable<any> {\n    return this.http.post<any>(\n      this.apiUrl + 'Branches/UpdateBranch',\n      branch,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  getBranchDetails(id: number) {\n    return this.http.get(\n      this.apiUrl + `Branches/GetBranchDetails?branchId=${id}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getUsers() {\n    return this.http.get(\n      this.apiUrl + 'User/GetUsers?sort=2&Status=2001&&Invitation=2004PageSize=100',\n      this.sharedService.getHeaders()\n    );\n  }\n  getLookupsById(id: any) {\n    return this.http.get(\n      this.apiUrl + 'Lookups/GetLookups?lookupTypeId=' + id,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  getAddressBylangLat(lat, lang) {\n    return this.http.get(\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lang}&key=AIzaSyAAQ7GPIxJs5PTBccmO9OZwBUy464p59bY`\n    );\n  }\n}\n"],"names":["Validators","ModalDoneComponent","ModalConfirmComponent","i0","AddBranchComponent","markerDragEnd","$event","console","log","coords","lat","lng","getAddressBylangLat","branchForm","get","setValue","toString","constructor","branchService","toastr","fb","httpserviceService","mapsAPILoader","ngZone","router","route","modalService","headerService","config","backdrop","keyboard","ngOnInit","searchElementRef","branchId","snapshot","params","isEdit","setTitle","navigator","geolocation","getCurrentPosition","pos","longitude","latitude","getFormData","load","then","autocomplete","google","maps","places","Autocomplete","nativeElement","addListener","run","place","getPlace","locationData","address_components","reverse","formatted_address","long_name","geometry","location","zoom","undefined","getBranchTypes","getBranchAdmin","getWorkingHours","getBranchDetails","pageType","group","branchName","phone","email","country","city","branchArea","address","status","adminUser","branchTypes","required","branchWorkingHours","array","addBranchWorkingHours","dayId","dayName","fromTime","toTime","isActive","chooseTime","value","i","enable","patchValue","disable","chooseStatus","isStatus","formValid","controls","onSubmit","branchTypesAry","submitted","trim","invalid","window","scroll","addBranch","updateBranch","isLoading","subscribe","response","isSuccess","modalRef","open","componentInstance","name","errorsList","Errors","errors","setTimeout","error","errorMessage","statusText","isShowBranchAdmin","isShowBranchInfo","isShowWorkingHours","toEdit","branchDetails","data","userId","branchType","forEach","item","push","branchTypeId","r","length","removeAt","w","day","lookupName","selectBranchType","includes","splice","indexOf","getLookupsById","message","id","description","getUsers","branchAdmin","lang","locationDetails","results","listData","editBranchInfo","semdToConfirm","result","dismissAll","sendToClose","editWorkingHours","chickForEdit","applyAllTime","editBranchAdmin","numberOnly","event","charCode","which","keyCode","removeBranchName","removeemail","removephone","removeseacrch","searchText","checkSpecialChar","e","k","document","all","selectors","viewQuery","ctx","RouterModule","BranchesComponent","routes","path","component","children","BranchesRoutingModule","forChild","imports","exports","EventEmitter","_","getBranches","addbranch","navigateByUrl","Viewbranch","chooseBranch","typeName","pageNo","sort","branches","totalAllRecordsCount","info","totalRecordsCount","totalRecords","pagin","Math","ceil","pages","range","searchRoles","target","text","removeSearch","sortByBranchName","sortByLocation","sortByActivation","setPage","page","outputs","titleOfPage","decls","vars","consts","template","CommonModule","SharedModule","BranchesModule","declarations","BranchService","http","sharedService","getUrl","apiUrl","getHeaders","branch","post","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}