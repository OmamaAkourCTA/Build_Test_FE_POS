{"version":3,"file":"default-src_app_dashboard_modules_treasury_transactions-history_transaction-history-services_-bfddf7.js","mappings":";;;;;;;;;;;;;;;;;;;AAQM,MAAOA,yBAAyB;EAEpCC,YAAoBC,IAAgB,EAASC,aAA4B;IAArD,SAAI,GAAJD,IAAI;IAAqB,kBAAa,GAAbC,aAAa;IAD1D,WAAM,GAAG,IAAI,CAACA,aAAa,CAACC,MAAM;EAC2C;EAE7EC,yBAAyB,CACvBC,UAAkB,EAClBC,SAAiB,EACjBC,IAAY,EACZC,MAAc,EACdC,QAAiB,EACjBC,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBC,SAAkB,EAClBC,OAAgB;IAEhB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,8CAA8CZ,UAAU,cAAcC,SAAS,SAASC,IAAI,WAAWC,MAAM,iCAAiCC,QAAQ,GAAGA,QAAQ,GAAG,EACpK,aAAaC,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU,cAAcC,QAAQ,aAAaC,SAAS,WAAWC,OAAO,EAAE,EAE3I,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;;;EAGAC,WAAW,CAACC,KAAM;IAChB,IAAIC,GAAG,GAAG,oCAAoC;IAC9C,IAAID,KAAK,EAAE;MACTC,GAAG,IAAID,KAAK;;IAEd,OAAO,IAAI,CAACnB,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAGI,GAAG,EAEjB,IAAI,CAACnB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;;;EAGAI,eAAe,CAACF,KAAM;IACpB,IAAIC,GAAG,GAAG,mCAAmC;IAC7C,IAAID,KAAK,EAAE;MACTC,GAAG,IAAID,KAAK;;IAEd,OAAO,IAAI,CAACnB,IAAI,CAACe,GAAG,CAAM,IAAI,CAACC,MAAM,GAAGI,GAAG,EACzC,IAAI,CAACnB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;;;EAGAK,WAAW,CAACH,KAAM;IAChB,IAAIC,GAAG,GAAG,yCAAyC;IACnD,IAAID,KAAK,EAAE;MACTC,GAAG,IAAID,KAAK;;IAEd,OAAO,IAAI,CAACnB,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAGI,GAAG,EAEjB,IAAI,CAACnB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;;;EAGAM,YAAY,CAACJ,KAAM;IACjB,IAAIC,GAAG,GAAG,oDAAoD;IAC9D,IAAID,KAAK,EAAE;MACTC,GAAG,IAAID,KAAK;;IAEd,OAAO,IAAI,CAACnB,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAGI,GAAG,EACjB,IAAI,CAACnB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA;;;EAGAO,kBAAkB;IAChB,OAAO,IAAI,CAACxB,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,8BAA8B,EAE5C,IAAI,CAACf,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAQ,8BAA8B,CAACC,YAAY;IACzC,OAAO,IAAI,CAAC1B,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,wDAAwDU,YAAY,EAAE,EAEpF,IAAI,CAACzB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAU,kCAAkC,CAACD,YAAY;IAC7C,OAAO,IAAI,CAAC1B,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,6DAA6DU,YAAY,EAAE,EAEzF,IAAI,CAACzB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAW,kCAAkC,CAACF,YAAY;IAC7C,OAAO,IAAI,CAAC1B,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,4DAA4DU,YAAY,EAAE,EAExF,IAAI,CAACzB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAY,2BAA2B,CAACH,YAAY;IACtC,OAAO,IAAI,CAAC1B,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,sDAAsDU,YAAY,EAAE,EAElF,IAAI,CAACzB,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA;;;EAIAa,0BAA0B,CACxB1B,UAAkB,EAClBE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBtB,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAEhB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,iDAAiDZ,UAAU,aAAa2B,cAAc,SAASzB,IAAI,WAAWC,MAAM,8BAA8ByB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU,wBAAwBC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EACpT,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAE7C,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAgB,2BAA2B,CACzB7B,UAAkB,EAClB8B,SAAiB,EACjB5B,IAAY,EACZC,MAAc,EACdE,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAGhB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,kEAAkE,IAAI,CAACf,aAAa,CAACkC,WAAW,CAACC,WAAW,EAAEC,EAAE,WAAWjC,UAAU,SAASE,IAAI,WAAWC,MAAM;qBACpJyB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU,cAAcuB,SAAS,gBAAgBtB,QAAQ,qBAAqBC,SAAS,GAAGA,SAAS,GAAG,EAC9L,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAE7C,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAqB,4BAA4B,CAACC,UAAU,EAAEC,UAAU,EAAEN,SAAS;IAC5D,OAAO,IAAI,CAAClC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,sEAAsEuB,UAAU,eAAeC,UAAU,eAAeN,SAAS,EAAE,EACnI,IAAI,CAACjC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAwB,+BAA+B,CAACC,aAAa,EAAEF,UAAU,EAAEN,SAAS;IAClE,IAAIS,QAAQ,GAAG,yEAAyED,aAAa,eAAeF,UAAU,eAAeN,SAAS,EAAE;IACxJ,OAAO,IAAI,CAAClC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG2B,QAAQ,EACtB,IAAI,CAAC1C,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA2B,uBAAuB,CAACP,EAAE;IACxB,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,2DAA2DqB,EAAE,EAAE,EAE/D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EAEA4B,wCAAwC,CAACR,EAAE;IACzC,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,kEAAkEqB,EAAE,EAAE,EAEtE,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA6B,4BAA4B,CAACT,EAAE;IAC7B,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,sDAAsDqB,EAAE,EAAE,EAE1D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA;EACA8B,0BAA0B,CAAC3C,UAAkB,EAC3CE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBtB,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAChB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,gDAAgDe,cAAc,SAASzB,IAAI,WAAWC,MAAM;wBAC1EyB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU;6BAC9EC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EAAE,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAC7H,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA;EACA+B,6BAA6B,CAAC5C,UAAkB,EAC9CE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBtB,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAChB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,iDAAiDZ,UAAU,aAAa2B,cAAc,SAASzB,IAAI,WAAWC,MAAM;wBAClGyB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU;6BAC9EC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EAAE,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAC7H,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAgC,iCAAiC,CAACZ,EAAE;IAClC,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,2DAA2DqB,EAAE,EAAE,EAE/D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAiC,4BAA4B,CAAC9C,UAAkB,EAC7CE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBoB,aAAsB,EACtB1C,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAChB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,kDAAkDZ,UAAU,aAAa2B,cAAc,kBAAkBoB,aAAa,SAAS7C,IAAI,WAAWC,MAAM;wBAClIyB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU;6BAC9EC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EAAE,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAC7H,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAmC,qBAAqB,CAAChD,UAAkB,EACtCE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBoB,aAAsB,EACtB1C,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAChB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,2CAA2CZ,UAAU,aAAa2B,cAAc,kBAAkBoB,aAAa,SAAS7C,IAAI,WAAWC,MAAM;wBAC3HyB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU;6BAC9EC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EAAE,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAC7H,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAoC,0BAA0B,CAACC,MAAM;IAC/B,OAAO,IAAI,CAACtD,IAAI,CAACe,GAAG,CAAM,IAAI,CAACC,MAAM,GAAG,sCAAsCsC,MAAM,EAAE,EAAE,IAAI,CAACrD,aAAa,CAACgB,UAAU,EAAE,CAAC;EAC1H;EACAsC,sBAAsB,CAACD,MAAM;IAC3B,OAAO,IAAI,CAACtD,IAAI,CAACe,GAAG,CAAM,IAAI,CAACC,MAAM,GAAG,kCAAkCsC,MAAM,EAAE,EAAE,IAAI,CAACrD,aAAa,CAACgB,UAAU,EAAE,CAAC;EACtH;EACAuC,iCAAiC,CAAC9B,YAAY;IAC5C,OAAO,IAAI,CAAC1B,IAAI,CAACe,GAAG,CAAM,IAAI,CAACC,MAAM,GAAG,2DAA2DU,YAAY,EAAE,EAAE,IAAI,CAACzB,aAAa,CAACgB,UAAU,EAAE,CAAC;EACrJ;EACAwC,gCAAgC,CAACpB,EAAE;IACjC,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,0DAA0DqB,EAAE,EAAE,EAC9D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACAyC,mCAAmC,CAACrB,EAAE;IACpC,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,8DAA8DqB,EAAE,EAAE,EAClE,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA0C,2CAA2C,CAACtB,EAAE;IAC5C,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,qEAAqEqB,EAAE,EAAE,EACzE,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA2C,+BAA+B,CAACvB,EAAE;IAChC,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,2DAA2DqB,EAAE,EAAE,EAC/D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA;;;EAIA4C,0BAA0B,CACxBC,QAAiB,EACjB1D,UAAkB,EAClBE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBtB,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAEhB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,0CAA0C8C,QAAQ,aAAa1D,UAAU,aAAa2B,cAAc,SAASzB,IAAI,WAAWC,MAAM,8BAA8ByB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU,wBAAwBC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EAClU,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAE7C,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EACA8C,uBAAuB,CAAC1B,EAAE;IACxB,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,sDAAsDqB,EAAE,EAAE,EAExE,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EAEA+C,qBAAqB,CAAC3B,EAAE,EAAE9B,MAAM;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,oEAAoEqB,EAAE,WAAW9B,MAAM,aAAa,EAEpG,IAAI,CAACN,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EAEAgD,sBAAsB,CAAC5B,EAAE,EAAE9B,MAAM;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,gEAAgEqB,EAAE,WAAW9B,MAAM,aAAa,EAEhG,IAAI,CAACN,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EAEAiD,sBAAsB,CAAC7B,EAAE,EAAE9B,MAAM;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,iEAAiEqB,EAAE,WAAW9B,MAAM,aAAa,EAEjG,IAAI,CAACN,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EACA;EACAkD,wCAAwC,CAAC9B,EAAE;IACzC,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,uDAAuDqB,EAAE,EAAE,EAEzE,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EAEA;;;EAIAmD,uBAAuB,CACrBC,OAAc,EACdP,QAAiB,EACjB1D,UAAkB,EAClBE,IAAY,EACZC,MAAc,EACdwB,cAAuB,EACvBtB,QAAiB,EACjBC,YAAqB,EACrBC,UAAmB,EACnBC,QAAiB,EACjBoB,QAAiB,EACjBnB,SAAkB,EAClBC,OAAgB;IAEhB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,6CAA6CqD,OAAO,WAAWP,QAAQ,aAAa1D,UAAU,aAAa2B,cAAc,SAASzB,IAAI,WAAWC,MAAM,8BAA8ByB,QAAQ,aAAavB,QAAQ,iBAAiBC,YAAY,eAAeC,UAAU,wBAAwBC,QAAQ,uBAAuBC,SAAS,GAAGA,SAAS,GAAG,EACvV,qBAAqBC,OAAO,GAAGA,OAAO,GAAG,EAAE,EAAE,EAE7C,IAAI,CAACb,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EACAqD,mBAAmB,CAACjC,EAAE;IACpB,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,wDAAwDqB,EAAE,EAAE,EAE5D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EAEAsD,UAAU,CAAClC,EAAE,EAAE9B,MAAM;IACnB,OAAO,IAAI,CAACP,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,mFAAmFqB,EAAE,WAAW9B,MAAM,aAAa,EAEnH,IAAI,CAACN,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;EAEA;EACAuD,2BAA2B,CAACnC,EAAE;IAC5B,OAAO,IAAI,CAACrC,IAAI,CAACe,GAAG,CAClB,IAAI,CAACC,MAAM,GACX,yDAAyDqB,EAAE,EAAE,EAE7D,IAAI,CAACpC,aAAa,CAACgB,UAAU,EAAE,CAChC;EACH;;AAtdWnB,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;SAAzBA,yBAAyB;EAAA2E,SAAzB3E,yBAAyB;EAAA4E,YAFxB;AAAM","sources":["./src/app/dashboard/modules/treasury/transactions-history/transaction-history-services/transaction-history.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SharedService } from 'src/app/services/shared.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransactionHistoryService {\n  apiUrl = this.sharedService.getUrl;\n  constructor(private http: HttpClient, public sharedService: SharedService) { }\n\n  GetTreasuryExpensesReport(\n    searchText: string,\n    expenseId: string,\n    sort: number,\n    pageNo: number,\n    lookupId?: number,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    startDate?: string,\n    endDate?: string\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `PettyCash/GetTreasuryExpensesReport?Search=${searchText}&expenseId=${expenseId}&Sort=${sort}&PageNo=${pageNo}&PageSize=6&ExpenseCategoryId=${lookupId ? lookupId : ''\n      }&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}&CreatedBy=${employee}&fromDate=${startDate}&toDate=${endDate}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  /**\n   * get category\n   */\n  GetCategory(limit?): Observable<any> {\n    let URL = `Lookups/GetLookups?lookupTypeId=12`\n    if (limit) {\n      URL += limit;\n    }\n    return this.http.get<any>(\n      this.apiUrl + URL,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  /**\n   * register Name\n   */\n  GetRegisterName(limit?): Observable<any> {\n    let URL = `Register/GetRegisters?Status=2001`\n    if (limit) {\n      URL += limit;\n    }\n    return this.http.get<any>(this.apiUrl + URL,\n      this.sharedService.getHeaders()\n    );\n  }\n\n  /**\n   * Branches\n   */\n  GetBranches(limit?): Observable<any> {\n    let URL = `Branches/GetBranches?Status=2001&sort=1`\n    if (limit) {\n      URL += limit;\n    }\n    return this.http.get<any>(\n      this.apiUrl + URL,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  /**\n   * employees\n   */\n  GetEmployees(limit?): Observable<any> {\n    let URL = `User/GetUsers?RoleId=1&Status=2001&Invitation=2004`\n    if (limit) {\n      URL += limit;\n    }\n    return this.http.get<any>(\n      this.apiUrl + URL,\n      this.sharedService.getHeaders()\n    );\n  }\n  /**\n   * get Collected Amount\n   */\n  getCollectedAmount(): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GetCollectedAmounts`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getOrderCollectionPaymentTypes(collectionId): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GetOrderCollectionPaymentTypes?CollectionId=${collectionId}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getBankUnderTakenCollectionDetails(collectionId): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GettBankUnderTakenCollectionDetails?CollectionId=${collectionId}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getInhouseCollectionPaymentDetails(collectionId): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GetInhouseCollectionPaymentDetails?CollectionId=${collectionId}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getInhouseCollectionDetails(collectionId): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GettInhouseCollectionDetails?CollectionId=${collectionId}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  /**\n   * get Direct Payment List\n   */\n\n  GetDirectPaymentCollection(\n    searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetDirectPaymentCollections?CashCard=${searchText}&Customer=${CustomerSearch}&Sort=${sort}&PageNo=${pageNo}&PageSize=6&CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}&CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''\n      }&CollectionDateTo=${endDate ? endDate : ''}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getAllRegisterDirectDeposit(\n    searchText: string,\n    depositId: string,\n    sort: number,\n    pageNo: number,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string\n\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `AllocationOrdersService/GetAllRegisterDirectDeposit?registerId=${this.sharedService.getRegister.registerObj?.id}&search=${searchText}&Sort=${sort}&PageNo=${pageNo}&PageSize=6\n      &DepositType=${payments}&BranchId=${branches}&Registername=${registerName}&RegisterId=${registerNo}&DepositId=${depositId}&DepositedBy=${employee}&DepositeDateFrom=${startDate ? startDate : ''\n      }&DepositeDateFrom=${endDate ? endDate : ''}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getRegisterDirectCashDeposit(sageBankId, registerId, depositId): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `AllocationOrdersService/GetRegisterDirectCashDeposit?sageAccountID=${sageBankId}&registerId=${registerId}&DepositeId=${depositId}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getRegisterDirectDepositCheques(sageAccountID, registerId, depositId): Observable<any> {\n    let endPoint = `AllocationOrdersService/GetRegisterDirectDepositCheques?sageAccountID=${sageAccountID}&registerId=${registerId}&DepositeId=${depositId}`;\n    return this.http.get<any>(\n      this.apiUrl + endPoint,\n      this.sharedService.getHeaders()\n    );\n  }\n  getDirectPaymentDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetDirectPaymentCollectionDetails?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  // direct payment collection payment details\n\n  getDirectPaymentCollectionPaymentDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetDirectPaymentCollectionPaymentDetails?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getPNOrderCollectionPayments(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetPNOrderCollectionPayments?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  // Revenu\n  getOtherRevenueCollections(searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetOtherRevenueCollections?Customer=${CustomerSearch}&Sort=${sort}&PageNo=${pageNo}&PageSize=6\n      &CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}\n      &CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''}&CollectionDateTo=${endDate ? endDate : ''}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  // Revenu\n  getCustomerPaymentCollections(searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetCustomerPaymentCollections?Search=${searchText}&Customer=${CustomerSearch}&Sort=${sort}&PageNo=${pageNo}&PageSize=6\n      &CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}\n      &CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''}&CollectionDateTo=${endDate ? endDate : ''}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getOtherRevenueCollectionPayments(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetOtherRevenueCollectionPayments?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  getBankUnderTakenCollections(searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    invoiceNumber?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetBankUnderTakenCollections?cashCard=${searchText}&Customer=${CustomerSearch}&invoiceNumber=${invoiceNumber}&Sort=${sort}&PageNo=${pageNo}&PageSize=6\n      &CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}\n      &CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''}&CollectionDateTo=${endDate ? endDate : ''}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getInhouseCollections(searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    invoiceNumber?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetInhouseCollections?cashCard=${searchText}&Customer=${CustomerSearch}&invoiceNumber=${invoiceNumber}&Sort=${sort}&PageNo=${pageNo}&PageSize=6\n      &CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}\n      &CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''}&CollectionDateTo=${endDate ? endDate : ''}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getTransferFeesCollections(params) {\n    return this.http.get<any>(this.apiUrl + `Treasury/GetTransferFeesCollections${params}`, this.sharedService.getHeaders());\n  }\n  getPNOrdersCollections(params) {\n    return this.http.get<any>(this.apiUrl + `Treasury/GetPNOrdersCollections${params}`, this.sharedService.getHeaders());\n  }\n  getTransferFeesCollectionPayments(collectionId) {\n    return this.http.get<any>(this.apiUrl + `Treasury/GetTransferFeesCollectionPayments?CollectionId=${collectionId}`, this.sharedService.getHeaders());\n  }\n  getOtherRevenueCollectionDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetOtherRevenueCollectionDetails?CollectionId=${id}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getCustomerPaymentCollectionDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetCustomerPaymentCollectionPayments?CollectionId=${id}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getBanksUnderTakingCollectionPaymentDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetBanksUnderTakingCollectionPaymentDetails?CollectionId=${id}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  getCustomerPaymentsOrderDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `CustomerPayment/GetCustomerPaymentsOrderDetails?orderId=${id}`,\n      this.sharedService.getHeaders()\n    );\n  }\n  /**\n   * get Service Collection List\n   */\n\n  GetServiceCenterCollection(\n    returned: boolean,\n    searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetServicesCollections?return=${returned}&CashCard=${searchText}&Customer=${CustomerSearch}&Sort=${sort}&PageNo=${pageNo}&PageSize=6&CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}&CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''\n      }&CollectionDateTo=${endDate ? endDate : ''}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  // get direct payment details\n  getServiceCenterDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GetServicesCollectionDetails?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  //get service center parts\n\n  getServiceCenterParts(id, pageNo): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `SalesOrders/GetServicesSalesOrderSpareparts?servicesSalesOrderNo=${id}&PageNo=${pageNo}&PageSize=2`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  //get service center labour\n\n  getServiceCenterLabour(id, pageNo): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `SalesOrders/GetServicesSalesOrderLabors?servicesSalesOrderNo=${id}&PageNo=${pageNo}&PageSize=2`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  //get service center Sublet\n\n  getServiceCenterSublet(id, pageNo): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `SalesOrders/GetServicesSalesOrderSublets?servicesSalesOrderNo=${id}&PageNo=${pageNo}&PageSize=2`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n  //modal API payment\n  getServiceCenterCollectionPaymentDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl + `Treasury/GetServicesCollectionPayments?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  ////Spare Parts\n\n  /**\n   * get Service Collection List\n   */\n\n  GetSparePartsCollection(\n    orderNo:string,\n    returned: boolean,\n    searchText: string,\n    sort: number,\n    pageNo: number,\n    CustomerSearch?: string,\n    branches?: string,\n    registerName?: string,\n    registerNo?: string,\n    employee?: string,\n    payments?: string,\n    startDate?: string,\n    endDate?: string\n  ): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetSparePartsCollections?orderNo=${orderNo}&return=${returned}&CashCard=${searchText}&Customer=${CustomerSearch}&Sort=${sort}&PageNo=${pageNo}&PageSize=6&CollectionType=${payments}&Branches=${branches}&RegisterName=${registerName}&RegisterId=${registerNo}&CollectedByEmployee=${employee}&CollectionDateFrom=${startDate ? startDate : ''\n      }&CollectionDateTo=${endDate ? endDate : ''}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  // get spare parts details\n  getSparePartDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetSparePartscollectionDetails?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  //get sapre parts view table\n\n  getSPParts(id, pageNo): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `SalesOrders/GetSparePartsSalesOrderSpareparts?sparePartsSalesOrderOpportunityId=${id}&PageNo=${pageNo}&PageSize=2`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n\n  //modal API payment\n  getSparePartsPaymentDetails(id): Observable<any> {\n    return this.http.get<any>(\n      this.apiUrl +\n      `Treasury/GetSparePartsCollectionPayments?CollectionId=${id}`,\n\n      this.sharedService.getHeaders()\n    );\n  }\n}\n"],"names":["TransactionHistoryService","constructor","http","sharedService","getUrl","GetTreasuryExpensesReport","searchText","expenseId","sort","pageNo","lookupId","branches","registerName","registerNo","employee","startDate","endDate","get","apiUrl","getHeaders","GetCategory","limit","URL","GetRegisterName","GetBranches","GetEmployees","getCollectedAmount","getOrderCollectionPaymentTypes","collectionId","getBankUnderTakenCollectionDetails","getInhouseCollectionPaymentDetails","getInhouseCollectionDetails","GetDirectPaymentCollection","CustomerSearch","payments","getAllRegisterDirectDeposit","depositId","getRegister","registerObj","id","getRegisterDirectCashDeposit","sageBankId","registerId","getRegisterDirectDepositCheques","sageAccountID","endPoint","getDirectPaymentDetails","getDirectPaymentCollectionPaymentDetails","getPNOrderCollectionPayments","getOtherRevenueCollections","getCustomerPaymentCollections","getOtherRevenueCollectionPayments","getBankUnderTakenCollections","invoiceNumber","getInhouseCollections","getTransferFeesCollections","params","getPNOrdersCollections","getTransferFeesCollectionPayments","getOtherRevenueCollectionDetails","getCustomerPaymentCollectionDetails","getBanksUnderTakingCollectionPaymentDetails","getCustomerPaymentsOrderDetails","GetServiceCenterCollection","returned","getServiceCenterDetails","getServiceCenterParts","getServiceCenterLabour","getServiceCenterSublet","getServiceCenterCollectionPaymentDetails","GetSparePartsCollection","orderNo","getSparePartDetails","getSPParts","getSparePartsPaymentDetails","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}