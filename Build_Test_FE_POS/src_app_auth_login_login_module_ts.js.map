{"version":3,"file":"src_app_auth_login_login_module_ts.js","mappings":"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","sources":["./src/app/auth/login/login-routing.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.module.ts","./src/app/services/log.guard.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LogGuard } from '../../services/log.guard';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    canActivate: [LogGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpserviceService } from 'src/app/services/httpservice.service';\nimport { UtilityServiceService } from 'src/app/services/utility-service.service';\nimport { faUser, faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\nimport { HeaderService } from '../../services/header.service';\nimport { ConnectionService, ConnectionState } from 'ng-connection-service';\nimport { Subscription, tap } from 'rxjs';\nimport { GeneralService } from '../../services/general.service';\nimport { CommonService } from '../../services/common.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  itemForm: FormGroup;\n  formModel: any = {};\n  faUser = faUser;\n  faEye = faEye;\n  faEyeSlash = faEyeSlash;\n  IsshowPassword: boolean = false;\n  userInfo: any = {};\n\n  isLoading: boolean;\n\n  userData: any;\n  errorMessage: any;\n  rememberMe: boolean = false;\n  isRemembered: boolean = false;\n\n  // status!: string;\n  currentState!: ConnectionState;\n  subscription = new Subscription();\n  status = 'ONLINE';\n  isConnected = true;\n  register2;\n  token = '';\n  constructor(\n    private toastr: ToastrService,\n    private utlilitySerivce: UtilityServiceService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private httpserviceService: HttpserviceService,\n    public headerService: HeaderService,\n    private connectionService: ConnectionService,\n    private _generalService: GeneralService,\n    private _commonService: CommonService,\n    private _activeRoute: ActivatedRoute,\n  ) {\n    this.connectionService.monitor().subscribe((isConnected) => {\n      console.log(isConnected);\n      this.isConnected = isConnected.hasNetworkConnection;\n      if (this.isConnected) {\n        this.status = 'ONLINE';\n        console.log(this.status);\n      } else {\n        this.status = 'OFFLINE';\n        console.log(this.status);\n      }\n    });\n\n    this.itemForm = this.formBuilder.group({\n      identity: [this.formModel.identity, [Validators.required]],\n      password: [this.formModel.password, [Validators.required]],\n      rememberMe: [this.formModel.rememberMe],\n    });\n  }\n\n  ngOnInit(): void {\n    this.checkRememberMe();\n    // this.subscription.add(\n    //   this.connectionService.monitor(options).pipe(\n    //     tap((newState: ConnectionState) => {\n    //       this.currentState = newState;\n    //       if (this.currentState.hasNetworkConnection) {\n    //         this.status = 'ONLINE';\n    //       } else {\n    //         this.status = 'OFFLINE';\n    //       }\n    //     })\n    //   ).subscribe()\n    // );\n    this.getToken();\n  }\n  getToken() {\n    this._activeRoute.queryParams.subscribe(x => {\n      debugger\n      this.token = x['token'];\n      let redirectUrl = x['redirectUrl'];\n      if (this.token) {\n        localStorage.setItem('redirectUrl', redirectUrl);\n        let data = this._commonService.decodeToken(this.token);\n        sessionStorage.setItem('token', this.token);\n        console.log(data);\n        if (data?.Register2) {\n          this.register2 = JSON.parse(data.Register2);\n        }\n        this.getUserDetails(+data['nameid']);\n        this.getUserPermissions(+data['nameid']);\n      }\n    })\n  }\n  getUserPermissions(userId) {\n    this._generalService.getUserPermissions(userId).subscribe((response: any) => {\n\n      localStorage.setItem('permissions', JSON.stringify(response.data));\n    })\n  }\n  getUserDetails(userId) {\n    this._generalService.GetUserDetails(userId).subscribe((response: any) => {\n      this.userData = response.data;\n      console.log(this.userData);\n      localStorage.setItem('fullName', this.userData.fullName);\n      localStorage.setItem('city', this.userData.city);\n      localStorage.setItem('userid', this.userData.userId);\n      localStorage.setItem('role', JSON.stringify(this.userData.role));\n      localStorage.setItem('branch', JSON.stringify(this.userData.branch));\n      // this is new flow so in previous flow register data was saved in localstorage in this ways so that's why saving in that way.\n      if (this.register2) {\n        let register = {\n          registerObj: {\n            id: this.register2.Id,\n            registersName: this.register2.RegistersName,\n            registeBranch: {\n              branchId: this.register2.RegisteBranch.BranchId,\n              branchName: this.register2.RegisteBranch.BranchName,\n              city: this.register2.RegisteBranch.City\n            }\n          }\n        }\n        localStorage.setItem('register', JSON.stringify(register));\n      }\n      //localStorage.setItem('permissions', JSON.stringify(this.userData.permissions));\n      this.getUserMenu();\n    })\n  }\n  getUserMenu() {\n    this._generalService.GetUserMenuNew(17001).subscribe((response: any) => {\n      let userMenu: any[] = response?.data?.menu[0]?.items;\n      if (userMenu.length) {\n        for (let menu of userMenu) {\n          if (menu?.canClick) {\n            this._commonService.NavigateToRoute(menu?.url);\n            break;\n          }\n        }\n        let filterCanClick = userMenu.filter(x => x.canClick);\n        if (filterCanClick.length == 0) {\n          this._commonService.NavigateToRoute('no-menu');\n        }\n      }\n      else {\n        this._commonService.NavigateToRoute('no-menu');\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n  checkRememberMe() {\n    var isRemember = localStorage.getItem('rememberMe');\n    if (isRemember !== null) {\n      this.itemForm.controls['identity'].setValue(\n        localStorage.getItem('identity')\n      );\n      this.itemForm.controls['password'].setValue(\n        localStorage.getItem('password')\n      );\n      this.formModel.identity = localStorage.getItem('identity');\n      this.formModel.password = localStorage.getItem('password');\n      this.formModel.rememberMe = true;\n      this.rememberMe = true;\n      this.isRemembered = true;\n    }\n  }\n  showPassword() {\n    this.IsshowPassword = this.IsshowPassword == false ? true : false;\n  }\n  onLogin() {\n    if (this.itemForm.valid) {\n      if (this.status == 'ONLINE') {\n        this.userInfo = {};\n        this.isLoading = true;\n        this.httpserviceService.login(this.itemForm.value).subscribe(\n          (response: any) => {\n            this.userInfo = response;\n            this.userData = response.data;\n            console.log(this.userData);\n            if (this.userData) {\n              this.isLoading = false;\n              localStorage.setItem('fullName', this.userData.fullName);\n              localStorage.setItem('city', this.userData.city);\n              localStorage.setItem('userid', this.userData.id);\n              localStorage.setItem('role', JSON.stringify(this.userData.role));\n              localStorage.setItem('branch', JSON.stringify(this.userData.branch));\n              localStorage.setItem('register', JSON.stringify(this.userData.register));\n              localStorage.setItem('permissions', JSON.stringify(this.userData.permissions));\n              // localStorage.setItem('rememberMe', this.rememberMe.toString());\n              // localStorage.setItem('rememberMe', this.rememberMe.toString());\n              // localStorage.setItem('rememberMe', this.rememberMe.toString());\n\n              if (this.rememberMe == true) {\n                localStorage.setItem(\n                  'identity',\n                  this.itemForm.controls['identity'].value\n                );\n                localStorage.setItem(\n                  'password',\n                  this.itemForm.controls['password'].value\n                );\n                localStorage.setItem('rememberMe', this.rememberMe.toString());\n\n                localStorage.setItem('token', this.userData.token);\n              } else {\n                // sessionStorage.setItem('fullName', this.userInfo.data.fullName);\n                // sessionStorage.setItem('id', this.userInfo.data.id);\n                sessionStorage.setItem('token', this.userData.token);\n\n                // localStorage.removeItem('identity');\n                // localStorage.removeItem('password');\n                // localStorage.removeItem('rememberMe');\n              }\n              if (this.userData?.role?.roleId == 1) {\n                this.getUserMenu();\n                //this.router.navigateByUrl('/opening-register');\n              } else if (this.userData?.role?.roleId == 36) {\n                this.getUserMenu();\n                //this.router.navigateByUrl('/branches');\n              }\n              else if (this.userData?.role?.roleId == 37) {\n                this.getUserMenu();\n                //this.router.navigateByUrl('/');\n              }\n              else if (this.userData?.role?.roleId == 38) {\n                this.getUserMenu();\n                //this.router.navigateByUrl('/dashboard');\n              }\n            } else {\n              var response = this.userInfo.Errors[0];\n              this.errorMessage = response.ErrorMessageEn;\n              this.isLoading = false;\n            }\n          },\n          (error) => {\n            this.isLoading = false;\n            this.spinner.hide(), (this.errorMessage = error.error.errors[0].ErrorMessageEn);\n          }\n        );\n      } else {\n        this.errorMessage = 'Please check your connection, Network error';\n      }\n    } else {\n      this.itemForm.markAllAsTouched();\n    }\n  }\n  rememberMeClick($event: any) {\n    alert($event);\n  }\n}\n","<div class=\"page-login d-flex align-items-center justify-content-center\">\n  <i class=\"d-block fa-solid fa-circle-notch fa-spin primary-clr me-4\" style=\"font-size:80px\"></i>\n  <div *ngIf=\"token\" class=\"d-flex flex-column gap-2\">\n    <p class=\"fw-600 m-0\">Please wait.................loading your permissions.</p>\n  </div>\n  <div class=\"container-fluid px-0 mx-0 d-none\">\n    <div class=\"row px-0 mx-0\">\n      <div class=\"col-md-6 col-sm-12 px-0 mx-0\">\n        <div class=\"card-login\">\n          <img src=\"assets/images/markazia.png\" alt=\"logo\">\n          <div class=\"log-text\">\n            <p>Please fill your detail to access your account.</p>\n          </div>\n          <form [formGroup]=\"itemForm\" (ngSubmit)=\"onLogin()\">\n            <div class=\"form-group\">\n              <label>Email</label>\n              <div>\n                <!-- <fa-icon class=\"fa-regular\" [icon]=\"faUser\"></fa-icon> -->\n                <!-- <img class=\"uimg\" src=\"assets/images/user.png\" alt=\"\"> -->\n                <input type=\"text\" formControlName=\"identity\" [ngModel]=\"formModel.identity\"\n                       placeholder=\"example@markazia.jo\" class=\"form-control\" />\n                <div *ngIf=\"itemForm.controls['identity'].invalid && (itemForm.controls['identity'].dirty || itemForm.controls['identity'].touched)\"\n                     class=\"ng-dirty\">\n                  <span *ngIf=\"itemForm.controls['identity'].errors\">\n                    <span class=\"error\">Please Enter Email.</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label>Password</label>\n              <div>\n                <input [type]=\"IsshowPassword ? 'text' : 'password'\" formControlName=\"password\"\n                       [ngModel]=\"formModel.password\" class=\"form-control\">\n                <div class=\"passicon\">\n                  <fa-icon (click)=\"showPassword()\" *ngIf=\"!IsshowPassword\" class=\"custom-search-botton\"\n                           [icon]=\"faEye\"></fa-icon>\n                  <fa-icon (click)=\"showPassword()\" *ngIf=\"IsshowPassword\" class=\"custom-search-botton\"\n                           [icon]=\"faEyeSlash\"></fa-icon>\n                </div>\n              </div>\n              <div *ngIf=\"itemForm.controls['password'].invalid && (itemForm.controls['password'].dirty || itemForm.controls['password'].touched)\"\n                   class=\"ng-dirty\">\n                <span *ngIf=\"itemForm.controls['password'].errors\">\n                  <span class=\"error\">Please Enter Password .</span>\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group rememberme\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"rememberMe\" [(ngModel)]=\"rememberMe\"\n                       name=\"rememberbtn\" id=\"rememberMe\">\n                <label class=\"form-check-label\" for=\"rememberMe\">\n                  Remember Me\n                </label>\n              </div>\n              <a class=\"forgetpass\" routerLink=\"/forgot-password\">Forget your password ?</a>\n            </div>\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\n              {{errorMessage}}\n            </div>\n            <div>\n              <button type=\"submit\" class=\"btn btn-login\" *ngIf=\"!isLoading\">Login</button>\n              <button type=\"button\" class=\"btn btn-login\" *ngIf=\"isLoading\">\n                <i class=\"fa-solid fa-circle-notch fa-spin\"></i>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div class=\"col-md-6 col-sm-12 px-0 mx-0\">\n        <div class=\"bg-image\">\n          <img src=\"assets/images/loginLogo.png\" alt=\"\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ConnectionServiceModule } from 'ng-connection-service';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    ConnectionServiceModule\n\n  ],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\n\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivate,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SharedService } from './shared.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogGuard implements CanActivate {\n  isLog: boolean = false;\n  constructor(private router: Router, private sharedService: SharedService) {\n    console.log(this.sharedService.getToken ? true : false);\n    this.isLog = this.sharedService.getToken ? true : false;\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    // return true;\n\n    if (this.sharedService.getToken) {\n      this.router.navigate(['/']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n"],"names":["RouterModule","LogGuard","LoginComponent","routes","path","component","canActivate","LoginRoutingModule","forChild","imports","exports","Validators","faUser","faEye","faEyeSlash","Subscription","i0","constructor","toastr","utlilitySerivce","spinner","router","formBuilder","httpserviceService","headerService","connectionService","_generalService","_commonService","_activeRoute","monitor","subscribe","isConnected","console","log","hasNetworkConnection","status","itemForm","group","identity","formModel","required","password","rememberMe","ngOnInit","checkRememberMe","getToken","queryParams","x","token","redirectUrl","localStorage","setItem","data","decodeToken","sessionStorage","Register2","register2","JSON","parse","getUserDetails","getUserPermissions","userId","response","stringify","GetUserDetails","userData","fullName","city","role","branch","register","registerObj","id","Id","registersName","RegistersName","registeBranch","branchId","RegisteBranch","BranchId","branchName","BranchName","City","getUserMenu","GetUserMenuNew","userMenu","menu","items","length","canClick","NavigateToRoute","url","filterCanClick","filter","ngOnDestroy","subscription","unsubscribe","isRemember","getItem","controls","setValue","isRemembered","showPassword","IsshowPassword","onLogin","valid","userInfo","isLoading","login","value","permissions","toString","roleId","Errors","errorMessage","ErrorMessageEn","error","hide","errors","markAllAsTouched","rememberMeClick","$event","alert","selectors","decls","vars","consts","template","ctx","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","ConnectionServiceModule","LoginModule","declarations","sharedService","isLog","route","state","navigate","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}