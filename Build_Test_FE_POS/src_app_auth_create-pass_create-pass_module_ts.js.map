{"version":3,"file":"src_app_auth_create-pass_create-pass_module_ts.js","mappings":"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","sources":["./src/app/auth/create-pass/create-pass-routing.module.ts","./src/app/auth/create-pass/create-pass.component.ts","./src/app/auth/create-pass/create-pass.component.html","./src/app/auth/create-pass/create-pass.module.ts","./src/app/auth/create-pass/modal-confirm-create/modal-confirm-create.component.ts","./src/app/auth/create-pass/modal-confirm-create/modal-confirm-create.component.html","./src/app/auth/create-pass/services/creat-pass.service.ts","./src/app/auth/create-pass/services/password.validator.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreatePassComponent } from './create-pass.component';\n\nconst routes: Routes = [{ path: '', component: CreatePassComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreatePassRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { faUser, faEye, faEyeSlash } from '@fortawesome/free-regular-svg-icons';\nimport { PasswordValidator } from './services/password.validator';\nimport { ModalConfirmCreateComponent } from './modal-confirm-create/modal-confirm-create.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CreatPassService } from './services/creat-pass.service';\n@Component({\n  selector: 'app-create-pass',\n  templateUrl: './create-pass.component.html',\n  styleUrls: ['./create-pass.component.scss'],\n})\nexport class CreatePassComponent {\n  formActive: FormGroup;\n\n  userId: any;\n  mobile: any;\n  errorMessage: any;\n  IsshowPassword: boolean = false;\n  faEye = faEye;\n  faEyeSlash = faEyeSlash;\n\n  constructor(\n    private creatPassService: CreatPassService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private modalService: NgbModal\n  ) {}\n  submitted = false;\n\n  ngOnInit(): void {\n    this.remveDataIsExist();\n    this.getForm();\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(params);\n      this.userId = params['userId'];\n      this.mobile = params['mobile'];\n      console.log(this.userId);\n      // this.GetUserDetails();\n    });\n\n    setTimeout(() => {\n      this.formActive.get('Mobile')?.patchValue('');\n      this.formActive.get('Mobile')?.patchValue(this.mobile);\n      this.formActive.get('Password')?.patchValue('');\n      this.formActive.get('UserId')?.patchValue(this.userId);\n    }, 1000);\n  }\n\n  getForm() {\n    this.formActive = this.fb.group({\n      UserId: 0,\n      Mobile: [''],\n      Password: ['', PasswordValidator.strong],\n      PasswordConfirm: [''],\n    });\n  }\n\n  get formValid(): { [key: string]: AbstractControl } {\n    return this.formActive.controls;\n  }\n\n  CreatePassword() {\n    this.submitted = true;\n\n    if (this.formActive.invalid) {\n      return window.scroll(0, 0);\n    }\n\n    // this.formGroup.get('UserId')?.patchValue(Number(this.userId));\n\n    // this.formGroup\n    //   .get('PasswordConfirm')\n    //   ?.patchValue(this.formGroup.get('Password')?.value);\n\n    const formData = new FormData();\n    const uid = +this.userId;\n    formData.append('UserId', this.userId);\n    formData.append('Mobile', this.formActive.get('Mobile')?.value);\n    formData.append('Password', this.formActive.get('Password')?.value);\n    formData.append('PasswordConfirm', this.formActive.get('Password')?.value);\n\n    console.log(formData);\n    return this.creatPassService\n      .CreatePassword(formData)\n      .subscribe((response: any) => {\n        if (response.isSuccess == true) {\n          // Your passwod successfully created, you can login to your account through markazia system now...\n          const modalRef = this.modalService.open(ModalConfirmCreateComponent);\n          modalRef.componentInstance.name = 'edit';\n          console.log(response);\n        } else {\n          this.errorMessage = response.Errors || response.errors;\n        }\n      });\n  }\n  GetUserDetails() {\n    this.creatPassService\n      .GetUserDetails(this.userId)\n      .subscribe((response: any) => {\n        if (response.isSuccess == true) {\n          const userDetails = response.data;\n          this.formActive.get('Mobile').patchValue(userDetails.mobile);\n        }\n      });\n  }\n\n  showPassword() {\n    this.IsshowPassword = this.IsshowPassword == false ? true : false;\n  }\n\n  numberOnly(event): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n\n  openModal() {\n    const modalRef = this.modalService.open(ModalConfirmCreateComponent);\n    modalRef.componentInstance.name = 'edit';\n  }\n\n  remveDataIsExist() {\n    localStorage.removeItem('fullName');\n    localStorage.removeItem('role');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('city');\n    localStorage.removeItem('register');\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n\n    // localStorage.removeItem('identity');\n    // localStorage.removeItem('password');\n    // localStorage.removeItem('rememberMe');\n\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('id');\n  }\n}\n","<div class=\"page-login\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-12\">\n        <div class=\"card-login\">\n          <img src=\"assets/images/markazia.png\" alt=\"logo\">\n          <div>\n            <p>Please fill your password to finish setting up <br>\n              your Markazia account and accessing your account. </p>\n          </div>\n          <form [formGroup]=\"formActive\" (ngSubmit)=\"CreatePassword()\" autocomplete=\"off\">\n            <div class=\"form-group\">\n              <label>Phone Number</label>\n              <div>\n                <img class=\"uimg\" src=\"assets/images/user.png\" alt=\"\">\n                <input type=\"text\" autocomplete=\"off\" formControlName=\"Mobile\" placeholder=\"\" class=\"form-control\"\n                  ng2TelInput [ng2TelInputOptions]=\"{'preferredCountries': ['jo', 'sa']}\" min=\"8\" max=\"10\" minlength=\"8\"\n                  maxlength=\"10\" (keypress)=\"numberOnly($event)\" required=\"\" />\n                <div\n                  *ngIf=\"submitted && formValid['Mobile'].invalid || formValid['Mobile'].invalid && (formValid['Mobile'].dirty || formValid['Mobile'].touched)\"\n                  class=\"ng-dirty\">\n                  <span class=\"error\" *ngIf=\"formValid['Mobile'].errors['required']\"> This element is required, please\n                    fill.</span>\n                  <span *ngIf=\"formValid['Mobile'].errors['minlength']\">\n                    <span class=\"error\">The digits are less than 10 for (mobile) and the digits are more than 8\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label>Password</label>\n              <div>\n                <input [type]=\"IsshowPassword ? 'text' : 'password'\" autocomplete=\"off\" formControlName=\"Password\"\n                  class=\"form-control\" required=\"\" min=\"8\" max=\"16\" minlength=\"8\" maxlength=\"16\">\n                <div class=\"passicon\">\n                  <fa-icon (click)=\"showPassword()\" *ngIf=\"!IsshowPassword\" class=\"custom-search-botton\"\n                    [icon]=\"faEye\"></fa-icon>\n                  <fa-icon (click)=\"showPassword()\" *ngIf=\"IsshowPassword\" class=\"custom-search-botton\"\n                    [icon]=\"faEyeSlash\"></fa-icon>\n                </div>\n              </div>\n              <div\n                *ngIf=\"submitted && formValid['Password'].invalid ||  formValid['Password'].invalid && (formValid['Password'].dirty || formValid['Password'].touched)\"\n                class=\"ng-dirty\">\n                <span class=\"error\" *ngIf=\"formValid['Password'].errors['required']\"> This element is required,\n                  please fill.</span>\n                <div *ngIf=\"formValid['Password'].errors['minlength']\">\n                  <span class=\"error\">Password cannot be less than 8 characters </span>\n                </div>\n              </div>\n              <!-- <h1> {{formGroup.get('Password').value.length}} </h1> -->\n              <div [hidden]=\"formActive.get('Password').value.length < 5\">\n                <span class=\"error\" *ngIf=\"formActive.get('Password').hasError('strong')\">\n                  Password should contain a minimum combination of 1 uppercase letter, 1 lowercase letter, 1 number,\n                  and\n                  1 symbol</span>\n              </div>\n              <div>\n\n              </div>\n            </div>\n\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\n              {{errorMessage}}\n            </div>\n            <div>\n              <button type=\"submit\" class=\"btn btn-login\">Activate Account</button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div class=\"col-md-6 col-sm-12\">\n        <div class=\"bg-image\">\n          <img src=\"assets/images/loginLogo.png\" alt=\"\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CreatePassRoutingModule } from './create-pass-routing.module';\nimport { CreatePassComponent } from './create-pass.component';\nimport { ModalConfirmCreateComponent } from './modal-confirm-create/modal-confirm-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\n\n@NgModule({\n  declarations: [CreatePassComponent, ModalConfirmCreateComponent],\n  imports: [\n    CommonModule,\n    CreatePassRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class CreatePassModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-modal-confirm-create',\n  templateUrl: './modal-confirm-create.component.html',\n  styleUrls: ['./modal-confirm-create.component.scss'],\n})\nexport class ModalConfirmCreateComponent {\n  @Input() name;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private modalService: NgbModal,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    console.log(this.name);\n\n    setTimeout(() => {\n      this.modalService.dismissAll();\n      this.router.navigateByUrl('/login');\n    }, 5000);\n  }\n\n  login() {\n    this.modalService.dismissAll();\n    this.router.navigateByUrl('/login');\n  }\n}\n","<div class=\"modal-body\">\n  <div class=\"message\">\n    <i class=\"fa-regular fa-circle-check\"></i>\n    <h3>\n      Your passwod successfully created,<br><br>\n      you can login to your account through markazia system now...</h3>\n\n      <button class=\"btn\" (click)=\"login()\" > Login </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SharedService } from '../../../services/shared.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreatPassService {\n  apiUrl = this.sharedService.getUrl;\n\n  constructor(private http: HttpClient, public sharedService: SharedService) {}\n\n  CreatePassword(body: any) {\n    return this.http.post(\n      this.apiUrl + `User/CreatePassword`,\n      body,\n      // this.sharedService.getHeaders()\n    );\n  }\n  GetUserDetails(id: number) {\n    return this.http.get(\n      this.apiUrl + `User/GetUSERDetails?userId=${id}`\n      // this.sharedService.getHeaders()\n    );\n  }\n}\n","import { FormControl } from '@angular/forms';\n\nexport interface ValidationResult {\n    [key: string]: boolean;\n}\n\nexport class PasswordValidator {\n\n    public static strong(control: FormControl): ValidationResult {\n        let hasNumber = /\\d/.test(control.value);\n        let hasUpper = /[A-Z]/.test(control.value);\n        let hasLower = /[a-z]/.test(control.value);\n        // console.log('Num, Upp, Low', hasNumber, hasUpper, hasLower);\n        const valid = hasNumber && hasUpper && hasLower;\n        if (!valid) {\n            // return what´s not valid\n            return { strong: true };\n        }\n        return null;\n    }\n}\n"],"names":["RouterModule","CreatePassComponent","routes","path","component","CreatePassRoutingModule","forChild","imports","exports","faEye","faEyeSlash","PasswordValidator","ModalConfirmCreateComponent","i0","constructor","creatPassService","route","fb","modalService","ngOnInit","remveDataIsExist","getForm","queryParams","subscribe","params","console","log","userId","mobile","setTimeout","formActive","get","patchValue","group","UserId","Mobile","Password","strong","PasswordConfirm","formValid","controls","CreatePassword","submitted","invalid","window","scroll","formData","FormData","uid","append","value","response","isSuccess","modalRef","open","componentInstance","name","errorMessage","Errors","errors","GetUserDetails","userDetails","data","showPassword","IsshowPassword","numberOnly","event","charCode","which","keyCode","openModal","localStorage","removeItem","sessionStorage","selectors","decls","vars","consts","template","ctx","CommonModule","FormsModule","ReactiveFormsModule","Ng2TelInputModule","CreatePassModule","declarations","activeModal","router","dismissAll","navigateByUrl","login","inputs","CreatPassService","http","sharedService","getUrl","body","post","apiUrl","id","factory","providedIn","control","hasNumber","test","hasUpper","hasLower","valid"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}